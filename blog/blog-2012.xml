<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/4.3.1" created="2015-11-29 06:14" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>They Call Me Mister James</title>
	<link>http://jameschambers.com</link>
	<description>Building the Web on the Cloud (and other musings)</description>
	<pubDate>Sun, 29 Nov 2015 06:14:15 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://jameschambers.com</wp:base_site_url>
	<wp:base_blog_url>http://jameschambers.com</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>james.chambers</wp:author_login><wp:author_email>james@jameschambers.com</wp:author_email><wp:author_display_name><![CDATA[james.chambers]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>


	<generator>http://wordpress.org/?v=4.3.1</generator>

	<item>
		<title>Upgrading Your Project To jQuery 1.8.0</title>
		<link>http://jameschambers.com/2012/09/upgrading-your-project-to-jquery-1-8-0/</link>
		<pubDate>Mon, 03 Sep 2012 17:44:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=661</guid>
		<description></description>
		<content:encoded><![CDATA[<p>If you are using jQuery UI on your project and you update jQuery to 1.8.0 you’ll also want to grab the latest bits of jQuery UI (which is, at the time of this post, sitting at 1.8.23).&nbsp; This is an important maintenance release, particularly if you’re using any jQuery UI components that make use of position.</p> <p>For our project, it was the slider control as well as autocomplete that revealed the problem.</p> <p>The jQuery library folks had marked $.curCSS as deprecated as of jQuery 1.4, but they still had it in at least 12 spots in jQuery UI 1.8.20. With the 1.8.0 release of the jQuery, $.curCSS is no longer there and you’ll start to get errors such as:</p> <blockquote> <p>Object doesn't support property or method "curCSS"</p></blockquote> <p>Or, similarily:</p> <blockquote> <p>$.curcss is not a function</p></blockquote> <blockquote></blockquote> <p>Moving to jQuery UI 1.8.23 will fix this for you. There is a post <a href="http://blog.jqueryui.com/2012/08/jquery-ui-1-8-23/" target="_blank">here</a> explaining some of the details and a very brief <a href="http://jqueryui.com/docs/Changelog/1.8.23" target="_blank">changelog</a> that details the position bits.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>661</wp:post_id>
		<wp:post_date>2012-09-03 17:44:00</wp:post_date>
		<wp:post_date_gmt>2012-09-03 17:44:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>upgrading-your-project-to-jquery-1-8-0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="post_tag" nicename="jquery-ui"><![CDATA[jQuery UI]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3781208346]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>37711</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Cullina]]></wp:comment_author>
			<wp:comment_author_email>michael@cullina.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>65.123.165.10</wp:comment_author_IP>
			<wp:comment_date>2014-09-10 20:41:51</wp:comment_date>
			<wp:comment_date_gmt>2014-09-10 20:41:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for this.  It was exactly what we needed.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[2036812606]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38031</wp:comment_id>
			<wp:comment_author><![CDATA[james.chambers]]></wp:comment_author>
			<wp:comment_author_email>james@jameschambers.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>206.45.140.40</wp:comment_author_IP>
			<wp:comment_date>2014-09-26 00:40:24</wp:comment_date>
			<wp:comment_date_gmt>2014-09-26 00:40:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great, glad to hear it helped! Cheers,
-jc]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>37711</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[2036812606]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[2036812607]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Bootstrap + Mvc: Controlling Template Rendering</title>
		<link>http://jameschambers.com/2012/07/bootstrap-mvc-controlling-template-rendering/</link>
		<pubDate>Wed, 11 Jul 2012 17:45:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=671</guid>
		<description></description>
		<content:encoded><![CDATA[<p>As we explore Twitter's CSS and JavaScript library in Asp.Net MVC, we're starting to get into the meat of "Bootstrapping" our site, and exploring control templates. If you'd like to keep up with the project code, you can check out the repository on <a href="https://github.com/MisterJames/BootstrappingMvc" target="_blank">GitHub</a>. With a few clean-ups on the create form, our site is now looking like this:</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Bootstrap--Mvc-Controlling-Template-Rend_7B1/image_3.png" width="419" height="242"></p> <p>When you create display and editor templates to override the default templates offered for types by the Mvc Framework, you don't always want those templates used. How do you get around this?</p><iframe height="315" src="http://www.youtube.com/embed/EGnsj6zuUcs" frameborder="0" width="560" allowfullscreen></iframe> <p>Change the name of your template to something that doesn't match an existing type, then use the UIHint attribute to coerce the property into using your template when being rendered.&nbsp; Nice!&nbsp; Here's a property with the correct attributing:</p><pre class="csharpcode">[Display(Name = <span class="str">"VIP - Skip the Line"</span>)]
[UIHint(<span class="str">"SwitchedBoolean"</span>)]
<span class="kwrd">public</span> <span class="kwrd">bool</span> CanSkipLine { get; set; }
</pre>
<p>&nbsp;</p>
<style type="text/css">.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>

<p>You can follow the posts in this series from the <a href="http://oldblog.jameschambers.com/blog/bootstrap-asp.net-mvc-quickhits-installing-bootstrap" target="_blank">main page</a>, where I'm curating the links to the instalments of the series.</p>
<p>Cheers!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>671</wp:post_id>
		<wp:post_date>2012-07-11 17:45:00</wp:post_date>
		<wp:post_date_gmt>2012-07-11 17:45:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bootstrap-mvc-controlling-template-rendering</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[Asp.Net MVC]]></category>
		<category domain="post_tag" nicename="bootstrap"><![CDATA[Bootstrap]]></category>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="post_tag" nicename="mvc"><![CDATA[MVC]]></category>
		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>
		<category domain="post_tag" nicename="visual-studio-2012"><![CDATA[Visual Studio 2012]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3781652642]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bootstrapping Mvc - Say No to Checkboxes</title>
		<link>http://jameschambers.com/2012/07/bootstrapping-mvc-say-no-to-checkboxes/</link>
		<pubDate>Sun, 08 Jul 2012 17:47:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=681</guid>
		<description></description>
		<content:encoded><![CDATA[<p>We’re diving deeper today and getting to some of the good stuff, in particular, we’re going to start muxing the best of Bootstrap (the jQuery plugins) with some of the framework features Mvc has to offer.&nbsp; Again, I'm working through the CSS and JavaScript library called "Bootstrap" from Twitter, and munging it in with Asp.Net's Mvc Framework using Visual Studio 2012 RC.</p> <p>The default display templates for boolean property values can be quite different – nullables are rendered as drop downs, non-nullable bools are checkboxes – but we have the ability to override the Framework and change the way these are rendered.&nbsp; This video walks you through, and of course, you can download the code from GitHub <a href="htt[://github.com/MisterJames/BootstrappingMvc" target="_blank">on this project's page.</a> You can also keep up with this entire series from the intro page, where I’m listing all of the posts related to these posts.</p> <p>Here’s today’s entry:</p> <iframe width="560" height="315" src="http://www.youtube.com/embed/4_Lqq6ZUj2A" frameborder="0" allowfullscreen></iframe> <p>The video is in HD, so make sure you full-screen-a-size-it to see the code.&nbsp; Speaking of code...</p> <h2>The Code That Makes it Tick</h2> <p>What I did for this post was override the default templates in MVC that are used to render boolean properties. If you use DisplayFor and EditorFor explicitly in your views, or if you use the scaffolders that are part of the MVC tooling, then you may be familiar with the controls that are rendered. They are fine, but they just don't look like the rest of our site when we're using Bootstrap.</p> <p>For our DisplayTemplate, I'm using Bootstrap's label classes on spans. You can't edit the properties when you're in 'display' mode anyways, so let's try to pretty it up a bit.&nbsp; Put this code in a partial view called Boolean.cshtml under Views/Shared/DisplayTemplates:</p><pre class="csharpcode">@model <span class="kwrd">bool</span>?

@<span class="kwrd">if</span> (Model.HasValue)
{
    <span class="kwrd">if</span> (Model.Value)
        { &lt;span <span class="kwrd">class</span>=<span class="str">"label label-success"</span>&gt;Yes&lt;/span&gt; }
    <span class="kwrd">else</span>
        { &lt;span <span class="kwrd">class</span>=<span class="str">"label label-important"</span>&gt;No&lt;/span&gt; }
}
<span class="kwrd">else</span>
    { &lt;span <span class="kwrd">class</span>=<span class="str">"label label-inverse"</span>&gt;Not Set&lt;/span&gt; }</pre>
<p>&nbsp;</p>
<style type="text/css">.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>

<p>And for the editor, in EditorTemplates, you'll need a Boolean.cshtml partial view as well. Here, we're setting up some vars that will allow us to make use of the new nullable class attributes in MVC4.&nbsp; Then, we render yes/no buttons and <em>conditionally</em> render the "do not set" button based on the field's metadata.</p><pre class="csharpcode">    @model <span class="kwrd">bool</span>?

    @{
        <span class="rem">// make use of MVC4 nullable class attribute values</span>
        var yesSelected = Model.HasValue &amp;&amp; Model.Value ? <span class="str">"active"</span> : <span class="kwrd">null</span> ;
        var noSelected = Model.HasValue &amp;&amp; !Model.Value ? <span class="str">"active"</span> : <span class="kwrd">null</span>;
        var noSelection = !Model.HasValue ? <span class="str">"active"</span> : <span class="kwrd">null</span>;   
    
        <span class="rem">// get the name of the ID - this is to support multiple fields     </span>
        var htmlField = ViewData.TemplateInfo.HtmlFieldPrefix;
    }

    @Html.HiddenFor(model =&gt; model)

    &lt;div <span class="kwrd">class</span>=<span class="str">"btn-group"</span> data-toggle=<span class="str">"buttons-radio"</span>&gt;
        &lt;button type=<span class="str">"button"</span> <span class="kwrd">class</span>=<span class="str">"btn btn-info @yesSelected bool-@htmlField"</span> onclick=<span class="str">"javascript:$('#@htmlField').val(true);"</span> &gt;Yes&lt;/button&gt;
        &lt;button type=<span class="str">"button"</span> <span class="kwrd">class</span>=<span class="str">"btn btn-info @noSelected bool-@htmlField"</span> onclick=<span class="str">"javascript:$('#@htmlField').val(false);"</span> &gt;No&lt;/button&gt;
    
        @<span class="kwrd">if</span> (ViewData.ModelMetadata.IsNullableValueType)
            { &lt;button type=<span class="str">"button"</span> <span class="kwrd">class</span>=<span class="str">"btn btn-info @noSelection bool-@htmlField"</span> onclick=<span class="str">"javascript:$('#@htmlField').val('');"</span> &gt;Do Not Set&lt;/button&gt; }

    &lt;/div&gt;</pre>
<h2>Wrapping Up</h2>
<p>Again, the project is on <a href="http://github.com/misterjames/bootstrappingmvc" target="_blank">GitHub</a> for you to follow along or experiment, but it's very easy to File –&gt; New Project and follow along with the video.&nbsp; We're going to keep working through the jQuery plugins and find uses – contrived if we have to! – for each one. </p>
<p>If you don't already have a copy of Visual Studio 2012, <a href="http://www.microsoft.com/visualstudio/11/en-us/downloads" target="_blank">get it here</a>.&nbsp; Happy coding!</p>
<p>Cheers!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>681</wp:post_id>
		<wp:post_date>2012-07-08 17:47:00</wp:post_date>
		<wp:post_date_gmt>2012-07-08 17:47:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bootstrapping-mvc-say-no-to-checkboxes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[Asp.Net MVC]]></category>
		<category domain="post_tag" nicename="bootstrap"><![CDATA[Bootstrap]]></category>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="post_tag" nicename="mvc"><![CDATA[MVC]]></category>
		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>
		<category domain="post_tag" nicename="visual-studio-2012"><![CDATA[Visual Studio 2012]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3781207073]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>35051</wp:comment_id>
			<wp:comment_author><![CDATA[Glyn Lewis]]></wp:comment_author>
			<wp:comment_author_email>gl9289@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>174.1.159.66</wp:comment_author_IP>
			<wp:comment_date>2014-03-21 05:09:35</wp:comment_date>
			<wp:comment_date_gmt>2014-03-21 05:09:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I cannot get this to work like radio buttons on bootstrap 3, is "data-toggle="buttons-radio" still valid on bootstrap V3 ??]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[2036811651]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36771</wp:comment_id>
			<wp:comment_author><![CDATA[james.chambers]]></wp:comment_author>
			<wp:comment_author_email>james@jameschambers.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>206.45.140.40</wp:comment_author_IP>
			<wp:comment_date>2014-07-19 22:46:02</wp:comment_date>
			<wp:comment_date_gmt>2014-07-19 22:46:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[No, it's been changed for 3.x+. Please check out my current series on Bootstrap and MVC for more, where I revisit the button.
http://jameschambers.com/2014/06/day-0-boothstrapping-mvc-for-the-next-30-days/

Cheers,
-jc]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>35051</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[2036811651]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[2036811653]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>39821</wp:comment_id>
			<wp:comment_author><![CDATA[Connie]]></wp:comment_author>
			<wp:comment_author_email>connie.decinko@azbar.org</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>69.71.58.174</wp:comment_author_IP>
			<wp:comment_date>2015-03-18 22:37:35</wp:comment_date>
			<wp:comment_date_gmt>2015-03-18 22:37:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Trying to use this with Bootstrap 2 and MVC.  I get the pretty buttons but when I click on them I get the following error:  

SCRIPT5022: cannot call methods on button prior to initialization; attempted to call method 'toggle'
File: jquery-1.10.2.min.js, Line: 21, Column: 4106

In my partial view I have
@Html.EditorFor(model =&gt; model.isActive)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[2036811650]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Bootstrapping Mvc - The Completed Template</title>
		<link>http://jameschambers.com/2012/07/bootstrapping-mvc-the-completed-template/</link>
		<pubDate>Fri, 06 Jul 2012 17:48:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=691</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Installment number three <a href="http://oldblog.jameschambers.com/blog/bootstrap-asp.net-mvc-quickhits-installing-bootstrap">in the series</a> where I’m covering Bootstrap and Asp.Net MVC 4, primarily working in Visual Studio 2012.&nbsp; In this video I’m walking through the completed template and showing what you get with just a short amount of effort.&nbsp; Hey, it’s looking pretty good!</p><iframe height="315" src="http://www.youtube.com/embed/phtayuZyJVA" frameborder="0" width="560" allowfullscreen></iframe> <p>Yes, for sure, we'll likely be folding in some other updates as we go, but we're off to a good start here folks. If you squint enough, this site looks just like Twitter.</p> <p>Next up is our foray into the jQuery plugins that Bootstrap offers, and we’re going to have a little fun with that. I mean, c’mon, what good is playing with Bootstrap in Mvc 4 if we don’t play with the fun bits* of Mvc 4?&nbsp; Teaser: I’m about to redefine the way you love you some checkboxes.</p> <p>Check out the <a href="http://oldblog.jameschambers.com/blog/bootstrap-asp.net-mvc-quickhits-installing-bootstrap">series page</a> to see the list of videos I’m working on.</p> <p><em>*Please note, no fun bits were injured in the making of this video.</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>691</wp:post_id>
		<wp:post_date>2012-07-06 17:48:00</wp:post_date>
		<wp:post_date_gmt>2012-07-06 17:48:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bootstrapping-mvc-the-completed-template</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[Asp.Net MVC]]></category>
		<category domain="post_tag" nicename="bootstrap"><![CDATA[Bootstrap]]></category>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="post_tag" nicename="mvc"><![CDATA[MVC]]></category>
		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>
		<category domain="post_tag" nicename="visual-studio-2012"><![CDATA[Visual Studio 2012]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3781207111]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>34911</wp:comment_id>
			<wp:comment_author><![CDATA[Randy Martin]]></wp:comment_author>
			<wp:comment_author_email>randy@mariposa.us</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>204.65.143.206</wp:comment_author_IP>
			<wp:comment_date>2014-01-13 19:44:02</wp:comment_date>
			<wp:comment_date_gmt>2014-01-13 19:44:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I guess this series of posts sort of fell by the wayside now that VS 2013 with MVC 5, EF 6, and Bootstrap 3 is out. However, what would be really helpful is a "real" (as in not empty) MVC 5 web application template for VS 2012. Some shops, like mine, are not planning on upgrading to VS 2013 anytime soon, so a more robust starter template for VS 2012 with all the new bells and whistles would be great.

What I've started doing is creating a project in VS 2013 and then opening the project in VS 2012. This seems to work OK, but does require that you have at least the express version of VS 2013 installed as well as VS 2012.

Do you know of any project templates for VS 2012, or anyone who might be working on one?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[2036811688]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Bootstrapping MVC - Updating Your Site Layout</title>
		<link>http://jameschambers.com/2012/07/bootstrapping-mvc-updating-your-site-layout/</link>
		<pubDate>Thu, 05 Jul 2012 17:49:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=701</guid>
		<description></description>
		<content:encoded><![CDATA[<p>So, <a href="http://oldblog.jameschambers.com/blog/bootstrap-asp.net-mvc-quickhits-installing-bootstrap">last time</a> I walked you through how easy it was to get Twitter.Bootstrap into your Asp.Net Mvc project in Visual Studio 2010. In this post, I walk you through what it takes to get the _Layout.cshtml updated so that your web site starts spanking like Spanish mule.&nbsp; I have no idea what that means.</p><iframe height="315" src="http://www.youtube.com/embed/Li9zby_xOK0" frameborder="0" width="560" allowfullscreen></iframe> <p>Be sure to pop out the player or view it on YouTube as I put the post up in HD so that the code was easy to see. You’ll want to do that to follow along.&nbsp; This is a bit of a longer post, but I walk you through a fair bit of content.</p> <p>And hey, stay tuned…in the coming days I’m going to cover a ton of stuff.&nbsp; Check out the <a href="http://oldblog.jameschambers.com/blog/bootstrap-asp.net-mvc-quickhits-installing-bootstrap">intro post</a> to see the list of videos I’m working on.</p> <p>See ya soon!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>701</wp:post_id>
		<wp:post_date>2012-07-05 17:49:00</wp:post_date>
		<wp:post_date_gmt>2012-07-05 17:49:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bootstrapping-mvc-updating-your-site-layout</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[Asp.Net MVC]]></category>
		<category domain="post_tag" nicename="bootstrap"><![CDATA[Bootstrap]]></category>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>
		<category domain="post_tag" nicename="visual-studio-2012"><![CDATA[Visual Studio 2012]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3782473000]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bootstrap + The Asp.Net Mvc Framework: Building Your Site on Bootstrap</title>
		<link>http://jameschambers.com/2012/07/bootstrap-asp-net-mvc-quickhits-installing-bootstrap/</link>
		<pubDate>Wed, 04 Jul 2012 17:50:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=711</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Looking for a quick overview of Bootstrap and what it can offer your project?&nbsp; Add a little flavor to your Html with easy-to-apply CSS and JavaScript components. Here’s how!&nbsp; This intro video uses Visual Studio, the Bootstrap NuGet package and the Asp.Net Mvc Framework to build out a little eye candy.</p> <div id="scid:5737277B-5D6D-4f48-ABFC-DD9C333F4C5D:55b240e4-d083-44cc-bc00-57a27dc2951b" class="wlWriterSmartContent" style="float: none; padding-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px"> <div id="8aad3f7c-f078-4bf0-84f3-3368e50784cb" style="padding-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px"> <div><embed type="application/x-shockwave-flash" height="317" width="565" src="http://www.youtube.com/v/T6vIfkSzEzk?hl=en&amp;hd=1"></div></div> <div style="font-size: 0.8em; clear: both; width: 565px">Bootstrapping your Asp.Net MVC Projects</div></div> <p>This is quick and dirty! Fear not the Package Manager Console and you, too, can conform to the awesomeness of Web 2.0.&nbsp; The UXiness of it, the CSS3isms, the jQuery, oh, yes, the jQuery!</p> <h2>A Note on Versions</h2> <p>Twitter.Bootstrap is evolving and changing quickly. As such, I highly recommend viewing these posts as guidelines and inspirations that you can apply in your projects. Keep in mind that there have been several significant updates to the library since I started this series and I can’t possibly keep all the videos up to date. If you’d like me to refresh one, please let me know!</p> <p>That said, the topics I’m going to cover include (links to completed ones):</p> <ol> <li>Installing Bootstrap (this post)&nbsp; <li><a href="http://oldblog.jameschambers.com/blog/bootstrapping-mvc-updating-your-site-layout">Setting up a template</a> <ol><!--StartFragment--> <li><a title="The Completed Mvc Template" href="http://oldblog.jameschambers.com/blog/bootstrapping-mvc---the-completed-template">The Completed Template</a> <li><a href="http://jameschambers.com/2013/02/bootstrapping-asp-net-mvcintroduction-to-twitter-bootstrap-mvc4/" target="_blank">Using Twitter.Bootstrap.Mvc4 as a kick-starter</a></li></ol></li> <li>Reviewing and integrating the plugins, including:  <ol> <li>Carousel  <li>Typeahead  <li>Alerts  <li>Buttons  <ol> <li><a href="http://oldblog.jameschambers.com/blog/bootstrapping-mvc---say-no-to-checkboxes" target="_blank">Say no to Checkboxes</a>! </li></ol> <li>Collapse  <li>Modals  <li>Dropdowns  <li>Popovers  <li>Togglable Tabs (hey, that’s not even a word!)  <li>Tooltips  <li>Scrollspy </li></ol> <li>Leveraging coolness in the Mvc Framework to make Bootstrap even more strapping.&nbsp; See what I did there? <img class="wlEmoticon wlEmoticon-smile" alt="Smile" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Bootstrapping-Asp.Net-Mvc_FC7A/wlEmoticon-smile_2.png">  <ol> <li><a href="http://oldblog.jameschambers.com/blog/bootstrap-mvc-controlling-template-rendering" target="_blank">Controlling Template Rendering</a>  <li><a href="http://oldblog.jameschambers.com/blog/bootstrap-mvc---fixing-the-navbar">Fixing the Navbar and Starting Authentication</a> </li></ol></li></ol> <p>If you want to have a look at the code I'm developing as I write this, be sure to check out the repo on GitHub: <a href="https://github.com/MisterJames/BootstrappingMvc">https://github.com/MisterJames/BootstrappingMvc</a></p> <p>Stay tuned and I’ll keep this page updated as I go.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>711</wp:post_id>
		<wp:post_date>2012-07-04 17:50:00</wp:post_date>
		<wp:post_date_gmt>2012-07-04 17:50:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bootstrap-asp-net-mvc-quickhits-installing-bootstrap</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[Asp.Net MVC]]></category>
		<category domain="post_tag" nicename="bootstrap"><![CDATA[Bootstrap]]></category>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="post_tag" nicename="nuget"><![CDATA[NuGet]]></category>
		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>
		<category domain="post_tag" nicename="visual-studio-2010"><![CDATA[Visual Studio 2010]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3783127076]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Regular Expressions in Visual Studio - Turning A Querystring into a Class</title>
		<link>http://jameschambers.com/2012/05/regular-expressions-in-visual-studio-turning-a-querystring-into-a-class/</link>
		<pubDate>Tue, 22 May 2012 17:51:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=721</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote> <p>This post will help you create a class that can be used in MVC Framework model binding, but is also a good demonstration of the Regular Expression support in Visual Studio's Find &amp; Replace feature.&nbsp; The class created can be used with PayPal's IPN notifications.</p></blockquote> <p>I just started working with the PayPal "Instant Payment Notification" API again. I wanted to use the model binding capabilities of Asp.Net MVC, so the first task was to extract the querystring variables and make properties out of them.&nbsp; The sample querystring from the PayPay documentation for IPN is as follows:</p><pre class="csharpcode" style="margin-left: 15px">mc_gross=19.95&amp;protection_eligibility=Eligible&amp;address_status=confirmed&amp;payer_id=LPLWNMTBWMFAY<br>&amp;tax=0.00&amp;address_street=1+Main+St&amp;payment_date=20%3A12%3A59+Jan+13%2C+2009+PST&amp;payment_status=Completed<br>&amp;charset=windows-1252&amp;address_zip=95131&amp;first_name=Test&amp;mc_fee=0.88&amp;address_country_code=US&amp;address_name=Test+User<br>&amp;notify_version=2.6&amp;custom=&amp;payer_status=verified&amp;address_country=United+States&amp;address_city=San+Jose<br>&amp;quantity=1&amp;verify_sign=AtkOfCXbDm2hu0ZELryHFjY-Vb7PAUvS6nMXgysbElEn9v-1XcmSoGtf&amp;payer_email=gpmac_1231902590_per%40paypal.com<br>&amp;txn_id=61E67681CH3238416&amp;payment_type=instant&amp;last_name=User&amp;address_state=CA&amp;receiver_email=gpmac_1231902686_biz%40paypal.com<br>&amp;payment_fee=0.88&amp;receiver_id=S8XGHLYDW9T3S&amp;txn_type=express_checkout&amp;item_name=&amp;mc_currency=USD&amp;item_number=<br>&amp;residence_country=US&amp;test_ipn=1&amp;handling_amount=0.00&amp;transaction_subject=&amp;payment_gross=19.95&amp;shipping=0.00</pre>
<p>As you can see, it's a bit of a mess.&nbsp; It's all on one line (if you copy and paste their sample) and you will need to break out the key-value pairs. This is made especially easy in Visual Studio, if you know a few tricks.</p>
<p>Start by adding a blank Text Document to your project and then paste in the IPN querystring provided by PayPal.&nbsp; Here are the steps to build the class:</p>
<ol>
<li>Press CTRL + H to invoke the replace dialog. The first replace operation is to search for &amp; and to replace with \n. Make sure you have "Use Regular Expressions" enabled in the options pull down.&nbsp; We're simply searching for an ampersand character and replacing it with a new line.<br><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/4181caf209ff_AB4E/image_5.png" width="356" height="101"> 
<li>Press the button for Replace All and it'll break everything on to separate lines for you. 
<li>Next, search for =.* and replace it with nothing. This blanks out everything from the = sign on. 
<li>Finally, we need to capture the text on the entire line. I had a couple of hiccups trying to get the capture working in Visual Studio, but this worked for me: 
<ol>
<li>Search for: ^{.*}$ 
<li>Replace with: public string \1 { get; set; }<br><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/4181caf209ff_AB4E/image_9.png" width="210" height="260"></li></ol></li></ol>
<p>&nbsp;</p>
<p>^ is a character for "start of line" and $ is the character representing "end of line". The {.*} bits in between captures everything else on the line into a numbered group. Captured groups are numbered and start at 1.&nbsp; In our replace statement, we're basically writing out properties and using the \1 to insert the property name that we captured in the curly braces. </p>
<blockquote>
<p>Note: at the time of this writing, I had to use VS2010 to do this last operation because VS11 Beta is not really giving the regex a lot of love.</p></blockquote>
<p>When you've completed all those bits, you'll have a bunch of properties ready to paste into a class:</p>
<p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/4181caf209ff_AB4E/image_12.png" width="322" height="185"></p>
<p>If you're interested, this is the class you need as an action parameter in an Asp.Net MVC project to capture the querystring parameters provided by the PayPal Instant Payment Notification (or IPN):</p><pre class="csharpcode">    <span class="kwrd">public</span> <span class="kwrd">class</span> PayPalIpnRequest
    {
        <span class="kwrd">public</span> <span class="kwrd">string</span> mc_gross { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> protection_eligibility { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> address_status { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> payer_id { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> tax { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> address_street { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> payment_date { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> payment_status { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> address_zip { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> first_name { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> mc_fee { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> address_country_code { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> address_name { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> notify_version { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> custom { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> payer_status { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> address_country { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> address_city { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> quantity { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> verify_sign { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> payer_email { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> txn_id { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> payment_type { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> last_name { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> address_state { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> receiver_email { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> payment_fee { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> receiver_id { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> txn_type { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> item_name { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> mc_currency { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> item_number { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> residence_country { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> test_ipn { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> handling_amount { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> transaction_subject { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> payment_gross { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> shipping { get; set; }

    }</pre>
<style type="text/css">.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>721</wp:post_id>
		<wp:post_date>2012-05-22 17:51:00</wp:post_date>
		<wp:post_date_gmt>2012-05-22 17:51:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>regular-expressions-in-visual-studio-turning-a-querystring-into-a-class</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[Asp.Net MVC]]></category>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="post_tag" nicename="paypal"><![CDATA[PayPal]]></category>
		<category domain="post_tag" nicename="visual-studio-11"><![CDATA[Visual Studio 11]]></category>
		<category domain="post_tag" nicename="visual-studio-2010"><![CDATA[Visual Studio 2010]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3797763985]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Removing Tracked Files After Adding A Rule to .gitignore</title>
		<link>http://jameschambers.com/2012/05/removing-tracked-files-after-adding-a-rule-to-gitignore/</link>
		<pubDate>Thu, 10 May 2012 17:52:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=731</guid>
		<description></description>
		<content:encoded><![CDATA[<p>As I learn some of the workings of git in the normal flow of daily use, I struggled for a few minutes this afternoon trying to scrub a directory of DLLs that had been committed to a repo.&nbsp; These files were previously tracked, so even though the rule was correct, git wasn’t dropping tracking to the files.</p> <p>Here’s the fix from the mouth of the horse:</p> <blockquote> <h4>.gitignore</h4> <p>If you create a file in your repo named <code>.gitignore</code> git will use its rules when looking at files to commit. Note that git will <strong>not</strong> ignore a file that was already tracked before a rule was added to this file to ignore it. In such a case the file must be un-tracked, usually with <code>git rm --cached filename</code></p></blockquote> <p>There ya be.&nbsp; So, create your rule, rm the files and <em>then</em> do your git status to see the changes.&nbsp; The removing them from tracking is also a change that will have to be committed.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>731</wp:post_id>
		<wp:post_date>2012-05-10 17:52:00</wp:post_date>
		<wp:post_date_gmt>2012-05-10 17:52:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>removing-tracked-files-after-adding-a-rule-to-gitignore</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="post_tag" nicename="git"><![CDATA[Git]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3790382254]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Cloudy With a Chance of Mobile: Building Our Data Model &#038; API</title>
		<link>http://jameschambers.com/2012/04/cloudy-with-a-chance-of-mobile-building-our-data-model-amp-api/</link>
		<pubDate>Fri, 20 Apr 2012 17:53:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=741</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote> <p>Interested in having a web site that supports user-specific data? Perfect, use Asp.Net and the built in membership providers. Want to put it in the cloud? Sweet, jump on the Azure bandwagon. Want to easily define your data model and store it? No worries, EF Code First will make you cry, you love it so much. Want to access that data from Windows Phone? Well, my friend, you've come to the right place. If you want to follow along from the beginning, please check out the <a href="http://oldblog.jameschambers.com/blog/cloudy-with-a-chance-of-mobile-mvc-framework-windows-azure-and-windows-phone" target="_blank">first post in the series</a>.</p></blockquote> <p><span style="color: #666666" color="#666666">With my projects roughly set up the way I'd like them to be I can now start building my data model using Entity Framework or "EF".&nbsp; I'll use the model definition to quickly scaffold some UI and add some data to my project.</span></p> <p><span style="color: #666666" color="#666666">I will then expose that data via the new Web API available in Mvc 4.&nbsp; Though I have two solutions set up, I'll only be working in the Mvc 4 project for this tutorial.&nbsp; A reminder that if you're opening the IDE to follow along after a break you'll need to open it up in Administrator mode for the Azure environment to run correctly.</span></p> <h2><span style="color: #666666" color="#666666">Our Data Class</span></h2> <p><span style="color: #666666" color="#666666">To keep things simple I'm going to use a single entity class – and ultimately a single table – for this exercise.&nbsp; In the Mvc 4 project, use the Solution Explorer to locate and then right-click on the Models folder to add a new class called PhoneNumberEntry.&nbsp; The class will look like the following:</span></p><pre class="csharpcode">    <span class="kwrd">public</span> <span class="kwrd">class</span> PhoneNumberEntry
    {
        <span class="kwrd">public</span> <span class="kwrd">int</span> PhoneNumberEntryId { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> FirstName { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> LastName { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> PhoneNumber { get; set; }
        <span class="kwrd">public</span> <span class="kwrd">string</span> UserName { get; set; }
    }</pre>
<p><span style="color: #666666" color="#666666">Hey, don't judge. I said I was keeping it simple. <img class="wlEmoticon wlEmoticon-winkingsmile" style="border-top-style: none; border-left-style: none; border-bottom-style: none; border-right-style: none" alt="Winking smile" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Cloudy-With-a-Chance-of-Mobile-Building-_DC61/wlEmoticon-winkingsmile_2.png"></span></p>
<p><span style="color: #666666" color="#666666">Next, I need to tell EF how to create the database, namely, I have to tell it what tables to create and of which entity. I do this through inheritance and attributes on our classes.&nbsp; You can put this definition in the same file as the PhoneNumberEntry class.&nbsp; Again, it's very light weight.</span></p><pre class="csharpcode">    <span class="kwrd">public</span> <span class="kwrd">class</span> ContactContext: DbContext
    {
        <span class="kwrd">public</span> DbSet&lt;PhoneNumberEntry&gt; PhoneNumberEntries { get; set; }
    }</pre>
<p><span style="color: #666666" color="#666666">Perfect, now I'm rolling. To create the UI, I'm simply going to use the tooling that's built into the MVC Framework through Visual Studio 2010. In order to fully leverage this, I need to compile my classes so that the IDE can reflect on my project and show me a list of them.&nbsp; I like to use the keyboard shortcut Shift + Ctrl + B to build. </span></p>
<h2><span style="color: #666666" color="#666666">Building the Views</span></h2>
<p><span style="color: #666666" color="#666666">With my project compiled, I right-click on the Controllers folder in Project Explorer and select Add –&gt; Controller. I name my controller appropriately, select my PhoneNumberEntry class and name a new Data Context Class.&nbsp; I choose the Controller with read/write actions and views, using Entity Framework as the template.</span></p>
<p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Cloudy-With-a-Chance-of-Mobile-Building-_DC61/image_3.png" width="384" height="250"></p>
<p>The tooling builds my controller and scaffolds out my views for me. </p>
<p>I only want members who have registered to create entries, and I want to each user to have their own list. I created a UserName property on my model, so I now need to deal with that field on my own. In my Create and Edit views, I remove the UserName field. Here's an example of what that HTML looked like before I removed it:</p>
<p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Cloudy-With-a-Chance-of-Mobile-Building-_DC61/image_6.png" width="412" height="125"></p>
<p>With that out of the way (in both Create and Edit) I need to update my controller accordingly. I open PhoneNumberEntryController in the Controllers folder and add the Authorize attribute to my class. </p><pre class="csharpcode">    [Authorize]
    <span class="kwrd">public</span> <span class="kwrd">class</span> PhoneNumberEntryController : Controller
    {
        <span class="rem">// ...rest of class here</span>
    }</pre>
<p>By attributing the controller in this way (at the class level), I am telling the Asp.Net runtime that any user who accesses any action on this controller needs to be logged in using the authentication scheme of the site.&nbsp; Now, all users who try to navigate to any of my Phone Numbers pages will first be prompted to log in.</p>
<p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Cloudy-With-a-Chance-of-Mobile-Building-_DC61/image_9.png" width="260" height="142"></p>
<h2>Driven By the Logged in User</h2>
<p>Next, I want to make sure that the user only ever sees the phone numbers that they create.&nbsp; The index method needs to be adjusted to only return the appropriate entries.</p><pre class="csharpcode">    <span class="kwrd">public</span> ActionResult Index()
    {
        <span class="kwrd">string</span> username = User.Identity.Name;

        var phoneNumbers = db.PhoneNumberEntries
            .Where(p =&gt; p.UserName == username)
            .ToList();

        <span class="kwrd">return</span> View(phoneNumbers);
    }</pre>
<p>In the Create and Edit methods decorated with the HttpPost attribute (these are the methods that accept the PhoneNumberEntry parameters from the form) I add a bit of code to capture the user's login name and store that in the model.</p><pre class="csharpcode">    [HttpPost]
    <span class="kwrd">public</span> ActionResult Create(PhoneNumberEntry phonenumberentry)
    {
        <span class="kwrd">string</span> username = User.Identity.Name;
        phonenumberentry.UserName = username;

        <span class="kwrd">if</span> (ModelState.IsValid)
        {
            db.PhoneNumberEntries.Add(phonenumberentry);
            db.SaveChanges();
            <span class="kwrd">return</span> RedirectToAction(<span class="str">"Index"</span>);
        }

        <span class="kwrd">return</span> View(phonenumberentry);
    }</pre>
<blockquote>
<p><strong>Important note</strong>: There are many more security considerations to take and I am only demonstrating some bare minimums. In a real-world scenario you would use a repository outside of the controller and would do the appropriate checks to protect your data at various levels of your project. Particularly, any code to retrieve or modify the data should have checks in place to ensure the user is authorized to view or modify the resource in question.&nbsp; As an exercise to the reader, work through the PhoneNumberEntryController and firm up the user access/rights to a better degree.</p></blockquote>
<p>Everything should be set here to capture some data, but I want to be able to easily access these bits of UI.&nbsp; I open up my _Layout.cshtml file, located in Views\Shared in the Solution Explorer and modify the snippet of code that creates the menu elements.&nbsp; When finished, it looks like so:</p><pre class="csharpcode">    &lt;nav&gt;
        &lt;ul id=<span class="str">"menu"</span>&gt;
            &lt;li&gt;@Html.ActionLink(<span class="str">"Home"</span>, <span class="str">"Index"</span>, <span class="str">"Home"</span>)&lt;/li&gt;
            &lt;li&gt;@Html.ActionLink(<span class="str">"About"</span>, <span class="str">"About"</span>, <span class="str">"Home"</span>)&lt;/li&gt;
            &lt;li&gt;@Html.ActionLink(<span class="str">"Phone Numbers"</span>, <span class="str">"Index"</span>, <span class="str">"PhoneNumberEntry"</span>)&lt;/li&gt;
            &lt;li&gt;@Html.ActionLink(<span class="str">"Contact"</span>, <span class="str">"Contact"</span>, <span class="str">"Home"</span>)&lt;/li&gt;
        &lt;/ul&gt;
    &lt;/nav&gt;</pre>
<p>The LI elements are formatted through the default site template and the UL is used as a wrapper to generate the menu at the top of the page. The ActionLink helper method renders an anchor tag for the specified controller/action.</p>
<h2>Getting Some Data In There</h2>
<p>Before I move onto the API portion of this exercise, I press F5 to run my site and use the newly created Phone Numbers menu to get at the UI the framework generated for me.&nbsp; I add several entries as you can see below.</p>
<p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Cloudy-With-a-Chance-of-Mobile-Building-_DC61/image_11.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Cloudy-With-a-Chance-of-Mobile-Building-_DC61/image_thumb_3.png" width="337" height="136"></a></p>
<p>Now, I want to go one step further. This is about accessing the data for a specific user, so I want to have some other data in there as well to prove out that we can isolate the data and make use of the Authentication providers in Asp.Net.&nbsp; I create another user and add more entries as I did above, and you can see in the database now how there is data in there for two users. </p>
<p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Cloudy-With-a-Chance-of-Mobile-Building-_DC61/image_13.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Cloudy-With-a-Chance-of-Mobile-Building-_DC61/image_thumb_4.png" width="356" height="149"></a></p>
<p>I now have data specific to a couple of users and can build out the service piece.</p>
<h2>Cutting a Web API Controller</h2>
<p>This piece is really easy and uses the tooling and templates from the MVC Framework.&nbsp; I add a new folder called Api to my Controllers folder and then right-click on the Api folder and select Add –&gt; Controller.&nbsp; I name it PhoneNumberEntryController and select the Empty Api controller as the scaffolder. Even though it's the same name, it ends up in a different namespace so everyone's happy.</p>
<p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Cloudy-With-a-Chance-of-Mobile-Building-_DC61/image_15.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Cloudy-With-a-Chance-of-Mobile-Building-_DC61/image_thumb_5.png" width="240" height="96"></a></p>
<p>Much like the controller returning a view, I want the ApiController to only allow authenticated requests, and I want the method to return only phone numbers for the current user.</p><pre class="csharpcode">    [Authorize]
    <span class="kwrd">public</span> <span class="kwrd">class</span> PhoneNumberEntryController : ApiController
    {
        <span class="kwrd">private</span> CloudyWebSiteContext db = <span class="kwrd">new</span> CloudyWebSiteContext();

        <span class="kwrd">public</span> ICollection&lt;PhoneNumberEntry&gt; Get()
        {
            <span class="kwrd">string</span> username = ControllerContext.Request.GetUserPrincipal().Identity.Name;

            var phoneNumbers = db.PhoneNumberEntries
                .Where(p =&gt; p.UserName == username)
                .ToList();

            <span class="kwrd">return</span> phoneNumbers;

        }
    }</pre>
<p>There's one more thing I want to do: I want to suppress the Xml formatter that is on by default in WebAPI.&nbsp; By turning it off, the only remaining default serializer is Json.&nbsp; Glenn Block <a href="http://codebetter.com/glennblock/2012/02/26/disabling-the-xml-formatter-in-asp-net-web-apithe-easy-way-2/" target="_blank">shows us</a> the most performant way to do this in our Global.asax's Application_Start menthod:</p>
<blockquote><pre class="csharpcode">GlobalConfiguration.Configuration.Formatters.XmlFormatter.SupportedMediaTypes.Clear();</pre></blockquote>
<p>People. We are now awesomely rocking.&nbsp; I will coin the term "awesrocking" because of the awesomeness here.</p>
<h2><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: right; padding-top: 0px; padding-left: 0px; margin: 0px 25px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" align="right" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Cloudy-With-a-Chance-of-Mobile-Building-_DC61/image_18.png" width="246" height="344">Testing Out the Api</h2>
<p>This is the part where I could start to hit some roadblocks if I didn't have the right tools. I love Fiddler and use it first whenever I'm, uh...fiddling around, but I can't use Fiddler to poke around the API because I <em>need</em> a user to see what I'm doing and authentication is forms based in this context. I can't use IE efficiently because every time I get a Json document returned it prompts me to open the file of an unknown file type. I could use Notepad here (or a <a href="http://stackoverflow.com/questions/2483771/how-can-i-convince-ie-to-simply-display-application-json-rather-than-offer-to-do" target="_blank">registry hack</a>), I know, but it's a pain and I like to see my data all nicely formatted <img class="wlEmoticon wlEmoticon-winkingsmile" style="border-top-style: none; border-left-style: none; border-bottom-style: none; border-right-style: none" alt="Winking smile" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Cloudy-With-a-Chance-of-Mobile-Building-_DC61/wlEmoticon-winkingsmile_2.png">.</p>
<p>FireFox to the rescue, along with a little helper plugin called JsonView.&nbsp; In Visual Studio 11 this will be even easier because I can choose the browser to launch, rather than launching a separate browser or setting the OS default.&nbsp; Regardless, I run the app in FireFox, log in to my site, then I hit http://127.0.0.1:81/api/phonenumberentry to see the data. JsonView takes over and I see my phone numbers as we expect.</p>
<p>You can see the result in the image to the right.</p>
<h2>Wrapping Up and Next Steps</h2>
<p>Okay, here's the quick breakdown for the steps we have taken to this point:</p>
<ol>
<li>Added our model (class) 
<li>Added our data context 
<li>Scaffolded our views 
<li>Secured our views 
<li>Tied the data entry and loading to specific users 
<li>Added some data 
<li>Created a Web API controller 
<li>Secured the controller and started returning the correct data </li></ol>
<p>&nbsp;</p>
<p>With these things in place, I can now start work on my phone client. Our project is already set, so we can get to the heavy lifting right away! Stay tuned for the next post where I'll get the phone client lined up to consume the data and display it.&nbsp; Later on we'll talk about some things we can do to better improve the code and get us closer to best practices.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>741</wp:post_id>
		<wp:post_date>2012-04-20 17:53:00</wp:post_date>
		<wp:post_date_gmt>2012-04-20 17:53:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cloudy-with-a-chance-of-mobile-building-our-data-model-amp-api</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[Asp.Net MVC]]></category>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="post_tag" nicename="entity-framework"><![CDATA[Entity Framework]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
		<category domain="post_tag" nicename="windows-phone"><![CDATA[Windows Phone]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3953549759]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Cloudy With a Chance of Mobile: Mvc Framework, Windows Azure and Windows Phone</title>
		<link>http://jameschambers.com/2012/04/cloudy-with-a-chance-of-mobile-mvc-framework-windows-azure-and-windows-phone/</link>
		<pubDate>Wed, 18 Apr 2012 17:54:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=761</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Interested in having a web site that supports user-specific data? Perfect, use Asp.Net and the built in membership providers. Want to put it in the cloud? Sweet, jump on the Azure bandwagon. Want to easily define your data model and store it?&nbsp; No worries, EF Code First will make you cry, you love it so much. Want to access that data from Windows Phone? Well, my friend, you've come to the right place. I will take you from start-to-finish in creating an application that encompasses all of these pieces: </p> <ol> <li>An Asp.Net Mvc 4 web site with a Web API controller to serve up some data. This data will be protected by the built-in Asp.Net membership providers.  <li>A local Service Deployment using the Windows Azure SDK.&nbsp; This will be how we host the Mvc web site &amp; Web API.  <li>A Windows Phone 7.1 client that accesses the protected data using the Asp.Net membership provider.</li></ol> <p>&nbsp;</p> <h2>Getting Tooled Up</h2> <p>We need to have the right kit in place to make this happen.&nbsp; Please make sure you have the tools below if you want to follow along:</p> <ol> <li>Visual Studio 2010 with <a href="http://www.microsoft.com/download/en/details.aspx?id=23691" target="_blank">SP1</a> installed  <li>An internet connection.&nbsp; Oh, wait...  <li>The <a href="http://www.windowsazure.com/en-us/develop/net/" target="_blank">latest Azure bits</a> downloaded and installed  <li>The Windows Phone 7.1 <a href="http://www.microsoft.com/download/en/details.aspx?id=27570" target="_blank">SDK</a> setup on your machine  <li>Laurent Bugnion's <a href="http://mvvmlight.codeplex.com/" target="_blank">MVVM Light Toolkit</a></li></ol> <p>&nbsp;</p> <h2>Bootstrapping the Projects</h2> <p>I use two instances of Visual Studio to develop in scenarios like this as we'll need elevated privileges to run the Compute Emulator for Windows Azure and I like to be able to leave my web project running while I work on my Windows Phone client application. </p> <p>Launch the first IDE in <em>Adminstrative</em> mode.&nbsp; Create a new project from the "Cloud" templates and select Windows Azure Project.</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/728684ba0d70_1428D/image_3.png" width="669" height="356"></p> <p>Next, we're prompted to add our new role project, we'll select MVC 4:</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/728684ba0d70_1428D/image_12.png" width="332" height="211"></p> <p>Finally, we'll pick Internet Application from the available templates in the Mvc 4 templates:</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/728684ba0d70_1428D/image_11.png" width="260" height="142"></p> <p>Now, simply run the application by pressing F5.&nbsp; Windows Azure needs a moment to start up, then you'll see the web site launch. Proceed to register in the site so that you have a valid log in. </p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/728684ba0d70_1428D/image_10.png" width="361" height="257"></p> <p>Start your second IDE up, pick File –&gt; New Project and navigate to the Silverlight for Windows Phone templates. Pick the vanilla Windows Phone Application project, and when you're prompted be sure to target Windows Phone 7.1.&nbsp; </p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/728684ba0d70_1428D/image_15.png" width="615" height="152"></p> <p>You can quickly run your phone app to get your emulator running by pressing F5.</p> <h2>Next Steps</h2> <p>At this point, though we're not doing too much that is interesting, we have our two core projects up and ready to go. We created an Mvc 4 web role inside our Azure project and created a user account that we will late use to log in from the phone.&nbsp; Next, we created the shell of our Windows Phone project that will hold a simple UI to display data that we load from the Mvc site.&nbsp; With very little effort, we have our two major components in place and will be able to quickly advance our project.</p> <p>Stay tuned for the next article where I will show you how to define a simple model and expose it via Web API.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>761</wp:post_id>
		<wp:post_date>2012-04-18 17:54:00</wp:post_date>
		<wp:post_date_gmt>2012-04-18 17:54:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cloudy-with-a-chance-of-mobile-mvc-framework-windows-azure-and-windows-phone</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4014782062]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Visual Studio 2010 Crashing on Uncompiled MVC 4 Projects</title>
		<link>http://jameschambers.com/2012/04/visual-studio-2010-crashing-on-uncompiled-mvc-4-projects/</link>
		<pubDate>Sun, 15 Apr 2012 17:55:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=771</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I have come across an issue where in MVC 4 pilot project, while working in views, the IDE would crash fairly frequently. I am using Visual Studio 2010 with SP1 and we are using GitHub for our source control.&nbsp; Luckily I came across this article:</p> <p><a href="http://www.asp.net/whitepapers/mvc4-release-notes#_Toc303253806">http://www.asp.net/whitepapers/mvc4-release-notes#_Toc303253806</a></p> <p>In the Known Issues and Breaking Changes section, it lists this gem:</p> <blockquote> <p><strong>After installing ASP.NET MVC 4 Beta, the CSHTML/VBHTML editor in Visual Studio 2010 Service Pack 1 CSHTML/VBHTML editor may pause for a long time after typing snippet or JavaScript inside cshtml or vbhtml files.</strong> This occurs only in ASP.NET MVC 4 applications which have just been created and have not yet been compiled.  <p>The workaround is to compile the project to get the assemblies in the bin folder. Note, if you clean the project which removes the assemblies from the bin folder, the editor problem will come back.  <p>This will be corrected in the next release.</p></blockquote> <p>This was fairly similar to my case, but not entirely correct.&nbsp; We are using NuGet package restore on our projects, and our .gitignore file is set up to exclude binaries.&nbsp; So, even if you do compile the project, we’re not checking the bins into source control.&nbsp; The IDE was crashing as though the project had never been build.</p> <p>Thankfully the workaround still applies, and building the project after merging from upstream still did the trick.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>771</wp:post_id>
		<wp:post_date>2012-04-15 17:55:00</wp:post_date>
		<wp:post_date_gmt>2012-04-15 17:55:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>visual-studio-2010-crashing-on-uncompiled-mvc-4-projects</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[Asp.Net MVC]]></category>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="post_tag" nicename="visual-studio-2010"><![CDATA[Visual Studio 2010]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3797475659]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Sharing With Friends - Opening up IIS Express To Other Team Members</title>
		<link>http://jameschambers.com/2012/04/sharing-with-friends-opening-up-iis-express-to-other-team-members/</link>
		<pubDate>Thu, 12 Apr 2012 17:56:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=781</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote> <p>I'm developing an app with an Android-ian friend. When co-developing some of the features, we've found it critical to be able to easily access the development stream of the services, which I'm building with Asp.Net's WebAPI. Here's an easy way to configure your IIS Express instance to allow outside traffic.</p></blockquote> <h2>Playing Inside the Sandbox</h2> <p>The out-of-box experience for IIS Express is to have all web traffic closed to clients not residing on localhost. This is a great security practice, but not great when you're<em> trying</em> to share a site or service.&nbsp; Configuration of IIS Express is also non-evident; the little UI you do have exposes no way for you to actually modify the section of config that allows access.</p> <p>To enable access outside your box, you need to create a virtual directory for your app and edit the applicationhost.config file located My Documents\IIS Express\config.</p> <p>In Visual Studio, double-click on your project properties and open up the Web tab. Scroll down to the section where you can select the server and make sure it's on IIS Express. Finally, click on the Create Virtual Directory button. This creates an entry in the config file.</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Sharing-With-Friends---Opening-up-IIS-Ex_1241D/image_5.png" width="520" height="212"></p> <p>Now, open up that config file (again, it's in My Documents\IIS Express\config) and find your newly created site.&nbsp; Update the config section so that it looks something the the following by adding a second binding. </p><pre class="csharpcode"><span class="kwrd">&lt;</span><span class="html">site</span> <span class="attr">name</span><span class="kwrd">="MySiteOfAwesomeness"</span> <span class="attr">id</span><span class="kwrd">="13"</span><span class="kwrd">&gt;</span>
    <span class="kwrd">&lt;</span><span class="html">application</span> <span class="attr">path</span><span class="kwrd">="/"</span> <span class="attr">applicationPool</span><span class="kwrd">="Clr4IntegratedAppPool"</span><span class="kwrd">&gt;</span>
        <span class="kwrd">&lt;</span><span class="html">virtualDirectory</span> <span class="attr">path</span><span class="kwrd">="/"</span> <span class="attr">physicalPath</span><span class="kwrd">="C:\dev\MySiteOfAwesomeness\MySiteOfAwesomeness"</span> <span class="kwrd">/&gt;</span>
    <span class="kwrd">&lt;/</span><span class="html">application</span><span class="kwrd">&gt;</span>
    <span class="kwrd">&lt;</span><span class="html">bindings</span><span class="kwrd">&gt;</span>
        <span class="kwrd">&lt;</span><span class="html">binding</span> <span class="attr">protocol</span><span class="kwrd">="http"</span> <span class="attr">bindingInformation</span><span class="kwrd">="*:4111:localhost"</span> <span class="kwrd">/&gt;</span>
        <span class="kwrd">&lt;</span><span class="html">binding</span> <span class="attr">protocol</span><span class="kwrd">="http"</span> <span class="attr">bindingInformation</span><span class="kwrd">="*:4111:192.168.100.101"</span> <span class="kwrd">/&gt;</span>
    <span class="kwrd">&lt;/</span><span class="html">bindings</span><span class="kwrd">&gt;</span>
<span class="kwrd">&lt;/</span><span class="html">site</span><span class="kwrd">&gt;</span>
</pre>
<p>
<style type="text/css">.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>
</p>
<p>Note that instead of localhost you can use your computer name or your IP address.&nbsp; </p>
<p>Finally, you're going to need to open up that port through whatever firewall you have.&nbsp; For me, I used Windows Firewall with Advanced Security (much better than the Marginal Security version) and added a rule to allow traffic on my project's port.</p>
<p>Hope this helps someone, and, hey, be nice to your Android friends, they might be somebody's brother.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>781</wp:post_id>
		<wp:post_date>2012-04-12 17:56:00</wp:post_date>
		<wp:post_date_gmt>2012-04-12 17:56:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sharing-with-friends-opening-up-iis-express-to-other-team-members</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="android"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="post_tag" nicename="iis"><![CDATA[IIS]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[Mobile]]></category>
		<category domain="post_tag" nicename="visual-studio-2010"><![CDATA[Visual Studio 2010]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3782356850]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Clearing out the Stresses - Inbox 0, Me 1</title>
		<link>http://jameschambers.com/2012/04/clearing-out-the-stresses-ndash-inbox-0-me-1/</link>
		<pubDate>Thu, 05 Apr 2012 17:59:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=801</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I made huge inroads into de-cluttering my digital desktop today.&nbsp; </p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Clearing-out-the-Stresses_1466C/image_2.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Clearing-out-the-Stresses_1466C/image_thumb.png" width="457" height="109"></a></p> <p>That’s right, baby. Nothing in the inbox! I went from 2985 messages down to 0. Outlook loves me, so does my phone client. And I know exactly what I have left to deal with.</p> <h2>Staying on Top of What To Do</h2> <p>I have tried for the last 5+ months since coming on board at <a href="http://twitter.com/logisense">LogiSense</a> to use my Inbox as a staging area for the things that I have to do. The trouble is that as things can’t be immediately responded to, they start to build up. Miss a couple work days and look out, that beast grows quickly.</p> <p>While watching <a href="http://www.hanselman.com/blog/">Scott Hanselman</a> present in the clip from <a href="http://talks.webstock.org.nz/speakers/scott-hanselman/its-not-what-you-read-its-what-you-ignore/">WebStock12</a> on how to filter out the noise, it was like a slap in the face when I realized how much weight this actually was.&nbsp; <em>I have almost 3,000 things I need to deal with.</em> It was a recurring, screaming thing in my head. I would make great gains, be –60 on the day or even better, but then be absent for two days and fall 100’s of messages further behind.&nbsp; </p> <p>I kept thinking <em>I can never get back on top of this.</em> And while I wouldn’t really call it beating myself up, I knew it was weighing on me.&nbsp; </p> <p>To get going, I started by creating a couple rules per Scott’s recommendation. I’m going to share the gist of this so that others can get ideas of how to sort their own and create the appropriate filters to clean out their inboxes. </p> <p>The first rule to create was to filter out any email that wasn’t sent to me. I had one exception: if the email was addressed to a group that I am apart of (for example, <a href="mailto:coworkers@myoffice.com">coworkers@myoffice.com</a>) then leave it in my inbox.&nbsp; Next, I created a filter where I was only a CC on the message and directed those to an Inbox – CC folder.&nbsp; We have some automation accounts that send us notifications (failed builds, for example) so I created rules for those as well.&nbsp; And finally, again per Scott’s suggestion, I created a rule that said anything from one of my bosses went into a golden folder for immediate undivided attention (my company recently started following me on Twitter, so it’s probably best I say something like that).</p> <h2>Claiming Back my Inbox</h2> <p>The last step was to run the rules against my inbox. I dropped to about 600 messages almost instantly. The scrollbar actually had context again, it actually meant something!</p> <p>I then decided that anything that was older than 3 weeks was instantly on the chopping block. I moved all these “old” messages into an Inboxchive folder, then quickly ran a couple of searches over that folder for important messages or messages that relate to specific customers I’m working with. I threw those back into my inbox and marked everything else as read.</p> <p>With 120 messages left I was easily able to sort things into the appropriate bins, flag them for follow-up if required, and respond to the ones I had yet to respond to.&nbsp; It took about 45 minutes to do all this.</p> <p>I feel like the self-perpetuated pressure of an inbox that has grown by about 125 messages per week is finally gone. Tonight, I am going to sleep better. I actually feel lighter.</p> <p>Hope this helps and/or encourages someone out there there to clear a little clutter. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>801</wp:post_id>
		<wp:post_date>2012-04-05 17:59:00</wp:post_date>
		<wp:post_date_gmt>2012-04-05 17:59:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>clearing-out-the-stresses-ndash-inbox-0-me-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="beyond-code"><![CDATA[Beyond Code]]></category>
		<category domain="post_tag" nicename="email"><![CDATA[Email]]></category>
		<category domain="post_tag" nicename="life-hacking"><![CDATA[Life Hacking]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3902129818]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Future of the Web on .NET Rocks!</title>
		<link>http://jameschambers.com/2012/04/the-future-of-the-web-on-net-rocks/</link>
		<pubDate>Wed, 04 Apr 2012 18:02:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=811</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/The-Future-of-the-Web-on-.NET-Rocks_12433/image_2.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: right; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" align="right" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/The-Future-of-the-Web-on-.NET-Rocks_12433/image_thumb.png" width="332" height="94"></a>I recently spoke at Prairie Dev Con West in Calgary, where I was pleased to be asked to join a panel on the very popular internet audio talk show developers know as <a href="http://www.dotnetrocks.com/" target="_blank">.NET Rocks</a>!&nbsp; Hosts Carl Franklin and Richard Campbell put together a panel to revisit a conversation they have every couple of years on "The Future of the Web".</p> <p>The audio is now online, so <a href="http://www.dotnetrocks.com/default.aspx?showNum=752" target="_blank">have a hear</a>!</p> <p>Joined by my friend <a href="http://weblogs.asp.net/bsimser/" target="_blank">Bil Simser</a>, fellow Canadian <a href="http://vibrantcode.com/" target="_blank">Andrew Nurse</a> from the Asp.Net team at Microsoft and <a href="http://jameskovacs.com/" target="_blank">James Kovacs</a> of JetBrains, it was a great group with diverse experience that allowed us to dive into all kinds of topics.&nbsp; Starting with defining the current state of the web, we talked about current challenges, what the internet has become, and what the next few years holds for us as developers.</p> <p>Be sure to check out the audio <a href="http://www.dotnetrocks.com/default.aspx?showNum=752" target="_blank">here</a> and be sure to subscribe to the show! </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>811</wp:post_id>
		<wp:post_date>2012-04-04 18:02:00</wp:post_date>
		<wp:post_date_gmt>2012-04-04 18:02:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-future-of-the-web-on-net-rocks</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>
		<category domain="post_tag" nicename="radio"><![CDATA[Radio]]></category>
	</item>
	<item>
		<title>Prairie Dev Con - Calgary Edition</title>
		<link>http://jameschambers.com/2012/03/prairie-dev-con-calgary-edition/</link>
		<pubDate>Wed, 14 Mar 2012 18:03:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=821</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Getting-Connected--Attending-Conferences_8957/image_2.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Getting-Connected--Attending-Conferences_8957/image_thumb.png" width="661" height="241"></a></p> <p>Look at all those hard-working developers!</p> <p>Thanks to everyone who came out to my intro to MVC yesterday, and to the Dojo today.&nbsp; I had a great time in the 2.5 hour Dojo session building the app with everyone who was able to attend.&nbsp; We got to explore MVC, scaffolding, Models, Entity Framework + Code First, Controllers, Actions, jQuery, a bit of routing, partial views, packages in NuGet, HtmlHelpers and touched quickly on ActionFilters and even a bit of Areas.&nbsp; Whew!</p> <h1>Lessons Learned</h1> <p>A big thanks goes out to the 30+ devs that came to the Dojo today...I certainly didn't anticipate the number of participants. With the myriad of OSes, Visual Studio editions and service pack levels, SQL Server configs and more, it was great to be able to work as a group through the things that came up and make the most of things, regardless of how well your tooling worked out.&nbsp; For those who were unable to code through the exercises, I hope you took enough away from today to try some of these things on your own.</p> <p><strong>Here's some of my observations</strong>:</p> <ul> <li>I <em>promise</em> that if I am going to use someone else's jQuery plugin I won't go months without reviewing the syntax and configuration options!  <li>I am moving this talk to MVC4 as we've now got a go-live licence. I will make this the requirement for the Dojo session and also will recommend VS2010 Ultimate, even the trial version, so that we're all working off the same kit.  <li>For those that aren't able to get the software before the session (it is posted in the abstract!) I will make sure I download the full tools (and not just the downloader...#FAIL).  <li>I will make sure we have the connection strings handy for a couple alternate SQL Server configs.  <li>I will try to get a second projector in play – this will allow me to help work through issues that others might be having while still leaving the exercises up on the screen for those who wish to continue along.</li></ul> <p>Again, thanks to all who helped to work through the things that came up...great teamwork!</p> <h1>Next Steps</h1> <p>Don't stop now! Here's some things you can do to hone your skills and practice some of what we covered today:</p> <ul> <li>Grab a copy of Visual Studio 2010 (the Ultimate trial if you don't have it already)  <li>Download a copy of the MovieFu project from <a href="https://github.com/MisterJames/MovieFu" target="_blank">GitHub</a>  <li>Get in touch! Easiest is to reach me on <a href="https://twitter.com/#!/CanadianJames" target="_blank">Twitter</a>  <li>Start writing code! I <em>know</em> that you got more out of the Dojo than you did out of the intro (if you attended that) because you <em>wrote code.</em>&nbsp; You don't need me there to do that! Cut a few projects and try to solve some simple scenarios, explore EF, areas or whatever interests you.</li></ul> <p>Good luck, and happy coding!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>821</wp:post_id>
		<wp:post_date>2012-03-14 18:03:00</wp:post_date>
		<wp:post_date_gmt>2012-03-14 18:03:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>prairie-dev-con-calgary-edition</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[Asp.Net MVC]]></category>
		<category domain="post_tag" nicename="calgary"><![CDATA[Calgary]]></category>
		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>
		<category domain="post_tag" nicename="prairiedevcon"><![CDATA[PrairieDevCon]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3938534675]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Okay Developers, Time to Level Up: Visual Studio 11 and Windows 8</title>
		<link>http://jameschambers.com/2012/02/okay-developers-time-to-level-up-visual-studio-11-and-windows-8/</link>
		<pubDate>Wed, 29 Feb 2012 18:04:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=831</guid>
		<description></description>
		<content:encoded><![CDATA[<p>The bits are now in the wild.&nbsp; I've got Win8 on the download and VS11 installed already on my Win7 boot.&nbsp; I'll be wiping the Win8 partition and installing the Customer Preview of Win8 later today.</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Okay-Developers-Time-to-Level-Up-Visual-_822F/image_2.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Okay-Developers-Time-to-Level-Up-Visual-_822F/image_thumb.png" width="188" height="244"></a></p> <h1></h1> <h1>Bringing The Awesome</h1> <p>I'll getting pumped for PrDC Calgary and I'm looking forward to rebuilding my MVC and NuGet talks on Windows 8 and Visual Studio 2011 for that conference. Only a couple weeks to go!&nbsp; Remember, if you're hoping to come to the Dojo session for MVC, please bring along your laptop.&nbsp; I'll be demoing some of the MVC4 bits, so please update your machines before you come (I'll have a few USB keys with the install if you don't have, but please make sure you have VS installed...even the free version).</p> <h1>Getting Up To Speed</h1> <p>Go grab all the bits for yourself:</p> <ul> <li><a href="http://windows.microsoft.com/en-CA/windows-8/download" target="_blank">Windows 8 Consumer Preview</a>  <li><a href="http://www.microsoft.com/visualstudio/11/en-us/downloads" target="_blank">Visual Studio 11 Beta</a></li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>831</wp:post_id>
		<wp:post_date>2012-02-29 18:04:00</wp:post_date>
		<wp:post_date_gmt>2012-02-29 18:04:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>okay-developers-time-to-level-up-visual-studio-11-and-windows-8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="post_tag" nicename="visual-studio-11"><![CDATA[Visual Studio 11]]></category>
	</item>
	<item>
		<title>Continuous Communication: Bridging the Client and Server with SignalR</title>
		<link>http://jameschambers.com/2012/02/continuous-communication-bridging-the-client-and-server-with-signalr/</link>
		<pubDate>Fri, 10 Feb 2012 18:05:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=841</guid>
		<description></description>
		<content:encoded><![CDATA[<p><strong><font color="#333333"></font></strong>&nbsp;</p> <p><strong><font color="#333333">Have you ever tried to solve concurrency, or at least notification of concurrency threats? Have you worked out a way to keep data flowing between the client and the server? How about multiple client-side subscribers and the server? Server-to-client notification? And, if you have, were you able to make it easily available in other projects? Easily extensible?</font></strong></p> <p>If you’re a .NET developer, there’s no more guessing. SignalR is your new BFF.</p> <p>It’s a new web, people.&nbsp; We all know this. We don’t make “web pages” or even “web sites” any more. We make living, breathing applications. More and more, this also means a social aspect, and increasingly this means collaboration.</p> <h2><font style="font-weight: bold">SignalR and the MVC Framework</font></h2> <p>It’s my thing. I spend most of my time in Asp.Net working with the MVC Framework, so my first question is, “Does it work with MVC?”.&nbsp; Of course!</p> <p>And it’s super simple:</p> <ol> <li>You’re going to <strong>create a project</strong> &amp; install SignalR via NuGet  <li><strong>Build your backend</strong> by creating one class that inherits from one of the SignalR base classes  <li>Finally, you need to <strong>wire up your view</strong> by writing a tiny bit of script on the client</li></ol> <p>&nbsp;</p> <p>How does it work?&nbsp; Crazy ninja magic. Covered with chocolate and ice cream.&nbsp; Two scoops.&nbsp; Let’s walk through a simple, but meaningful example (you can checkout the hello world on Github) and then revisit the interesting bits.</p> <h2><font style="font-weight: bold">Creating the Project</font></h2> <p>Let’s start by creating a new MVC4 project (all the kids are doing it) in Visual Studio 2010. I’ve called mine Mvc.SignalR.</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/e4133c3ea69e_C1C6/image_3.png" width="446" height="282"></p> <p>Next, we’re going to pick the empty template because we’re not too concerned about the whole flashy starter pages and default styling.</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/e4133c3ea69e_C1C6/image_5.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/e4133c3ea69e_C1C6/image_thumb_1.png" width="356" height="320"></a></p> <p>And we’re off to the races!&nbsp; Let’s drop into the package manager console and install SignalR. Type the following:</p> <p><font size="3" face="Lucida Console">Install-Package SignalR</font></p> <p>…and NuGet will do it’s magic for us, adding the required dependencies and updating our project accordingly.&nbsp; What else is cool there?&nbsp; Glad you asked!&nbsp; NuGet also went ahead and updated any other libraries that SignalR takes a dependency on at a higher version. Sweet! Check out your console for all the details, that’s some great stuff there.</p> <p>Next, we’re going to need a controller and a view so that we have something to see.&nbsp; Right-click on your Controllers folder (in Solution Explorer) and click “Add –&gt; Controller…” and create a new “HomeController”.&nbsp; You’ll be taken to the class, at which point you can right click on the Index method and then select “Add View…”. Again, just create an empty view called Index.&nbsp; Press F5 to run the app and you should see this:</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/e4133c3ea69e_C1C6/image_7.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/e4133c3ea69e_C1C6/image_thumb_2.png" width="307" height="251"></a></p> <p>Not too much going on, but we’re just getting to the great stuff.&nbsp; One more quick thing, we’re going to need it later, let’s stuff the client’s IP address into the ViewBag in our Index method of the HomeController.</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/e4133c3ea69e_C1C6/image_17.png" width="501" height="100"></p> <p>&nbsp;</p> <h2><font style="font-weight: bold">Building the Backend</font></h2> <p>SignalR makes things super-easy for us to create the backend bits required for the continuous communication: we only need to inherit from a single class. What we’ll do in this sample is make a page visit counting mechanism that provides live updates to viewers of the page.&nbsp; Original idea, and totally worth a patent. I’ll call it, “Analytics”. On we go.</p> <p>The first bit is in creating a model class to record the visit. We’ll keep it simple and track only a few properties, but we’re going to take advantage of EF Code First to use as a data store. Create two classes in your Models folder, SiteVisit and SiteVisitContext.&nbsp; Their implementations look like this:</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/e4133c3ea69e_C1C6/image_10.png" width="329" height="101"></p> <p>Note that inheriting from DbContext requires importing the System.Data.Entity namespace in the code below.</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/e4133c3ea69e_C1C6/image_12.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/e4133c3ea69e_C1C6/image_thumb_3.png" width="400" height="87"></a></p> <p>Poof! We have a database.&nbsp; Next, I’ve got a simple class called UserLink where we provide the function that will be accessible from the client, through SignalR.&nbsp; We inherit from Hub here to give us a whole bunch of “free” client-side goodness and make sure the SignalR bits know about us. Reflection is a beautiful thing.</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/e4133c3ea69e_C1C6/image_14.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/e4133c3ea69e_C1C6/image_thumb_4.png" width="765" height="287"></a></p> <p>All I’m doing here is accepting an IP address, saving it to the SiteVisits table (that we created above through EF) and then getting a record count.&nbsp; The interesting bit happens after we make that result message.</p> <p>Clients is of type Dynamic.&nbsp; There is no method on it called updateViewCount.&nbsp; It doesn’t really know what I want to do, other than at runtime it’s going to have to go figure out where updateViewCount is and pass it my string.&nbsp; Where does the method actually exist?&nbsp; On the client, mes amis.&nbsp; We’re writing that bad boy in JavaScript.</p> <h2><font style="font-weight: bold">Wiring up the View</font></h2> <p>At this point, we need to make the client aware of the backend hub we’ve created. Open up _Layout.cshtml from Solution Explorer (it’ll be in your Views/Shared folder) and add a script reference to page. You’ll also need to update the reference to jQuery (remember how NuGet got us up-to-date?):</p> <p><font face="Lucida Console">&lt;script src="@Url.Content("~/Scripts/jquery-1.6.4.min.js")" type="text/javascript"&gt;&lt;/script&gt;<br>&lt;script src="@Url.Content("~/Scripts/jquery.signalR.js")" type="text/javascript"&gt;&lt;/script&gt;<br>&lt;script src="/signalr/hubs" type="text/javascript"&gt;&lt;/script&gt;</font></p> <p>Now, every page in our application (that uses this layout) will have access to SignalR.</p> <p>“Wait a minute!”, says the observant, kung-fu yielding developer, “Script source is /signalr/hubs? But there’s no file that corresponds to that!” </p> <p>Right you are, Darryl.</p> <p>SignalR does this brilliant thing: it exposes your Hub classes through a route that it creates and initializes on your behalf. Your client is then able to access the methods of your class from JavaScript. It builds the library dynamically on the first call, caches it (until your application is recycled), and then takes care of resolving the calls for you.</p> <p>Great, so our _Layout is updated to include the JavaScript bits we need, and SignalR is all up in our browser like a tree fort in a…tree.&nbsp; So what do we need to do in our view?&nbsp; Well, we want to have the IP address available from script, and we need a placeholder for our messages to come back to:</p> <p><font face="Lucida Console">&lt;input type="hidden" id="client-ip" value="@ViewBag.ClientIpAddress" /&gt;<br>&lt;div id="view-updates"&gt;&lt;/div&gt;</font></p> <p>Good, simple stuff.&nbsp; Now the script.&nbsp; </p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/e4133c3ea69e_C1C6/image_20.png" width="472" height="411"></p> <p>I’m using jQuery (‘cause it’s awesome) to wire up an onload page handler and capturing the IP address from our hidden input (that we injected into our ViewBag in the controller). So far, so good.&nbsp; </p> <p>Next we fetch our proxy to our hub dynamically through SignalR’s connection object, then use this proxy to wire up a callback. This is the method that will be executed from our Hub.&nbsp; My handler simply takes a string and pushes it into a &lt;p&gt; tag.&nbsp; Finally, we start the connection and pass in an anonymous function to be executed once SignalR is up and running.&nbsp; This is where we make the call to our method in the hub.&nbsp; So, to recap:</p> <ol> <li>We create a proxy  <li>We setup an event handler  <li>We startup the connection, and when complete, call our recordView method on the hub (I’ll get back to the timing of startup in a minute)</li></ol> <p>&nbsp;</p> <p>Sweet.&nbsp; Hit F5, and see all your hard work come together…in fact, open a few browsers and watch as ALL the clients are updated when another loads.</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/e4133c3ea69e_C1C6/image_23.png" width="621" height="431"></p> <p>Hit refresh on any one of those to witness the awesomeness.&nbsp; Nice work, fearless web developer!</p> <h2><font style="font-weight: bold">Things I Learned Along the Way</font></h2> <p>If you start poking through the samples and venturing off to create new, more complex scenarios you may run into a couple things that aren’t at first apparent. I did, and hope that these points can help others who are looking.</p> <ul> <li><strong>Case Matters</strong>  <ul> <li>Class names and function names in c# are converted to camel case on the client side. This is important to know because, for example, if you try to get a reference to the proxy/hub for your ClassName, it would have to be $.connection.className. Conversely, client-side event handlers aren’t converted to TitleCase, so if your function is functionName, you’re going to call functionName against the dynamic Clients object in your hub.  <li>If you don’t follow casing conventions, you’ll run into errors with SignalR:  <ul> <li>“Unable to set value of the property 'someCallBack': object is null or undefined” is likely a class case issue, happens when registering a callback in a SignalR hub.  <li>“Object doesn't support property or method 'YourMethod'” is likely an issue with case on a method in your hub, happens when you try to call the method after you’ve started the hub, and the JavaScript runtime is ouching because it can’t find the method in the proxy SignalR has generated.</li></ul></li></ul> <li><strong>Wait for Startup to Finish</strong>  <ul> <li>While this seems obvious, many of the samples I found used a button click handler to make a call into the hub, which allows for extra time for the script to finish starting up. I tried at first to invoke a method right after my call to $.connection.hub.start(). I got the following error:  <ul> <li>SignalR: Connection must be started before data can be sent. Call .start() before .send()</li></ul> <li>If you run into this scenario just use the method I coded above.&nbsp; $.connection.hub.start() has an overload that accepts a callback as parameter, to be executed when the startup cycle is completed.&nbsp; There is also an overload that accepts settings; you can view the client API <a href="https://github.com/SignalR/SignalR/wiki/SignalR-JS-Client">here</a>.</li></ul></li></ul> <p>&nbsp;</p> <h2><font style="font-weight: bold">Next Steps</font></h2> <p>Don’t stop here, you’ve got some ‘sperimenting to do!</p> <ol> <li>Make sure Visual Studio 2010 is up to date. If you don’t have a copy, get it here.  <li>Get to know your open source community projects.&nbsp; Things like SignalR are helpful extensions to your projects and make development fun.&nbsp; There are a ton of worthwhile projects that you should get to know., but reviewing the source can lead you in new directions as well.  <li>Get involved! Sure, you can use SignalR, but you can contribute as well.&nbsp; Check out the project on <a href="https://github.com/SignalR">GitHub</a>, or if you have questions, pop into <a href="http://jabbr.net/#/rooms/signalr">JabbR</a> and connect with some of the helpful folks there.</li></ol> <p>&nbsp;</p> <h2><font style="font-weight: bold">A Quick Thanks</font></h2> <p>I want to sent a quick thanks out to <a href="http://twitter.com/kiliman">Michael Carter</a> who helped through some timing and casing errors on JabbR while I put this sample together, David Fowler for sharing his excellent work on this project (the guy is absolutely brilliant) as well as <a href="https://twitter.com/#!/stevelydford">Steve Lydford</a> for the docs/samples he contributed to the project.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>841</wp:post_id>
		<wp:post_date>2012-02-10 18:05:00</wp:post_date>
		<wp:post_date_gmt>2012-02-10 18:05:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>continuous-communication-bridging-the-client-and-server-with-signalr</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[Asp.Net MVC]]></category>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="post_tag" nicename="signalr"><![CDATA[SignalR]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3782041113]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Calling All Albertan Developers...PrDC is Approaching!</title>
		<link>http://jameschambers.com/2012/01/calling-all-albertan-developers-prdc-is-approaching/</link>
		<pubDate>Sat, 21 Jan 2012 18:06:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=851</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://www.prairiedevcon.com"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: right; padding-top: 0px; padding-left: 0px; margin: 0px 0px 10px 10px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" align="right" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/f339fdef32cd_8CDC/image_3.png" width="240" height="177"></a>I am excited to see the stars aligning for another round of Prairie Dev Con.&nbsp; This will be my third time speaking at PrDC and my first time in Calgary, where I worked for the better part of six years.&nbsp; I’m looking forward to getting back there…I can hear the mountains calling!</p> <p>There’s a great mix of sessions covering a variety of topics.&nbsp; Some heavyweights from Microsoft are going to be there, delivering over 30 sessions on MS technologies.&nbsp; There’s also a ton of great speakers covering agile, data, patterns and newer trends such as NoSQL.&nbsp; Calgary local <a href="https://twitter.com/#!/stimms">Simon Timms</a> will even run you through what it takes to <span style="text-decoration: line-through">hack</span> leverage phone systems in interesting ways.&nbsp; Interested in Windows Phone development?&nbsp; The one-and-only <a href="https://twitter.com/#!/bsimser">Bil Simser</a> will be on hand to walk you through from project start to phone deployment.</p> <p>Myself, I’ll be covering application development on the ASP.NET MVC framework.&nbsp; I’m doing an intro session that is a 65 minute wild ride through a project, as well as a Dojo-style 2 hour marathon for which you’ll need to prove yourself as a developer by writing code.&nbsp; <strong>Bring your laptop</strong>!</p> <p>Registration is still open…head over to <a href="http://www.prairiedevcon.com">http://www.prairiedevcon.com</a> for more information!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>851</wp:post_id>
		<wp:post_date>2012-01-21 18:06:00</wp:post_date>
		<wp:post_date_gmt>2012-01-21 18:06:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>calling-all-albertan-developers-prdc-is-approaching</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>
		<category domain="post_tag" nicename="prairiedevcon"><![CDATA[PrairieDevCon]]></category>
	</item>
	<item>
		<title>Them&#039;re Big Shoes To Fill</title>
		<link>http://jameschambers.com/2012/01/them-re-big-shoes-to-fill/</link>
		<pubDate>Sun, 01 Jan 2012 18:08:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=861</guid>
		<description></description>
		<content:encoded><![CDATA[<p><img title="MvpBadge" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: right; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="MvpBadge" align="right" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/b1ef7f7f1cab_E1BF/MvpBadge_3.png" width="108" height="169"></p> <p>I woke up this morning – the first day of 2012 – and knew it was going to be a great year. The kids were playing together, actually getting along!, my beautiful wife had made me a fresh cup of joe, and after getting a good couple weeks of visiting in with friends and family over Christmas, I officially start my holidays tomorrow.</p> <p>And then I checked my email.</p> <p>I am very pleased to be recognized as an MVP by Microsoft in the area of ASP.NET.&nbsp; </p> <p>After completing my registration on the MVP site, I had a look around the list of community leaders already in the program for ASP.NET and realized I have a long way to go to consider myself peers with those folks.&nbsp; I read a lot of their blogs and many of the folks on the list have – through their articles, conference sessions, blog posts and emails – helped me out of more than one pickle.</p> <p>Thanks to my nominator as well as the MVP lead here in Canada, and to Microsoft for this award.&nbsp; I look forward to another great year of working in the ASP.NET space!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>861</wp:post_id>
		<wp:post_date>2012-01-01 18:08:00</wp:post_date>
		<wp:post_date_gmt>2012-01-01 18:08:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>them-re-big-shoes-to-fill</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="beyond-code"><![CDATA[Beyond Code]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3925099566]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>A Great Time at Prairie Dev Con</title>
		<link>http://jameschambers.com/2012/06/a-great-time-at-prairie-dev-con/</link>
		<pubDate>Fri, 15 Jun 2012 18:39:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=1131</guid>
		<description></description>
		<content:encoded><![CDATA[<p>It’s amazing how great a conversation can be had at a conference.&nbsp; The conversation flows through topics, traversing different folks from different walks and never really ends until you check out of the hotel to return home.&nbsp; Prairie Dev Con 2011 was full of rich conversation with interesting people, enthusiastic about technology and excited about a brief window where they could share cool information about the tools and tech they work with on a regular basis.</p> <p>Thanks especially to everyone who came out to my sessions; as you start to work with MVC or NuGet I would love to hear how you make out and the kinds of things you do with your projects. And if you have any questions, please feel free to drop me a line via Twitter, here on my blog or via email.</p> <p>See you all next year at PrDC12!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1131</wp:post_id>
		<wp:post_date>2012-06-15 18:39:00</wp:post_date>
		<wp:post_date_gmt>2012-06-15 18:39:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-great-time-at-prairie-dev-con</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>
	</item>
	<item>
		<title>Introducing AngelaSmith - The Object Initializing Smartypants</title>
		<link>http://jameschambers.com/2012/12/introducing-angelasmith-the-object-initializing-smartypants/</link>
		<pubDate>Mon, 24 Dec 2012 17:09:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=141</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Our tooling in the .Net space is getting better and better, as well as the ecosystem that we work in. Take for instance Windows Azure Mobile Services – when we are dealing with greenfield development having your backend services running in minutes is a Godsend and having it work over multiple devices is chocolate on the sundae.&nbsp; Your database is in place in minutes and you can easily access your data via REST.</p> <p>What is something that all data-based applications require?&nbsp; Data!&nbsp; But missing from the data equation in green field development are two key parts to new app development: sample data and design time data.&nbsp; If you understand those parts already and want to be able to fire up 250 persons like this:</p><pre class="csharpcode">     var people = Angie
        .Configure()
        .ListCount(250)
        .MakeList&lt;Person&gt;();</pre>
<style type="text/css">.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>

<p>...then skip below to the juicy bits.&nbsp; For the rest of us, a quick primer.</p>
<h2>Why It's Important</h2>
<p>For those of us building Windows Store or Windows 8 Phone apps, we have some incredible tools that make designing good looks apps super easy.</p>
<p>First is the MvvmLight Toolkit from <a href="https://twitter.com/LBugnion" target="_blank">Laurent Bugnion</a> that allows you to quickly (and selectively) build out bindable view models, complete with properties, commands and, of course, your data.&nbsp; If you haven't worked with the data-binding approach, this is something you should be looking at if you use data at all in your apps.&nbsp; If you're not working with data at all in your apps, this is something that you should be looking at if you want users at all in your apps.</p>
<p>Second is the ability to use design time data through tools like Blend or Visual Studio 2012. Design time data sources usually provide static methods that can supply your IDE or editor of choice sample data while you're designing your view.&nbsp; It's tough to build out a good looking UI without having actual data in there to see what things will look like.</p>
<p>When you put these two things together you get this great experience of seeing your app come together without having to build, deploy and run your app.</p>
<p>In other environments (Android, XCode) there may be similar facilities for design, but on all platforms, there's the actual execution of the app on the device, and you probably want to get some data up there.&nbsp; How do you test user-level security with only one user?&nbsp; How do you build a geolocation app presenting points of interest if you don't have any POI data?&nbsp; View a contact list with no contacts?&nbsp; What about just seeing how you app performs under load?&nbsp; Build screen shots for your app store shots?&nbsp; </p>
<p>You get the idea. You need data in there.</p>
<h2>So You Want to Do the Data Binding Awesomeness</h2>
<p>Great, so we agree that some measure of data is needed at some point of the app build process. You need a list of, say, 25 people, but how do you get those in there?&nbsp; This is how we used to do it:</p><pre class="csharpcode">        List&lt;Person&gt; people = <span class="kwrd">new</span> List&lt;Person&gt;();
        people.Add(<span class="kwrd">new</span> Person { FirstName = <span class="str">"Angela"</span>, LastName = <span class="str">"Smith"</span>, Age = 24, PhoneNumber = <span class="str">"867-5309"</span> });
        <span class="rem">// ...do this 23 times...</span>
        people.Add(<span class="kwrd">new</span> Person { FirstName = <span class="str">"Susan"</span>, LastName = <span class="str">"Peters"</span>, Age = 22, PhoneNumber = <span class="str">"555-1234"</span> });
</pre>
<style type="text/css">.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>
<br>But that sucks. Big time.&nbsp; Because you have to new up every object, and to make it look somewhat interesting, you have to also touch each row (not copy and paste). So you have to sift through 25 lines of code and try to come up with some believable objects. 
<h2>A Way With Way More Awesome</h2>
<p>How about this instead:</p><pre class="csharpcode">        List&lt;Person&gt; people = Angie.FastList&lt;Person&gt;();</pre>
<style type="text/css">.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>
Oh yeah. That's how AngelaSmith rolls. One line of code to get a list of 25 people (25 is the default list size).&nbsp; All the properties are filled in for you as Angie recognizes many common property names. 
<p>You can use Angie to build out a single object:</p><pre class="csharpcode">        var person = Angie.FastMake&lt;Person&gt;();</pre>
<style type="text/css">.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>
Angie’s not alone; she has a friend who can also help fill in a single property: <pre class="csharpcode">        <span class="kwrd">string</span> firstName = Susan.FillFirstName();</pre>
<style type="text/css">.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>

<p>You can tell her how to build properties:</p><pre class="csharpcode">    var blogTitle = <span class="str">"Angie"</span>;

    var post = Angie.Configure()
        .FillBy(<span class="str">"title"</span>, <span class="kwrd">delegate</span>() { <span class="kwrd">return</span> blogTitle; })
        .Make&lt;BlogPost&gt;();</pre>
<style type="text/css">.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>

<p>Or, she can help you fill in properties (because she’s so smart):</p><pre class="csharpcode">     var comments = Angie
        .Configure()
        .ListCount(1000)
        .FillBy(<span class="str">"CommentDate"</span>, <span class="kwrd">delegate</span>() { <span class="kwrd">return</span> Angie.MakeDate(DateRules.PastDates); })
        .MakeList&lt;BlogComment&gt;();</pre>
<style type="text/css">.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>

<p>And, you can chain it all together to do some cool things.&nbsp; Here, we’re building a blog post with 5 comments, all the dates are set to a date prior today, and the comments are created using an anonymous function:</p><pre class="csharpcode">  var blogpost = Angie
    .Configure()
    .FillBy(<span class="str">"CreateDate"</span>, <span class="kwrd">delegate</span>() { <span class="kwrd">return</span> Susan.FillDate(DateRules.PastDate); })
    .FillBy(<span class="str">"Comments"</span>, <span class="kwrd">delegate</span>()
    {
      <span class="kwrd">return</span> Angie
          .Set()
          .ListCount(5)
          .FillBy(<span class="str">"CommentDate"</span>, <span class="kwrd">delegate</span>() { <span class="kwrd">return</span> Susan.FillDate(DateRules.PastDate); })
          .MakeList&lt;BlogComment&gt;();
    })
    .Make&lt;BlogPost&gt;();</pre>
<style type="text/css">.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>

<p>At the tail of that, we’re calling “Make” to get a single instance of BlogPost, but we could just as easily call “MakeList” to get a list of entities.</p>
<h2>So Get Going!</h2>
<p>To install AngelaSmith, use the Package Manager Console:</p><pre class="csharpcode">    install-package AngelaSmith</pre>
<style type="text/css">.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>

<p>For more information, check out the <a href="https://github.com/MisterJames/AngelaSmith" target="_blank">AngelaSmith project on GitHub</a>. Of course, you're welcome to fork and contribute!</p>
<p>Stay tuned for great examples on how to seed data in Windows Azure Mobile Services, Entity Framework and more.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>141</wp:post_id>
		<wp:post_date>2012-12-24 17:09:00</wp:post_date>
		<wp:post_date_gmt>2012-12-24 17:09:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>introducing-angelasmith-the-object-initializing-smartypants</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="angelasmith"><![CDATA[AngelaSmith]]></category>
		<category domain="post_tag" nicename="open-source"><![CDATA[open source]]></category>
		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>
		<category domain="post_tag" nicename="seed-data"><![CDATA[seed data]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[testing]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3824357325]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[Seed Windows Azure Mobile Services Tables with 10 Lines of Code | They Call Me Mister James]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://jameschambers.com/2012/12/seed-windows-azure-mobile-services-tables-with-10-lines-of-code/</wp:comment_author_url>
			<wp:comment_author_IP>168.62.20.37</wp:comment_author_IP>
			<wp:comment_date>2012-12-28 02:01:15</wp:comment_date>
			<wp:comment_date_gmt>2012-12-28 02:01:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] also written a primer on using AngelaSmith here on my [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Calls to GetManifestResourceStream Always Return NULL</title>
		<link>http://jameschambers.com/2012/12/calls-to-getmanifestresourcestream-always-return-null/</link>
		<pubDate>Fri, 14 Dec 2012 17:13:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=161</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I was trying to load some text from a DLL where the text was saved into text files, included in the project and marked to be compiled as an Embedded Resource. I was using the below approach from the <a href="http://support.microsoft.com/kb/319292">MSDN documentation</a>:</p><pre class="csharpcode">    _assembly = Assembly.GetExecutingAssembly(); 
    _textStreamReader = <span class="kwrd">new</span> StreamReader(_assembly.GetManifestResourceStream(<span class="str">"MyNamespace.MyTextFile.txt"</span>));</pre>
<style type="text/css">.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>

<p>I was building the namespace dynamically from the type, and I had the files in a Resources directory in my project. You can load the namespace from your type. When you put an embedded resource in a folder, you're supposed to prefix the filename with "Folder."&nbsp; I thought I was all set.</p>
<p>Yet, this wasn't working, so I eventually tried to eliminate any of the extra variables, inserting the namespace statically (the default namespace from my project) and moving the file into the root of my project.&nbsp; Still no love.</p>
<p>I built my DLL and opened it up in ILDASM.&nbsp; Guess what? No resources were being exported!&nbsp; Lamesauce!</p>
<p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Calls-to_BA59/image_4.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Calls-to_BA59/image_thumb_1.png" width="244" height="109"></a></p>
<p>What what?!</p>
<p>So I went back into my project, tried removing and adding the files back again. I double- and triple-checked that my files were marked to be embedded resources.</p>
<p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Calls-to_BA59/image_2.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Calls-to_BA59/image_thumb.png" width="154" height="159"></a></p>
<p>Sanity check. I added a new text file to my project, called TextFile1.txt, the default in Visual Studio, set the Build Action to "Embedded Resource" and went back to my DLL.</p>
<p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Calls-to_BA59/image_6.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Calls-to_BA59/image_thumb_2.png" width="244" height="133"></a></p>
<p>Sweet jalapeño peppers! What was different!?</p>
<p>...oh.&nbsp; Right. I am using the pattern "DomainNames.<strong><u>en</u></strong>.txt", not "DomainNames.txt". Notice I had the culture in there? That can't possible make a difference, can it?&nbsp; I renamed all my txt files, rebuilt and...</p>
<p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Calls-to_BA59/image_8.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Calls-to_BA59/image_thumb_3.png" width="244" height="232"></a></p>
<p>Booya!</p>
<h2>So Remember!</h2>
<p>If you are trying to load resources that are compiled into your assembly as Embedded Resources, it appears you can't use extra "dotting" in your naming convention or the compilers won't properly add your file to the manifest, at which point all calls to GetManifestResourceStream will return null.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>161</wp:post_id>
		<wp:post_date>2012-12-14 17:13:00</wp:post_date>
		<wp:post_date_gmt>2012-12-14 17:13:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>calls-to-getmanifestresourcestream-always-return-null</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="category" nicename="develop-meta"><![CDATA[Develop Meta]]></category>
		<category domain="post_tag" nicename="getmanifestresourcestream"><![CDATA[GetManifestResourceStream]]></category>
		<category domain="post_tag" nicename="reflection"><![CDATA[reflection]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3781515159]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>39171</wp:comment_id>
			<wp:comment_author><![CDATA[Resource file 읽을때 assembly.GetManifestResourceStream 의 return이 null 인경우 | Brain Overflow]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://whayon.zc.bz/wordpress/?p=248</wp:comment_author_url>
			<wp:comment_author_IP>182.162.94.35</wp:comment_author_IP>
			<wp:comment_date>2015-01-06 04:05:47</wp:comment_date>
			<wp:comment_date_gmt>2015-01-06 04:05:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] Resource file 의 properties 항목의 build action 이 Embedded Resource 인지 확인 link [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>The //BUILD/ Keynote</title>
		<link>http://jameschambers.com/2012/10/the-build-keynote/</link>
		<pubDate>Mon, 29 Oct 2012 17:14:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=371</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://jameschambers.azurewebsites.net/wp-content/uploads/2012/12/WP_000401.jpg"><img title="WP_000401" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: right; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="WP_000401" align="right" src="http://jameschambers.azurewebsites.net/wp-content/uploads/2012/12/WP_000401_thumb.jpg" width="244" height="184"></a>In a fashion very similar to MIX11, the keynote kicks off with a live musician. The twist this time is that the guy has a couple of Windows 8 apps that he’s running on a 27” all-in-one and is playing synth music off of the device.</p> <p>Ballmer comes out to applause and welcomes everyone, then starts the keynote with a note to the East Coast. Very classy.&nbsp; He quickly covers some highlights, generally available information through media, and then states strongly: “If you want the best experience in Windows 8, you will buy a Windows Phone.”</p> <p>Next up, he wants to start showing the devices now available (or soon available). He elicits some laughs with a “It’s all shipping hardware, so let’s see how this goes.”&nbsp; and then, when showing off PixelSense, “Here’s our 82” Windows 8 slate…” Nice demo, cracking jokes, showing off Bing maps on the biggest tablet I’ve seen.</p> <p>Jumps into OneNote (a great app I use <em>all the time</em>) and adds some notes. I <a href="http://jameschambers.azurewebsites.net/wp-content/uploads/2012/12/WP_000404.jpg"><img title="WP_000404" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: right; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="WP_000404" align="right" src="http://jameschambers.azurewebsites.net/wp-content/uploads/2012/12/WP_000404_thumb.jpg" width="244" height="184"></a>anticipate some applause later when he shows it updated on the other devices.</p> <p>Next up is a demo of the DELL 27” AIO. This is likely to be our new family PC.&nbsp; On this machine he’s showing off the search contracts that are available for applications to implement. This allows users to search system and app wide with one search effort.&nbsp; Share contract is up, but this is a mixed crowd, so the tech details are thin. If you’ve worked with the Windows 8 SDK these contracts were the thing that stood out most to me.</p> <p>The new Bing app looks wonderful…love the pinned view and how it works with IE side-by-side. Great way to use pinning.</p> <p>Now he’s showing off the roaming profiles. This is bigger than most people realize, but the demo is cool just the same. He’s changing the lock screen background on one PC and the others are changing on the fly.</p> <p>The Windows 8 Phone offerings are very strong. I’m leaning towards the Nokia as I’ve always loved their phones (the first mobile I got in 1998 was a Nokia).</p> <p>Now we’re back to OneNote, this time on the phone. No applause? Craziness.</p> <p>There’s a 1.5 lb tablet from Asus. Pretty slick. He’s using the tablet to show off pinning in the built in Sports app. Pinning is something that Microsoft is really hoping that devs embrace, and they need them to. This is one of those features that really distinguishes Windows from other OS’s, <em>for now.</em> But the feature is too good to not be mimicked.<a href="http://jameschambers.azurewebsites.net/wp-content/uploads/2012/12/WP_000405.jpg"><img title="WP_000405" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: right; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="WP_000405" align="right" src="http://jameschambers.azurewebsites.net/wp-content/uploads/2012/12/WP_000405_thumb.jpg" width="244" height="184"></a></p> <p>When he moves to the Surface, there is general applause. </p> <p>“Surface is the best expression for ‘PC meets Tablet’, good for work and play.”</p> <p>Free music streaming for every Windows 8 machine. This is significant, and it works across Windows, Windows Phone and Xbox.</p> <p>One last peak at the Surface…the clicking and folding that we see in the ads…and he finishes with a stylish walk across the stage to more applause.</p> <p>The Lenovo tablet tablet is very nice..1.5 lbs and running on Atom, so everything x86 will run.</p> <p><a href="http://jameschambers.azurewebsites.net/wp-content/uploads/2012/12/WP_000406.jpg"><img title="WP_000406" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: right; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="WP_000406" align="right" src="http://jameschambers.azurewebsites.net/wp-content/uploads/2012/12/WP_000406_thumb.jpg" width="244" height="184"></a>The next laptop, at 2.38 lbs, is the Aspire S7-191 from Acer . It supports multi-touch, and comes with some pretty beefy hardware.&nbsp; Ballmer shows off the device and shares how he’s been surprised at the impact this laptop has when he shows it off.&nbsp; This is the class of machine that every Windows 8 developer should have.</p> <p>“We’re all in with Windows 8.”</p> <p>There’s a quick Xbox video highlighting some of the cool features that you get when you mux up Windows, Xbox and Windows Phone.</p> <p>Next up, Steven Guggenheimer. </p> <p>As big Phineas and Ferb fans, my kids are going to LOVE this: Agent P Strikes Back. It’s an HTML port to Windows 8, and it looks good. Sweet…he just plugged in an Xbox controller into the Surface and is now playing the game with the controller.&nbsp; Then he takes it to the next level…<a href="http://jameschambers.azurewebsites.net/wp-content/uploads/2012/12/WP_000410.jpg"><img title="WP_000410" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: right; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="WP_000410" align="right" src="http://jameschambers.azurewebsites.net/wp-content/uploads/2012/12/WP_000410_thumb.jpg" width="244" height="184"></a>fires up Skype and docks it to the side, then brings up the game side-by-side. Your iPad can’t do this.&nbsp; And then the <em>same</em> game running on Windows Phone. Very cool.</p> <p>Wow…the HP all in one 27” workstation is pretty nice.&nbsp; Guggs just opened it up while it was running.</p> <p>The Sony Vaio has a capacitive pencil that works in really high res and looks very fast and accurate from the demo. He’s showing off a sketch app which works great in a “lay it flat and work with the customer” mode.</p> <p>Now some economics through the Microsoft Store:</p> <ul> <li>70% to devs for all apps sold through the store  <li>Jumps to 80% when you sell $25,000  <li>Or…use your own delivery mechanism and get 100%</li></ul> <p>The Microsoft Payment engine is next up on the demo slate. You can now use PayPal in-app, the Microsoft payment system, or write your own.</p> <p><a href="http://jameschambers.azurewebsites.net/wp-content/uploads/2012/12/WP_000411.jpg"><img title="WP_000411" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: right; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="WP_000411" align="right" src="http://jameschambers.azurewebsites.net/wp-content/uploads/2012/12/WP_000411_thumb.jpg" width="244" height="184"></a>Michael Bayle from ESPN comes on stage and walks us through the development experience that they “reimagined”. I’m going to get sick of that word by the end of the week. The app is using all the bells and whistles of Windows 8, sounds like they collaborated heavily with Microsoft, and they built it on their new APIs at <a href="http://developer.espn.com">http://developer.espn.com</a>. Nice work, guys.&nbsp; The app supports deep pinning within the app itself, hosts all kinds of content, and you can move around easily with semantic zoom.&nbsp; </p> <p>Mr. Ballmer walks out on the stage.&nbsp; Talking about writing apps…and showing tons of apps. SAP and Dropbox are coming, along with everyone from fitbit to Disney to Adobe to Hulu and more.&nbsp; Twitter just announced that they’re building a “great Twitter app” this morning as well.</p> <p>Now he’s making the pitch: here’s why you should build for Windows 8:</p> <ul> <li>Lots of volume  <li>Good timing</li></ul> <p><a href="http://jameschambers.azurewebsites.net/wp-content/uploads/2012/12/WP_000413.jpg"><img title="WP_000413" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: right; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="WP_000413" align="right" src="http://jameschambers.azurewebsites.net/wp-content/uploads/2012/12/WP_000413_thumb.jpg" width="244" height="184"></a>Interesting that he’s talking about “devices” and not just PCs. The expectation is that there will be 400 million new devices running Windows 8 this year.</p> <p>Steve acknowledges that there’s limited Windows Phone users right now, but commits to better marketing efforts for Windows and Windows Phone.&nbsp; “You will not be able to pick up a magazine, newspaper, or watch television without seeing our ads quite frequently.”&nbsp; The marketing commitment is something that has been missing on Windows Phone, so I’m really jazzed about that.</p> <p>Holy Crap. Steve just started the giveaways:</p> <ul> <li>100 Gb of Online Storage (lots of laughs lol)  <li>A free Surface (crowd goes nuts) – with a plea to build a couple apps</li></ul> <p>&nbsp;</p> <p>Now, on to Windows Phone with Kevin Gallo, Director of Program Management of Windows Phone.&nbsp; He walks us through how he has customized his experience. If you have a Windows Phone already, this is something that you likely already love and use.</p> <p><a href="http://jameschambers.azurewebsites.net/wp-content/uploads/2012/12/WP_000414.jpg"><img title="WP_000414" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: right; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="WP_000414" align="right" src="http://jameschambers.azurewebsites.net/wp-content/uploads/2012/12/WP_000414_thumb.jpg" width="244" height="184"></a>Lots of great features coming for users and developers:</p> <ul> <li>Tap and send  <li>Share contracts  <li>Kid Zone – really played this one up  <li>Three sizes of live tiles  <li>Rooms – private sharing of events, messaging, photos with groups of people  <li>Better hardware  <li>New UI elements  <li>Common cloud services  <li>Higher reuse of code through shared code base.  <li>Windows Phone is now emulated on Hyper V  <li>In-App purchases  <li>Wallet  <li>Lenses  <li>Performance improvements  <li>Speech API  <li>Lots of tooling improvements  <li>Bluetooth, better WiFi and NFC  <li>…tons more. 90% of the top developer requests are now implemented and part of the package.</li></ul> <p>The Windows Phone SDK is now out with a free version of VS 2012, emulators, tools, samples, etc.</p> <p>Next, he fires up Visual Studio to some applause, planning to show us a demo.</p> <p>Cool…simple app using paired devices (Windows Phone and Windows 8) over NFC. Takes a picture, uses a gesture to “flick” the photo from the tablet to the phone, then from the phone to the device. The code base is shared, there’s c++ wrapped as a component, a shared project, a Win8 project and and WP8 project. The c++ code was older and easily imported, then called from the other apps.</p> <p><a href="http://jameschambers.azurewebsites.net/wp-content/uploads/2012/12/WP_000415.jpg"><img title="WP_000415" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: right; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="WP_000415" align="right" src="http://jameschambers.azurewebsites.net/wp-content/uploads/2012/12/WP_000415_thumb.jpg" width="244" height="184"></a>Now the real s#!t is happening. They’re flying a quad copter with the phone, it’s got a live video feed, but their “lawyers wouldn’t let them fly the helicopter over the crowd”.</p> <p>75% of the top grossing apps are games, so this isn’t a market that you should not ignore if you have the ability to develop for Windows 8. Consumables, durables, c++ native code, all kinds of gaming engines are online with the platform, including Unity, who’s here to demo the Unity Gaming Engine on Windows Phone.</p> <p>The Unity IDE is pretty sweet…I haven’t played with game environment editing since the Half Life editor and Milkshape. Looks like the IDE supports multiple platform targets (iOS, Windows, Android, etc). You can edit the game while it’s running, which he did, then easily deployed it to a prototype Nokia device.</p> <p><a href="http://jameschambers.azurewebsites.net/wp-content/uploads/2012/12/WP_000417.jpg"><img title="WP_000417" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: right; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="WP_000417" align="right" src="http://jameschambers.azurewebsites.net/wp-content/uploads/2012/12/WP_000417_thumb.jpg" width="244" height="184"></a>Richard Kerris from Nokia just came onstage to introduce the Nokia 920 (again to much applause).&nbsp; Features:</p> <ul> <li>NFC  <li>Pureview  <li>Maps that work (hahahahaha!!!)</li></ul> <p>Holy crap. They are handing out the 920 to everyone in attendance!</p> <p>“Now you really do have everything you need to start building great apps for Windows Phone 8”.&nbsp; And then, he dropped the price of the Windows Phone app store pricing from $99 to $8…everybody can get in at this price.&nbsp; Only for the next 8 days.</p> <p><a href="http://dev.windowsphone.com">http://dev.windowsphone.com</a> for all the kit.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>371</wp:post_id>
		<wp:post_date>2012-10-29 17:14:00</wp:post_date>
		<wp:post_date_gmt>2012-10-29 17:14:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-build-keynote</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="build"><![CDATA[BUILD]]></category>
		<category domain="category" nicename="build"><![CDATA[BUILD]]></category>
		<category domain="post_tag" nicename="keynote"><![CDATA[Keynote]]></category>
		<category domain="post_tag" nicename="windows-8"><![CDATA[Windows 8]]></category>
		<category domain="post_tag" nicename="windows-phone"><![CDATA[Windows Phone]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3980802531]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>EF5 Code-First Migrations on SQL Azure - Reference Not Supported</title>
		<link>http://jameschambers.com/2012/12/ef5-code-first-migrations-on-sql-azure-reference-not-supported/</link>
		<pubDate>Sat, 01 Dec 2012 17:21:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=411</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I am using EF5 Code-First as my database-backing poison. I'm building a web site – deployed to Windows Azure Web Sites – and have been really enjoying the seamless execution of migrations and the easy publish capabilities of Visual Studio 2012 and Windows Azure.</p> <h2>Some Things Go Bump</h2> <p>I just completed a migration that took a text field and normalized it, creating a separate table and populating that with the distinct values from the original text.&nbsp; The migration pretty much worked itself out, except I needed to write INSERT and UPDATE statements to populate the strings in the new table.&nbsp; This allowed me to then turn around and push the ID of the newly create entity back to the original table.</p><pre class="csharpcode">    Sql(<span class="str">"INSERT INTO [Database].[dbo].[DestinationTable] ([Name]) select distinct FieldName from SourceTable"</span>);
    Sql(<span class="str">"UPDATE [Database].[dbo].[SourceTable] SET [NewFKId] = (select PKID from DestinationTable where [Name] = FieldName)"</span>);
</pre>
<style type="text/css">.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>

<p>As a thought exercise, imagine you were storing your Cities and States as text in a table called Locations.&nbsp; You want to break State out into a separate table, and you want a reference to the State stored in your Location table, not the string version of that state.</p>
<p>With the generated migration, and my code above appended to the end of the Up() method, I was ready to go. Everything worked locally and away I went.</p>
<h2>Then Came Production</h2>
<p>Happily coding along, all my tests passing, I completed the related UI changes, committed my work and published to Azure using Web Deploy and saved Publishing Profiles.</p>
<p>Unfortunately, when the deployment completed and the site ran, I got this message as part of a YSOD.</p>
<blockquote>
<p>Reference to database and/or server name in '[Database].[dbo].[DestinationTable]' is not supported in this version of SQL Server</p></blockquote>
<p>Gulp. Nothing like taking down a live site.</p>
<h2>Side Note: What I Should (and <em>Would</em>) be Doing</h2>
<p>Since I have multiple projects in the solution and I'm running with various web.config transforms, I'm unable to currently use GitHub publishing. It's still early for this source control support in Azure, so there's green pastures to look forward to.&nbsp; I'm rolling my own CI here, and I have the project on GitHub, so I can't fully automate. Thankfully, I have some PowerShell goodness going on that makes deploying to the cloud easy-peasy-lemon-squeezy and just one command from the console.</p>
<p>Down the road, when multi-site solutions and web.config transforms are supported through GitHub publishing, I'll be able to use Windows Azure Web Sites' built in capabilities for deployments. If something goes south, you just roll back to the last known good version of the site.</p>
<h2>An Easy Fix</h2>
<p>While the message points directly at the source of the problem, it's still not clear on what you need to do to resolve it.&nbsp; As it turns out, the limitation is in SQL Azure's ability to use the three-part name of the table.&nbsp; This doesn't really matter, because I'm already connected to the database and I can just drop the name from my statements like so:</p><pre class="csharpcode">    Sql(<span class="str">"INSERT INTO [dbo].[DestinationTable] ([Name]) select distinct FieldName from SourceTable"</span>);
    Sql(<span class="str">"UPDATE [dbo].[SourceTable] SET [NewFKId] = (select PKID from DestinationTable where [Name] = FieldName)"</span>);</pre>
<style type="text/css">.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>

<p>I republished the site and everything worked as I wanted.</p>
<p>So, remember, if you're getting the message that your database or server name reference isn't supported in SQL Azure, and if you're actually connected to the database in question, just drop the reference from the name to curtail this error.&nbsp; If you're getting this error because you are legitimately trying to connect to the other table, you should likely read up on it <a href="http://blogs.msdn.com/b/sqlnativeclient/archive/2010/02/12/using-sql-server-client-apis-with-sql-azure-vversion-1-0.aspx?Redirected=true">over here</a> for some strategies (one of which might be loading your data into memory on the client to do the work you're looking to do).</p>
<p>Cheers!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>411</wp:post_id>
		<wp:post_date>2012-12-01 17:21:00</wp:post_date>
		<wp:post_date_gmt>2012-12-01 17:21:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ef5-code-first-migrations-on-sql-azure-reference-not-supported</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[Asp.Net MVC]]></category>
		<category domain="post_tag" nicename="azure-websites"><![CDATA[Azure Websites]]></category>
		<category domain="category" nicename="develop-meta"><![CDATA[Develop Meta]]></category>
		<category domain="post_tag" nicename="entity-framework"><![CDATA[Entity Framework]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3784581804]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Know Your Network - The Azure Service Dashboard</title>
		<link>http://jameschambers.com/2012/11/know-your-network-the-azure-service-dashboard/</link>
		<pubDate>Fri, 23 Nov 2012 17:22:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=431</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote> <p>Having trouble viewing your Windows Azure Website? In spite of all the inner voices' assurances, it might not be you.</p></blockquote> <h1></h1> <h1>A Bump in the Night</h1> <p>I have had a very positive experience with Windows Azure. It just works. There have been a couple of headaches along the way, but I sort of expect that since my preferred flavour of Azure has been all the juicy bits still in preview mode.</p> <p>I was awakened by the furnace kicking in at 4am – it's 18 degrees Celsius below zero here right now – and was struck with some creative flair.&nbsp; I shot downstairs to my basement office to work on an Asp.Net MVC site that I'm hosting on Windows Azure Websites.</p> <p>After less than 15 minutes of work (sure the flair was creative, but it was also small) I attempted a push to the cloud.&nbsp; And, yes, <a href="https://twitter.com/srogalsky">Steve</a>, my tests were all passing. <img class="wlEmoticon wlEmoticon-smile" style="border-top-style: none; border-left-style: none; border-bottom-style: none; border-right-style: none" alt="Smile" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Know-Your-Network_5415/wlEmoticon-smile_2.png"> The response:</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Know-Your-Network_5415/image_2.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Know-Your-Network_5415/image_thumb.png" width="358" height="145"></a></p> <p>Internet Explorer cannot display the webpage? Okay, let's try Fiddler...</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Know-Your-Network_5415/image_4.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Know-Your-Network_5415/image_thumb_1.png" width="375" height="100"></a></p> <p>The server did not return a response for this request? Le sigh.</p> <h1>The Big Fix. Not.</h1> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Know-Your-Network_5415/image_6.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: right; padding-top: 0px; padding-left: 0px; margin: 15px 0px 15px 15px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" align="right" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Know-Your-Network_5415/image_thumb_2.png" width="190" height="176"></a>The thing I'm digging the most about Azure's tooling is how it's taking the friction away. When they introduced the "Download Publish Profile" a couple of months ago, it made the process of pushing a web site to the cloud <em>crazy easy</em>. And because your deployment settings (your publish profiles) are now part of your project, you can script this out and push to the cloud from the command prompt or even as part of your build script.</p> <p>So I thought, "Hey, maybe I somehow mucked my publishing settings up?".&nbsp; I've been known to...uh....optimize the odd file or two by hand before. I cleaned out my publishing settings through the build menu (Build –&gt; Publish Selection –&gt; Profile –&gt; Manage Profiles) then headed back to my <a href="http://manage.windowsazure.com/">Azure admin portal</a> to pull down my publish profile. I imported it again and hit publish.&nbsp; To the cloud!&nbsp; Gold, right? Nope. </p> <p>So, back to the portal. I knew something was going to be wrong with what I'd just done, so let's leverage the built-in tooling for Azure: logging, error details and failed request tracing. This was going to give me something for sure.</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Know-Your-Network_5415/image_8.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Know-Your-Network_5415/image_thumb_3.png" width="260" height="158"></a></p> <p>You set these up on your "Configure" tab from your website dashboard.&nbsp; Then you can access all the logs via FTP, the details are listed on your dashboard under the Diagnostic Logs heading in your sidebar.</p> <p>Hit the page a couple times, refresh my stats. Still nada. Here's what I was seeing from the stats chart:</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Know-Your-Network_5415/image_10.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Know-Your-Network_5415/image_thumb_4.png" width="475" height="147"></a></p> <p>Yeah, that's right. No errors, no requests, no failed connections to the DB.&nbsp; Zilch.&nbsp; This is exactly what I want to see at any other time in production <em>except when I'm <strong>actually</strong> getting errors</em>.</p> <p>Enough with this cloud business...time to kick it old school. I've been around the block and have run into similar things on IIS when there was a mal-formed config file.&nbsp; Visual Studio didn't have anything for me as far as errors or warnings, so I darted over to <a href="http://www.w3schools.com/dom/dom_validate.asp">W3Schools</a> to validate the document there. This was a long shot as my site was running locally, but I thought it was worth it.&nbsp; Still, everything checked out and this failure is not due to my tag skills or lack thereof.</p> <p>I headed back to my web.config and dropped in this classic, hoping it would spice up my error life:</p><pre class="csharpcode">  <span class="kwrd">&lt;</span><span class="html">customErrors</span> <span class="attr">mode</span><span class="kwrd">="Off"</span> <span class="kwrd">/&gt;</span></pre>
<style type="text/css">.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>

<p>Still no love. I thought I was going crazy.&nbsp; Technically, that didn't have any relevance in regards to this problem, but I like to say that every now and then to keep my ego in check.</p>
<p>I muddled around a bit more in vain, determined to figure out what it was I busted.&nbsp; An hour and a half in, certain that I had crossed all my i's and dotted all my t's, I finally decided to open a support ticket.&nbsp; The menu option for this is on your portal when you click on your account name:</p>
<p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Know-Your-Network_5415/image_12.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Know-Your-Network_5415/image_thumb_5.png" width="185" height="167"></a></p>
<p>And then the trophy appeared:</p>
<p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Know-Your-Network_5415/image_14.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Know-Your-Network_5415/image_thumb_6.png" width="333" height="186"></a></p>
<p>You can verify the health of the Windows Azure Platform on the <a href="http://www.windowsazure.com/en-us/support/service-dashboard/">Service Dashboard</a>.&nbsp; Oh how I wish I had known that two hours earlier.&nbsp; Check this out:</p>
<p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Know-Your-Network_5415/image_16.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Know-Your-Network_5415/image_thumb_7.png" width="532" height="169"></a></p>
<p>Guess which overtired, otherwise confident blurry-eyed developer hosts his Website in West US?</p>
<h1>The Moral of the Story</h1>
<p>I actually didn't know that there was a service dashboard.&nbsp; This is great. I've now pinned the site to my home screen on my Windows Phone, and the next time I wake up at 4 AM I'm going to check that little baby first before heading down for 15 minutes of Renaissance-style mid-night creativity.&nbsp; So, I don't have a moral to share here, just another tool for the war chest.</p>
<p>Before you pull your hair out fixing "your" problem next time, make sure your hosting provider is giving you all the sweet goods first!</p>
<p>Finally, if there are any shiny happy Windows Azure team members reading this, could you please, <em>please</em> add a notification on my dashboard if a service I am using is experiencing stress, a midlife crisis or apparent loss of network connectivity?&nbsp; Thanks so much!</p>
<p>(p.s. By the time I finished writing this post, the <a href="http://www.windowsazure.com/en-us/support/service-dashboard/">Service Dashboard</a> showed green checks for all my service friends)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>431</wp:post_id>
		<wp:post_date>2012-11-23 17:22:00</wp:post_date>
		<wp:post_date_gmt>2012-11-23 17:22:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>know-your-network-the-azure-service-dashboard</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[Asp.Net MVC]]></category>
		<category domain="post_tag" nicename="azure"><![CDATA[Azure]]></category>
		<category domain="post_tag" nicename="azure-websites"><![CDATA[Azure Websites]]></category>
		<category domain="category" nicename="develop-meta"><![CDATA[Develop Meta]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3827632622]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hack All the Things at Pure Imagination!</title>
		<link>http://jameschambers.com/2012/11/hack-all-the-things-at-pure-imagination/</link>
		<pubDate>Sat, 17 Nov 2012 17:23:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=441</guid>
		<description></description>
		<content:encoded><![CDATA[<p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: right; padding-top: 0px; padding-left: 0px; margin: 0px 0px 25px 25px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" align="right" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Hack-All-the-Things-at-Pure-Imagination_FFE7/image_5.png" width="240" height="101">Hackathons are great because they mean no excuses – nothing to get in the way of learning some new tech.&nbsp; Better still are the great events where there are mentors and vendors with presence to make the event even more engaging.&nbsp; Pure Imagination is offering this <em>and more</em> by setting you up with deep dive sessions and content from leaders in several of the core subjects you need to build the next big thing.</p> <p><a href="http://www.shopify.com/partners/apps" target="_blank">Shopify</a> and <a href="http://developers.500px.com/" target="_blank">500px</a> are the key “API sponsors” for the hackathon.&nbsp; I’ve recently attended an API-themed hackathon (at PrDC Regina) and found this to be an incredible challenge, with results that just drop you. In spite of the fact that everyone’s using (essentially) the same APIs, the variations of themes and treatments and business plans and goals…it’s <a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Hack-All-the-Things-at-Pure-Imagination_FFE7/image_2.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: right; padding-top: 0px; padding-left: 0px; margin: 15px 0px 0px 25px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" align="right" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Hack-All-the-Things-at-Pure-Imagination_FFE7/image_thumb.png" width="240" height="47"></a>amazing what we clever devs can come up with!</p> <p>And yet, they’re going even further <em>still</em> with some of Canada’s top VCs in attendance. You’ll get a chance to spend 10 minutes in front of them and pitch your idea, then they’ll help you see forest if your mind’s still in the trees.</p> <p>All of this is lead by a keynote with Grant Skinner, and some great content on Windows 8, Azure, Visual Studio and concepts such as design, computing in the cloud, authentication and authorization and more.</p> <p><a href="http://aka.ms/startuppi" target="_blank">Register here</a> and follow <a href="https://twitter.com/purelyimagine" target="_blank">@purelyimagine</a> on the Twitters!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>441</wp:post_id>
		<wp:post_date>2012-11-17 17:23:00</wp:post_date>
		<wp:post_date_gmt>2012-11-17 17:23:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hack-all-the-things-at-pure-imagination</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>
	</item>
	<item>
		<title>The Essential Post-BUILD ASP.NET Playlist</title>
		<link>http://jameschambers.com/2012/11/the-essential-post-build-asp-net-playlist/</link>
		<pubDate>Mon, 05 Nov 2012 17:24:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=451</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I am back and mostly decompressed from //BUILD/ in Seattle. Lots of great product announcements – both digital and physical – and it truly is an exciting time to be a programmer on the .NET stack.&nbsp; With releases in nearly all product groups from server to desktop, productivity tools to development tools and even hardware, we are seeing a company that is involved with and involving the open source community in more and more of what it considers to be at the heart of it’s development experience.</p> <h1>What You Missed if You Missed It</h1> <p>Not everyone was able to attend //BUILD/. I got in last minute on a waiting list. Others who had previously registered were dealing directly with Hurricane Sandy’s devastation, or indirectly with the impact on Eastern transportation and were otherwise unable to attend.&nbsp; The facility was also limited in space – something that Steve Ballmer addressed in his keynote – resulting in greater than anticipated demand and preventing many who wanted to attend from doing so.</p> <p>For whatever reason you were unable to attend, I present to you the list of sessions available on Channel 9 that are must-sees for every developer on the ASP.NET stack.&nbsp; As a professional eager to improve their skillset and continue learning, <em>I highly encourage you to invest 6 hours into your career and watch these sessions on-demand</em>.</p> <h1>The Basics – What’s Here and What’s Coming</h1> <p>Here’s a quick look at the things that are already here and available to developers, and a few things that are on the horizon.&nbsp; First up, the ever-funny Scott Hanselman on the state of the stack.</p><iframe style="height: 540px; width: 960px" src="http://channel9.msdn.com/Events/Build/2012/3-027/player?w=960&amp;h=540" frameborder="0" scrolling="no"></iframe> <p>&nbsp;</p> <p>Next, Scott teams up with Jon Galloway for an entertaining peek at some of the new and not-yet-ready bits we have to look forward to.&nbsp; This covers everything from Web Essentials, to a brief look at SignalR, templating updates, direction on the ASP.NET team and more.</p><iframe style="height: 540px; width: 960px" src="http://channel9.msdn.com/Events/Build/2012/3-028/player?w=960&amp;h=540" frameborder="0" scrolling="no"></iframe> <p>&nbsp;</p> <p>From a script side of things, there are some major improvements to the way we write client side code.&nbsp; My call is that TypeScript is going to be huge in our community and something you won’t get away with not knowing within a year.&nbsp; Anders Hejlsberg walks you through.</p><iframe style="height: 540px; width: 960px" src="http://channel9.msdn.com/Events/Build/2012/3-012/player?w=960&amp;h=540" frameborder="0" scrolling="no"></iframe> <p>&nbsp;</p> <p>As well, Mads Kristensen has a great talk on the experience in Visual Studio.&nbsp; The tools we have at our disposal make me look back on 1999 and wonder how the heck any of us made it work.&nbsp; We have a great kit, and VS2012 is bar-none the best IDE out there.</p><iframe style="height: 540px; width: 960px" src="http://channel9.msdn.com/Events/Build/2012/3-032/player?w=960&amp;h=540" frameborder="0" scrolling="no"></iframe> <p>&nbsp;</p> <h1>In the Wings and Good To Know</h1> <p>There are some technologies, features and libraries that are critical building blocks for us web devs.&nbsp; Daniel Roth tackles some of this with coverage on Web API and cross-client development.</p><iframe style="height: 540px; width: 960px" src="http://channel9.msdn.com/Events/Build/2012/3-036/player?w=960&amp;h=540" frameborder="0" scrolling="no"></iframe> <p>&nbsp;</p> <p>Real-time apps are becoming the norm, especially if you’re working in the “social” space, but this is true also of games, LOB applications and pretty much anything else you can think of.&nbsp; And, yes, even chat <img class="wlEmoticon wlEmoticon-smile" style="border-top-style: none; border-left-style: none; border-bottom-style: none; border-right-style: none" alt="Smile" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/The-Essential-Post-BUILD-AS.NET-Playlist_AE44/wlEmoticon-smile_2.png">.&nbsp; Check out Damian Edwards and David Fowler as they demo the juicy pub-sub power of SignalR.</p><iframe style="height: 540px; width: 960px" src="http://channel9.msdn.com/Events/Build/2012/3-034/player?w=960&amp;h=540" frameborder="0" scrolling="no"></iframe> <p>&nbsp;</p> <h1></h1> <h1>And There you Have It</h1> <p>Those are my top picks for web devs.&nbsp; There is one more very track that you should be aware of – touched on in many of these talks – and I encourage you to explore all of the cloud content on Channel 9</p> <p>&nbsp;&nbsp;&nbsp; <a href="http://channel9.msdn.com/Events/Build/2012?sort=sequential&amp;direction=desc&amp;term=&amp;t=cloud&amp;t=windows-azure" target="_blank"><strong>Cloud Talks from //BUILD/ on Channel 9</strong></a></p> <p>I wish you all a very happy infusion of knowledge and awesome!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>451</wp:post_id>
		<wp:post_date>2012-11-05 17:24:00</wp:post_date>
		<wp:post_date_gmt>2012-11-05 17:24:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-essential-post-build-asp-net-playlist</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[Asp.Net MVC]]></category>
		<category domain="category" nicename="build"><![CDATA[BUILD]]></category>
		<category domain="post_tag" nicename="razor"><![CDATA[Razor]]></category>
		<category domain="post_tag" nicename="signalr"><![CDATA[SignalR]]></category>
		<category domain="post_tag" nicename="typescript"><![CDATA[TypeScript]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3990257026]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>A Web Developer&#039;s Look at the MVC4 Request Pipeline</title>
		<link>http://jameschambers.com/2012/10/a-web-developer-s-look-at-the-mvc4-request-pipeline/</link>
		<pubDate>Wed, 24 Oct 2012 17:25:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=461</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This article is intended to give you a solid understanding of how client requests move through the Asp.Net Mvc 4 Pipeline.&nbsp; As developers, we need to know what options we have to override default behaviour, modify or augment requests as they arrive (and as they're executed) and extend the pipeline as our requirements dictate.</p> <p>A friend recently asked why his constructor was being called multiple times on the "same" request.&nbsp; I thought the best way illustrate why this happens would be to explain the entire request stack.&nbsp; Or say, "Just because!", but I also enjoy writing articles like this, so we'll go with the entire stack version.</p> <p>If you're looking for the "Coles notes" version, scroll down about halfway to see the summary. <img class="wlEmoticon wlEmoticon-smile" style="border-top-style: none; border-left-style: none; border-bottom-style: none; border-right-style: none" alt="Smile" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/f726bca5cc21_12811/wlEmoticon-smile_2.png"></p> <h1>Once Upon a Browser</h1> <p>I'll skip a few steps (like keyboard interrupts on the client device) and skip to the part where the HTTP request enters the interesting bits of the MVC Framework.</p> <p>On the first request, application startup is executed from Global.asax, which configures the following:</p> <ul> <li>Routes for WebAPI  <li>Global filters  <li>General routing  <li>Bundling and minification  <li>Authorization providers </li></ul> <p>Bundling and minification relate to client-required resources such as scripts and stylesheets and don't affect our core request.&nbsp; Authorization providers – for FaceBook, Twitter, Microsoft Account and Google Account – are now supported out-of-box, but don't relate directly to our method execution either.</p> <p>Assuming the app is already running, we can get back to the incoming request.</p> <p>The registered route handler (an <span style="font-family: consolas" face="Consolas">MvcRouteHandler</span> by default) won't find a physical file for our controller action, so instead it associates a matching route in the <span style="font-family: consolas" face="Consolas">RouteCollection</span> (which we configured above) and gets the <span style="font-family: consolas" face="Consolas">IHttpHandler</span> that will be used for the request.&nbsp; In our case, it's an <span style="font-family: consolas" face="Consolas">MvcHandler</span>, and it's instantiated with the current instance of the <span style="font-family: consolas" face="Consolas">RequestContext</span>.</p> <p>There are some other pipeline events that are firing, true, but now, we're moving into the interesting bits as a web dev (versus someone developing HTTP handlers).&nbsp; <strong>The MvcHandler is now processing the request</strong>.&nbsp; If you haven't modified the default behaviour, a <span style="font-family: consolas" face="Consolas">DefaultControllerFactory</span> is spun up and creates the controller.</p> <p>As we ultimately inherit all our controllers from <span style="font-family: consolas" face="Consolas">System.Web.Mvc.Controller</span> we have a few interesting events around the time our action (a public, non-overloaded, non-static class method) is being executed that we can participate in.</p> <ul> <li>OnActionExecuting  <li>OnActionExecuted  <li>OnAuthorization  <li>OnException  <li>OnResultExecuting  <li>OnResultExecuted </li></ul> <p>However, we also have the ability to create our own filters, which is arguably a better way to interact with the request.</p> <p>So, filter execution then kicks in, in this order:</p> <ul> <li>Authorization  <li>Action  <li>Result  <li>Exception </li></ul> <p>Note that the final order of execution is tied to the following orders of precedence:</p> <ul> <li>Global filters  <li>Controller filters  <li>Action filters  <li>The order in which those were applied (within their type) </li></ul> <p>Our method execution and view rendering are wrapped up in there as well.&nbsp; You can see this by inheriting from <span style="font-family: consolas" face="Consolas">ActionFilterAttribute</span> and overriding the Action and Result events.&nbsp; Put this attribute on your action and you'd see something like this if you were Debug.WriteLining:</p> <ul> <li>OnActionExecuting  <li>Action (method) executing  <li>OnActionExecuted  <li>OnResultExecuting  <li>View executing  <li>OnResultExecuted </li></ul> <p>One of the great features of the MVC Framework is model binding, which is part of this request pipeline but really deserves it's own article.&nbsp; Model binding is the process in which incoming HTTP data - such as form data or query string parameters - are converted to .Net types.&nbsp; This means that we don't need to cast a form field to an int, but more interestingly, that the form collection (or querystring parameters) as a whole can be converted to complex .Net types like a Person object. (I have some samples on this <a href="http://theycallmemrjames.blogspot.ca/2010/05/aspnet-mvc-and-jquery-part-4-advanced.html">here</a>.)</p> <p>There's one last point worth mentioning here. When the view is being executed it is done so by the registered view engine(s).&nbsp; You can replace this with anything available in the community or you can create your own.&nbsp; There are a couple of exceptions to this part of execution:</p> <ul> <li>You are not returning a result that derives from ViewResult, in which case your method is executed and the result is returned to the client. You can set your response types (like 403, or 200) explicitly.  <li>Your action is an EmptyResult, or it returns void which is translated into an empty result. Again, you can set your response types as you wish.  <li>Your action generates an exception, in which case the last piece of your code being executed may just very well be your custom exception handler. </li></ul> <h1>What About the Coles Notes?</h1> <p>A shorthand version of the following might be as follows:</p> <ul> <li>Incoming request  <li>App initialization (on the first request to the application)  <li>Routing magic/kung fu  <li>Controller creation  <li>Filter execution  <li>Action invocation  <li>Filter execution  <li>View Rendering  <li>Final filter execution </li></ul> <p>And BAM! Your user sees something in the browser.</p> <h1>Riddle Me This</h1> <p>Now, a quick quiz.&nbsp; Given the following view:</p><pre class="csharpcode">    <span class="kwrd">&lt;</span><span class="html">h2</span><span class="kwrd">&gt;</span>Execution Count Testing<span class="kwrd">&lt;/</span><span class="html">h2</span><span class="kwrd">&gt;</span>
    <span class="kwrd">&lt;</span><span class="html">p</span><span class="kwrd">&gt;</span>
        The execution count from the view is: 
        @Model. (@MvcApplication3.MvcApplication.ConstructorCallCount 
        constructor calls.)
    <span class="kwrd">&lt;/</span><span class="html">p</span><span class="kwrd">&gt;</span>
    <span class="kwrd">&lt;</span><span class="html">p</span><span class="kwrd">&gt;</span>
        Rendered from the partial view via Html.RenderAction, the 
        execution count is: @{Html.RenderAction("ExecutionCountAsPartial");}.
    <span class="kwrd">&lt;/</span><span class="html">p</span><span class="kwrd">&gt;</span>
    <span class="kwrd">&lt;</span><span class="html">p</span><span class="kwrd">&gt;</span>
        Rendered via ajax request from the partial view, the execution 
        count is: <span class="kwrd">&lt;</span><span class="html">span</span> <span class="attr">id</span><span class="kwrd">="count-result"</span><span class="kwrd">&gt;&lt;/</span><span class="html">span</span><span class="kwrd">&gt;</span>
    <span class="kwrd">&lt;/</span><span class="html">p</span><span class="kwrd">&gt;</span>

    @section scripts
    {
    <span class="kwrd">&lt;</span><span class="html">script</span> <span class="attr">type</span><span class="kwrd">="text/javascript"</span><span class="kwrd">&gt;</span>
        $(<span class="kwrd">function</span> () {
            <span class="kwrd">var</span> requestUrl = <span class="str">'@Url.Action("ExecutionCountAsPartialViaAjax")'</span>;
            $.ajax(requestUrl)
            .success(<span class="kwrd">function</span> (data) {
                $(<span class="str">"#count-result"</span>).html(data);
            });
        });
    <span class="kwrd">&lt;/</span><span class="html">script</span><span class="kwrd">&gt;</span>
    }</pre>
<p>...and the following controller code:</p><pre class="csharpcode">    <span class="kwrd">private</span> <span class="kwrd">int</span> _myCounter = 0;

    <span class="kwrd">public</span> HomeController()
    {
        MvcApplication.ConstructorCallCount++;
    }

    <span class="kwrd">public</span> ActionResult ExecutionCount()
    {
        <span class="kwrd">return</span> View(++_myCounter);
    }
        
    <span class="kwrd">public</span> PartialViewResult ExecutionCountAsPartial()
    {
        <span class="kwrd">return</span> PartialView(++_myCounter);
    }

    [OutputCache(NoStore=<span class="kwrd">true</span>, Duration=1)]
    <span class="kwrd">public</span> PartialViewResult ExecutionCountAsPartialViaAjax()
    {
        <span class="kwrd">return</span> PartialView(<span class="str">"ExecutionCountAsPartial"</span>, ++_myCounter);
    }</pre>
<p>...would you have thought you would have seen this?</p>
<p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/f726bca5cc21_12811/image_6.png" width="540" height="135"></p>
<p>Back to our original question, we have to differentiate between what a client request is and what you might refer to as an execution request.&nbsp; In this case, the view for ExecutionCount is invoking three "execution" requests across two "client" requests.&nbsp; The first two action invocations are made through the first client request, and when that is returned to the browser, the client is making a second request via Ajax which results in the third method execution.</p>
<p>So, two requests from the client and three actions executed, and the constructor is called three times.&nbsp; We're trackin'.&nbsp; So, why all the controller constructor calls?</p>
<p>Well, let's turn this around a second.&nbsp; What if different actions are attributed with different filters?&nbsp; Authorization requirements?&nbsp; What about out-of-order execution (as in, single page applications making requests on whatever timing plays out)? The result in any of those would be a design where we're no longer able to DoOneThing and we'd have to write composite filters that were able to handle the permutations of the above and other scenarios.&nbsp; The MVC pipeline is designed such that each request passes through the above steps, regardless of where the request comes from.&nbsp; This ensures consistency in execution for all requests.</p>
<p>If you are looking for different behaviour you can work around this if you simply separate your concerns: what I'm saying here is that a controller shouldn't be used to do heavy lifting.&nbsp; My answer to my friend was simply that his constructor was likely doing too much work and, in his case, user state shouldn't be managed in the constructor.</p>
<h1>More Reading</h1>
<p>Now, all that is likely enough for most of us, but if you want to dive deeper you can read up on the following topics in more details:</p>
<ul>
<li><a href="http://msdn.microsoft.com/en-us/library/system.web.mvc.mvchandler(v=vs.108).aspx">MvcHandler</a> 
<li><a href="http://msdn.microsoft.com/en-us/library/gg416513(v=vs.98).aspx">Filtering in Asp.Net MVC</a> 
<li><a href="http://msdn.microsoft.com/en-us/library/cc668201(v=vs.100).aspx">Mvc Routing</a> </li></ul>
<p>As well, code from this article is available in the following repository on GitHub:</p>
<p><a href="https://github.com/MisterJames/AspNetMvc-Execution-Pipeline">https://github.com/MisterJames/AspNetMvc-Execution-Pipeline</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>461</wp:post_id>
		<wp:post_date>2012-10-24 17:25:00</wp:post_date>
		<wp:post_date_gmt>2012-10-24 17:25:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-web-developer-s-look-at-the-mvc4-request-pipeline</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="actionfilters"><![CDATA[ActionFilters]]></category>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[Asp.Net MVC]]></category>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="post_tag" nicename="codeproject"><![CDATA[CodeProject]]></category>
		<category domain="category" nicename="develop-meta"><![CDATA[Develop Meta]]></category>
		<category domain="post_tag" nicename="routing"><![CDATA[Routing]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3781207184]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>34141</wp:comment_id>
			<wp:comment_author><![CDATA[Alex]]></wp:comment_author>
			<wp:comment_author_email>alexander.bethke@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://beton.github.com</wp:comment_author_url>
			<wp:comment_author_IP>84.220.172.156</wp:comment_author_IP>
			<wp:comment_date>2013-06-03 18:48:38</wp:comment_date>
			<wp:comment_date_gmt>2013-06-03 18:48:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very nice!
Thanks for that :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[2036811745]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>42011</wp:comment_id>
			<wp:comment_author><![CDATA[MVC Recommended Resources And Tutorials | open and free]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://17path.wordpress.com/2015/10/20/50-best-mvc-tutorial-resources/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.96</wp:comment_author_IP>
			<wp:comment_date>2015-10-20 09:30:12</wp:comment_date>
			<wp:comment_date_gmt>2015-10-20 09:30:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;]  A Web Developer&#8217;s Look at the MVC4 Request Pipeline [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1445333413.055742;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>&#034;Project&#034; Cannot be Opened Because its Project Type is Not Supported</title>
		<link>http://jameschambers.com/2012/10/ldquo-project-rdquo-cannot-be-opened-because-its-project-type-is-not-supported/</link>
		<pubDate>Wed, 24 Oct 2012 17:28:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=471</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I have a brand new Windows 7 box with an install of Visual Studio 2010 Ultimate. I didn’t install Visual Web Developer.</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Editing-Legacy-Web-Applications_AFFB/image_6.png" width="511" height="183"></p> <p>I have a solution for a series of projects that are hosted on localhost on IIS. When I pulled our source code from the repository I was able to load the solution, but the projects that were “Web Sites” unavailable, with Visual Studio throwing up an error for each one as it tried to load.</p> <blockquote> <p>Project “http://localhost/myproject” cannot be opened because its project type () is not supported.</p></blockquote> <p>In English, what Visual Studio is <em>really</em> trying to tell you is this:</p> <blockquote> <p>The project “http://localhost/myproject” uses features and project template types that are normally present when you install Visual Web Developer.</p></blockquote> <p>Thankfully the fix is easy, just install Visual Web Developer (from your ISO, add features to your install) and the required components will be in place. A thanks out to my co-worker Mark who helped to troubleshoot this.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>471</wp:post_id>
		<wp:post_date>2012-10-24 17:28:00</wp:post_date>
		<wp:post_date_gmt>2012-10-24 17:28:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ldquo-project-rdquo-cannot-be-opened-because-its-project-type-is-not-supported</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<category domain="category" nicename="develop-meta"><![CDATA[Develop Meta]]></category>
		<category domain="post_tag" nicename="visual-studio-2010"><![CDATA[Visual Studio 2010]]></category>
		<category domain="post_tag" nicename="web-development"><![CDATA[Web Development]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3781260894]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Getting Ready for the Dojo</title>
		<link>http://jameschambers.com/2012/10/getting-ready-for-the-dojo/</link>
		<pubDate>Sun, 21 Oct 2012 17:29:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=491</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Hey everyone in Ontario!&nbsp; Well, at least, hello to you 50+ rock star developers from the CTT .NUG who signed up to participate in the Asp.Net MVC session this week! <a href="http://cttdnug.org" target="_blank"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: right; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" align="right" src="http://jameschambers.azurewebsites.net/wp-content/uploads/2012/12/image.png" width="514" height="98"></a>You guys rock!</p> <p>I'm stoked to be running this Dojo out here – the attendance at the intro to MVC a few months back was really strong, so I’m honored to be invited back to dive deeper and get you guys writing code. We are going to build out a database-backed, membership-enabled, fully functioning web app.</p> <p>This is a hands on session – I need you to bring your laptop along, and I highly recommend that you have the tools installed before you come. We have about 120 minutes – which is already tight – and if you spend the first 45+ minutes installing tools, you just won't get as much out of it!</p> <p>Grab a copy of the following so you don't have to miss any sessions and you can dive right in:</p> <p><strong>Visual Studio 2012</strong> – This has everything you need. You can either grab a <a href="http://www.microsoft.com/visualstudio/eng/downloads" target="_blank">free 90 day trial edition</a> or a completely free <a href="http://www.microsoft.com/visualstudio/eng/downloads" target="_blank">Express Web edition</a>.</p> <blockquote> <h2><font style="font-weight: bold">- or - </font></h2></blockquote> <p><strong>Visual Studio 2010</strong> – But, you'll need to add some "fresh" if you want to hang out with the cool kids. Make sure you have the following:</p> <ul> <li><a href="http://www.microsoft.com/en-us/download/details.aspx?id=23691" target="_blank">Visual Studio 2010 SP1</a>  <li>The latest version of <a href="http://nuget.org" target="_blank">NuGet</a>  <li><a href="http://www.asp.net/mvc/mvc4" target="_blank">Asp.Net MVC 4</a> <em>RTM Version </em><strong>IMPORTANT – </strong>the project templates and tooling have changed. To get the most out of this dojo, I need you to have the final version of MVC4 running on your machine.</li></ul> <p><strong></strong>&nbsp;</p> <blockquote> <p>Just a quick note...while I am a totally huge Windows 8 fan and encourage you to try it out, for the purpose of this Dojo session I highly recommend running from Windows 7 (or boot to a VHD from Win8 to Windows 7). I will be demoing a tool that has not yet been updated to work with the new version of PowerShell on Windows 8.&nbsp; If you are already running Windows 8 full time (like me!) then I will be able to help you out and we can work around it.</p></blockquote> <p>Really looking forward to meeting everyone and working through as much code as possible in about 2 hours. See you there!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>491</wp:post_id>
		<wp:post_date>2012-10-21 17:29:00</wp:post_date>
		<wp:post_date_gmt>2012-10-21 17:29:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-ready-for-the-dojo</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[Asp.Net MVC]]></category>
		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>
		<category domain="post_tag" nicename="ctt-nug"><![CDATA[CTT .NUG]]></category>
		<category domain="post_tag" nicename="dojo"><![CDATA[Dojo]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3964845853]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3964845853]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>On Location: Building Connected Applications with Windows Azure</title>
		<link>http://jameschambers.com/2012/10/on-location-building-connected-applications-with-windows-azure/</link>
		<pubDate>Fri, 19 Oct 2012 17:30:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=501</guid>
		<description></description>
		<content:encoded><![CDATA[<p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: right; padding-top: 0px; padding-left: 0px; margin: 0px 0px 0px 70px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" align="right" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/On-Location-Building-Connected-Applicati_E956/image_3.png" width="140" height="265">Hey everyone, I'm geeked out to be joining Jonathan Rozenblit live at the Microsoft office in Mississauga to talk about Windows Azure Mobile Services.</p> <h1>Set time aside on October 22 at 1pm Eastern!</h1> <p>The theme: connected applications.&nbsp; Mobile devices are limited by computing power.&nbsp; Users want simple authentication (even those that don't understand that appreciate a simple Facebook login to your app).&nbsp; You need power on the service side.&nbsp; You need to support multiple platforms easily.</p> <p>And perhaps you're building a new client onWindows 8, Windows Phone, iOS or even Android.&nbsp; Regardless of the mobile platform, we're going to equip you with the tools you need to get started building your apps.</p> <p>For all the details, check out the <a href="http://aka.ms/azurevirtualworkshops">information site</a> and scroll down to register for the October 22 event.&nbsp; See you all there!</p> <p>If you want to follow along:</p> <ul> <li><a href="http://aka.ms/azurevirtualworkshops">Register for the event</a>  <li><a href="http://www.windowsazure.com/en-us/pricing/free-trial/?WT.mc_id=A1B7B96AF">Sign up for the free 90 day trial</a>  <li><a href="http://www.windowsazure.com/en-us/develop/net/other-resources/training-kit/?WT.mc_id=A9CB3834A">Download the SDK</a></li></ul> <p>&nbsp;</p> <p>For more information on getting started with Azure, check out the <a href="http://www.microsoft.com/canada/azureworkshops/downloads.aspx">main download page</a> for the event.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>501</wp:post_id>
		<wp:post_date>2012-10-19 17:30:00</wp:post_date>
		<wp:post_date_gmt>2012-10-19 17:30:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>on-location-building-connected-applications-with-windows-azure</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="azure"><![CDATA[Azure]]></category>
		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>
		<category domain="post_tag" nicename="mobile-services"><![CDATA[Mobile Services]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3872298824]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Myths That (Some!) Ruby on Rails People Tell You</title>
		<link>http://jameschambers.com/2012/10/lies-that-ruby-on-rails-people-tell-you/</link>
		<pubDate>Tue, 16 Oct 2012 17:31:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=511</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote> <p>Hey...this post just shot past 10,000 views and I've received a ton of feedback that the title was inflammatory, which is completely fair. I've renamed it from "Lies that Ruby on Rails People Tell You" to the above, as I realize I was painting with the same wide strokes I am complaining about in this post. Thanks to all who were calling me on my BS title.&nbsp; Cheers, -JC</p></blockquote> <p>Over the course of the last several years I've had the pleasure of working with developers from many different backgrounds.&nbsp; It is true that there is incredible talent in every discipline. It is also true that you can build out great solutions on any of today's modern frameworks.</p> <p>I got my legs programming when it was cool to hate Microsoft (the first time around).&nbsp; I built CGIs that ran on Linux servers, attended "distro install competitions", ran my home internet off of the Linux Router on a Floppy project and through it all maintained that the blue mothership from Redmond was evil.</p> <p>Then I grew up.</p> <p>The reality of a multi-platform solution hit me very early in my career. It was great to be part of a production environment where many different engineers took on projects of different capacities requiring multiple skillsets and a ton of teamwork. I had learned that the "right way" to do something <em>was</em> through teamwork, cooperation and ingenuity, and that a particular breed of technology or the language you chose played a much smaller role in a successful project.</p> <p>For over a decade now I have been programming primarily on the MS stack, and in the last three years have spent a lot of time working with the MVC Framework. I enjoy the workflow, the toolset, the community and especially the opportunities I've been granted that allow me to share my experience and mentor others.</p> <p>Today, it is the attitude I once held – that the way to do all things is the way I do it with the technology I prefer – it's that attitude that frustrates me more than anything. It really is true that the things you like least in others are the things you like least about yourself.</p> <h2>Okay, So What Am I Trying to Do Here?</h2> <p>Let's start with what I'm <em>not</em> doing. I am <em>not</em> trying to say that the MVC Framework is better than Ruby on Rails.&nbsp; That may be my opinion, but that's because it's <em>best for me.</em> Please appreciate the difference.</p> <p>What I <em>am</em> trying to do is to show that there is much less of a gap than might be suggested. The MVC Framework is mature, stable, performant, and worth exploring. It is also very likely worth switching to if you are on older tech.</p> <p>What I am <em>also</em> trying to do is to grow the chorus of folks who are willing to try new things out. This is the one I hope I win at, because this is how things are going to get better. I often use the analogy of the iPhone, Android and Windows Phone. We have three <em>great</em> options for smart phones because there are three vendors taking a serious whack at the cat.</p> <h2>Oh Ruby, Don't Take Your Love to Town</h2> <p>While I've had the privilege of working with some of the brightest minds along the way, I've also been part of teams where being at odds over which tech to use ends in turmoil on the project. Throughout my career the arguments have varied and blurred in focus between operating systems, languages, platforms, patterns, frameworks or even companies.&nbsp; Windows vs. Linux, c++ vs. Java, Mac vs. PC, iPhone vs. Android, AWS versus Azure, .Net vs. [insert any framework here].&nbsp; Some battles seem to be more intense than others, but in the last year I discovered one that actually blindsided me, I was completely unaware it was brewing. </p> <p>And it comes from Ruby on Rails developers.</p> <h1>Judging Books</h1> <p>I want to be fair here – there's more than one camp in the Rails world and I've met some insanely intelligent, productive, passionate developers who could do pretty much anything for mobile and web in RoR.&nbsp; I've worked alongside some that have a background using .Net.&nbsp; But there's a slice of the Railers that has either never used the MVC Framework or used it in an early incarnation and have since not only condemned the thing, but also the developers that do good things – intelligently, productively and passionately – working inside Visual Studio.</p> <p>More recently, I've been surprised by the venomous bile that has built up in some of these folks' throats over the last year, to a point where they are spreading inaccurate, misleading and even entirely made up points to counter what is offered in the .NET camp for MVC development.&nbsp; So I want to set the wheels in motion to correct some of these myths.</p> <h2>Myth 1: It's Easier to Bootstrap a Project In Rails</h2> <p>It's quite easy in Rails to get started. If you are comfortable with the command line you can create a new project by invoking a couple of commands. You can use template sites or boiler-plate generators that allow you to select the most common elements and assemble a project to get started.&nbsp; There are also UI-based tools that facilitate a basic template of a project in Rails to get you kickstarted.</p> <p>But that doesn't make it easier.&nbsp; Just different.</p> <p>As an MVC Framework developer, I also get my choice of options. To start with, I can just say "File-&gt;New-&gt;Project". I can use default project templates that are included in Visual Studio, download starter projects from the web, or, if I prefer, start with a completely empty solution and use Nuget to cherry-pick functionality that other developers have made available. </p> <h2>Myth 2: It's Easier to Manage Packages Rails</h2> <p>This one was true, especially a couple of years ago. But Nuget – the open source package manager for Visual Studio – has come a long way and as of this writing there are very few things that it lacks. You can manage packages at the solution or project level. You can leave your binaries out of source control and leverage automatic package restore. You can cache projects at the machine or solution level. You can (very easily!) build out your own Nuget server, or use a third party solution like MyGet to host widely available private package feeds or an internal corporate feed.&nbsp; Semantic versioning, dependencies, package upgrades and more are all implemented.&nbsp; </p> <p>Furthermore, the Package Manager Console is built on top of PowerShell and can be extended by Nuget Packages, meaning other developers can push out new functionality to your IDE along with functionality for your project by adding new commands to the Console.&nbsp; It also has access to (almost) the entire extensibility points that Visual Studio offers, so it can modify your configuration, add files, create references, or insert code and more to affect your project.</p> <p>And, especially for .Net developers, there are additional benefits.&nbsp; Nuget is not limited exclusively to MVC projects; rather, you can use it for console apps, web service projects, Windows 8 or Windows Phone projects or whatever you like, so it's opened the door to even more sharing and open source community to more devs around the world.</p> <h2>Myth 3: It's Better to Develop with RoR Because it's Open Source</h2> <p>If your personal opinion or corporate agenda is that it's "better" to develop on OSS solutions, then good on you. For the record, the MVC Framework is completely open source. So is the <em>entire</em> Asp.Net stack. And the script libraries that are included in the project templates.&nbsp; Oh, and Nuget, too.&nbsp; This is not a differentiator for Rails.</p> <h2>Myth 4: I Get More Options for View Engines/I'm not Limited by Microsoft View Engines</h2> <p>First of all...what limitations?&nbsp; The Razor view engine – the default for MVC – is likely one of the best view engines around right now. It did not have to support years of history when it was crafted, but it got to learn from it. It is intelligent <em>as all get out</em> and understands inline switching between code and markup. It is darn fast. It is terse (though not as much as Haml, for example) and versatile. </p> <p>There are other view engines available to the MVC Framework such as Spark, NVelocity, Brail, or others or you can write your own.</p> <p>Yes, in RoR there are many view engines. But like the MVC Framework there is a default, a whole bunch of less relevant engines and niche ones that exist to satisfy niche requirements.&nbsp; Several people have demonstrated why they <em>prefer</em> certain ones over others, but no one has shown me why their view engine of choice is <em>better.</em></p> <h2>Myth 5: Ruby on Rails has Been Around Longer and is More Mature</h2> <p>This is an irrelevant, misleading comment that is usually followed by statements like "there are more answers to questions on Stack Overflow" or "there is a better community" or the like.</p> <p>Let's address the first point: Ruby on rails has indeed been around longer than the MVC Framework, but this is a slight of hand.&nbsp; The MVC Framework is built on top of the .NET Framework and the toolset for MVC is an extension of Visual Studio.&nbsp; Maturity isn't dictated by age, and what is really important is how comfortable you are with your tools.</p> <p>I know, right away, that comments will fly like "Visual Studio is a memory pig and crashes all the time" or "Sure, I like VS, it's the best wrapper for ReSharper that's out there".&nbsp; Fine, if you prefer a different environment that is your choice, but it doesn't mean you can dismiss VS for what it is: the software development tool used by more professionals than other other IDE on the planet (I can't speak for the moon).&nbsp; I use it every day with very little friction and the productivity wins are quite large. </p> <p>On the second point: Stack Overflow may have more questions about Ruby. But let's not forget that more people asking questions might not be a "good" thing! Let's pause and think <em>why</em> people might be asking questions for a moment. Are they relevant for recent releases? What are the quality of the answers?&nbsp; Or the questions?&nbsp; And if your party line is that more questions are better, then head over to the Microsoft forums where there will be questions on MVC, ASP.NET, c#, Visual Studio, or the .Net Framework itself.&nbsp; You're likely to find just as many bad questions, answers, arguments and features in any language, if you look hard enough.</p> <h2>Myth 6: Ruby Tooling Provides Better Database Practices</h2> <p>I will be quite frank: until EF Code First had migrations, it was a great little hack to use in presentations and show how fast a developer I could be. Even in the earlier versions of EFCF migrations there were struggles to understand targeting, versions, naming, which connection strings were being used, etc.</p> <p>But today's database tooling is much better, and the MVC Framework aligns quite well with corporate environments and software professionals around the world.&nbsp; Everything you need for automatic DB generation is built into the default MVC project templates with no additional requirements or dependencies to add.</p> <p>But if you don't want to use Entity Framework, how do you access the DB in the MVC world? However you want to. That's abstracted away so that you can have SQL, SQL Express, My SQL, Oracle, or CSVs files retrieved via JSON served from a Commodore 64.&nbsp; It doesn't matter what you choose.&nbsp; You can pick whatever ORM you like.</p> <p>And if you do choose EF Code First, then I'm happy to say that migrations have finally arrived. You can use choose your strategy for database creation, seeding or migrating up and down, or use the default (and quite capable) behaviour. You can enable settings that allow for very rapid prototyping or strict it up to prevent nilly-willy changes.&nbsp; Your "plain old CLR objects" or POCOs are used to infer your naming, relationships, indexes and defaults, but you can override this behaviour as well.&nbsp; Objects and properties are strongly typed, navigation across entities is discoverable as you code and much of what is there will be familiar to experienced developers.</p> <p>Besides, what do you do in a RoR application if you have to use legacy data?&nbsp; Or if corporate requirements dictate the inclusion of Data Architects on your project? You have to slog code, that's what.</p> <p>Again, this is an area that has virtually been eliminated as a talking point when it comes to comparing the frameworks.</p> <h2>Myth 7: It's More Clear Where Things Go in a RoR Project</h2> <p>Disagree completely. You may be more familiar with where your bits need to be flipped, but this is just an issue of groove.&nbsp; Once you know where things are – in either MVC or Ruby on Rails – you build a comfort level with your tools, classes, scripts, models, packages, etc. and you get to work.&nbsp; You may prefer your toolset over another but let me assure you that I don't stumble around in my projects trying to find the parts I'm going after.</p> <p>I know exactly where my models go.&nbsp; And my views.&nbsp; And helpers.&nbsp; And filters.&nbsp; If you come from the Ruby world and you don't know where these things go, I can also assure you that the directory structure is no less intimidating in RoR projects when you aren't familiar with the layout, patterns or best practices.&nbsp; This is <em>exactly</em> why we learn our tools, languages and environments: so that we can be productive.</p> <p>I have had live conversations with the actual humans (yes, they are humans!) who have built out Razor, the MVC Framework, Nuget and who have otherwise been big contributors to the ASP.NET landscape.&nbsp; They are just as concerned about building out a great development experience as anyone else out there building tools.</p> <h2>Myth 8: It's Easier to Target Any Environment I Want</h2> <p>One of the great things about Ruby on Rails is the ability to just create a copy of environment you're working with – say your test environment – rename it and then simply alter the configuration elements you need changed for the new one.</p> <p>One of the great things about solutions in Visual Studio is the ability to just create a copy of environment you're working with – say your test environment – rename it and then simply alter the configuration elements you need changed for the new one.</p> <p>See what I did there?</p> <h1>Let's Work Together and Build Awesome</h1> <p>Look, what we really need to do is cross-train. Seriously.&nbsp; There are <em>great </em>things in the RoR world, and there are <em>great</em> things in the .Net world.&nbsp; They argument that "well, they just copied x from y" when you are talking about any framework is pointless.&nbsp; I can't see how any professional would argue otherwise.</p> <p>There are many different shapes of hammers; they all pound nails.</p> <p>When we accept that – and learn from each other, rather than beating each other up – then we can challenge and inspire each other and push our craft much further.&nbsp; You can't say you're a better developer than me because you've memorized your syntax, and I can't say I'm the better dev because I'm faster with IntelliSense.&nbsp; We're different.</p> <p>And, man, that's just plain.Okay().</p> <h1>Steps v.Next</h1> <p>If you are a Ruby on Rails developer, I highly encourage you to grab the free tooling and <a href="http://asp.net/mvc">try on some Mvc</a>.</p> <p>And to my fellow .Netters, go rake yourself <a href="http://rubyonrails.org">some Ruby love</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>511</wp:post_id>
		<wp:post_date>2012-10-16 17:31:00</wp:post_date>
		<wp:post_date_gmt>2012-10-16 17:31:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>lies-that-ruby-on-rails-people-tell-you</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[Asp.Net MVC]]></category>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="category" nicename="develop-meta"><![CDATA[Develop Meta]]></category>
		<category domain="post_tag" nicename="make-code-not-war"><![CDATA[Make Code Not War]]></category>
		<category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3781208327]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>34481</wp:comment_id>
			<wp:comment_author><![CDATA[Dwyane]]></wp:comment_author>
			<wp:comment_author_email>ioripowers@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>10.207.94.164</wp:comment_author_IP>
			<wp:comment_date>2013-10-10 13:59:50</wp:comment_date>
			<wp:comment_date_gmt>2013-10-10 13:59:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yeah. 10,000 views with zero comments except my own.. :D]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[2036812591]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34491</wp:comment_id>
			<wp:comment_author><![CDATA[james.chambers]]></wp:comment_author>
			<wp:comment_author_email>james@jameschambers.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>207.161.53.42</wp:comment_author_IP>
			<wp:comment_date>2013-10-20 05:50:06</wp:comment_date>
			<wp:comment_date_gmt>2013-10-20 05:50:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Well...actually, there were quite a few comments and a healthy discussion! Unfortunately I lost all the comments on my site when I moved from Orchard to WordPress :/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>34481</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[2036812591]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[2036812680]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34921</wp:comment_id>
			<wp:comment_author><![CDATA[Bobby]]></wp:comment_author>
			<wp:comment_author_email>bstrick75@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>24.98.13.128</wp:comment_author_IP>
			<wp:comment_date>2014-02-08 16:46:44</wp:comment_date>
			<wp:comment_date_gmt>2014-02-08 16:46:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[A few things I'd like to add to your great article. 
1. There are tons of Professional learning resources out there for the .net community. When a new version comes out, the books, videos, blogs quickly follow. As of today, when I lookup ASP MVC 4 on Amazon, I find several "pages" of relevant books. I even found 4 books on the brand new MVC 5. When I look up Ruby on Rails 4, I found 6 books. It's a similar store when you're trying to find Video based learning materials. 

Oh, also, let me make sure I stress the work, "Professional materials". I read several books / blogs while trying to learn Rails and many of them spent more time trying to tell me why Rails is better than actually teaching me anything. If I were building a regular ole' website or some twitter clone, fine. But for a Big Boy Web Application....

2. I found Rails to be too gem dependent. Some people may consider this to be a plus, but in a enterprise environment where you really need to understand what all your components are doing and how secure, robust, scalable they are, this can be a problem. Plus, a lot of things you get from many of the major Rails gems come pre-packaged within Visual Studio.

3. The development environment in Rails (for me) leaves much to be desired. I know a lot of people, for some reason, prefer a text based IDE where they are jumping between VIM, EMACS, ect.. If you're experienced in these environments then I guess this is not an issue, but I found myself missing things like, efficient debugging, intellisense, visual workflows, design time indicators, database table management, ect.
I know you can use RubyMine if you're working in a windows environment, but that seems to be a copycat of Visual Studio, which would be a reverse of the argument I keep hearing for the Rails community.

4. I'm a noob to the Ruby on Rails world, I freely admit that. The project that I worked on with Rails involving working with older technologies, such as SOAP, seemed to be waaayyy more difficult that need be. I want to try Rails on a different project as a pallet cleanser before I get to judgmental on this one.

Honestly, I would love for someone to tell me where I'm wrong on these issue, because I have a lot of people in my ear telling me that I need to keep using Rails cause its the way of the future. But based on TIOBE, that even seems to be more hype than truth http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html.

Like the author said, we all have our preferences, I just think that you should try both environments (newest versions) before you pass and evangelize judgments.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[2036812589]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35081</wp:comment_id>
			<wp:comment_author><![CDATA[joao de deus]]></wp:comment_author>
			<wp:comment_author_email>josecarlos.barros@hush.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>208.178.94.67</wp:comment_author_IP>
			<wp:comment_date>2014-05-29 15:41:36</wp:comment_date>
			<wp:comment_date_gmt>2014-05-29 15:41:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Many of these arguments can be aplied to Java world too. RoR is not so bright than fanboy says... I think I wouldnt be aware to risk myself with that I prefer JavaEE 1.000 times.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[2036812590]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36861</wp:comment_id>
			<wp:comment_author><![CDATA[P]]></wp:comment_author>
			<wp:comment_author_email>p@nospam.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.9.9.183</wp:comment_author_IP>
			<wp:comment_date>2014-07-20 14:44:31</wp:comment_date>
			<wp:comment_date_gmt>2014-07-20 14:44:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA["slight of hand" =&gt; "sleight of hand"

(Why are the captchas so bad??)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[2036812592]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36871</wp:comment_id>
			<wp:comment_author><![CDATA[P]]></wp:comment_author>
			<wp:comment_author_email>p@nospam.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.9.9.183</wp:comment_author_IP>
			<wp:comment_date>2014-07-20 14:50:48</wp:comment_date>
			<wp:comment_date_gmt>2014-07-20 14:50:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[One talking point I've heard vehemently from the Rails side is that it is much cheaper, and more so as the deployment scales up. Would you care to address that? 

(I enjoyed your article; I'm just teaching myself Rails -- I am already fluent on the MS side.)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[2036812593]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36901</wp:comment_id>
			<wp:comment_author><![CDATA[james.chambers]]></wp:comment_author>
			<wp:comment_author_email>james@jameschambers.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>206.45.140.40</wp:comment_author_IP>
			<wp:comment_date>2014-07-20 16:15:55</wp:comment_date>
			<wp:comment_date_gmt>2014-07-20 16:15:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks P, I'll have a look at that in an upcoming post, but my from-the-hip remark would be that:
a) IIS scales <em>hella</em> good
b) Azure provides cheap and elastic scaling
c) Your (or my) code is more likely to cause poor scaling than the framework and server you use.

I really believe that all things considered, web dev is near or at parity. Pick the bits you enjoy for the reasons that motivate you and use the best tools you can find to help you.

Cheers,
-jc]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>36871</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[2036812593]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[2036812681]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38911</wp:comment_id>
			<wp:comment_author><![CDATA[Christian]]></wp:comment_author>
			<wp:comment_author_email>xtianus@live.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>50.88.144.248</wp:comment_author_IP>
			<wp:comment_date>2014-11-17 06:22:25</wp:comment_date>
			<wp:comment_date_gmt>2014-11-17 06:22:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thank you.... it seems like .net is under attack.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[2036812594]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Bootstrap + Mvc - Fixing the Navbar</title>
		<link>http://jameschambers.com/2012/10/bootstrap-mvc-fixing-the-navbar/</link>
		<pubDate>Fri, 12 Oct 2012 17:35:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=521</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I am continuing my series on using Twitter's Bootstrap CSS and JavaScript library with the Asp.Net Mvc 4 Framework. Here's the <a href="http://oldblog.jameschambers.com/blog/bootstrap-asp.net-mvc-quickhits-installing-bootstrap">rest of the series</a>, and today's instalment of the video is here:</p><iframe height="315" src="http://www.youtube.com/embed/uA7Z8WfD3bU" frameborder="0" width="560" allowfullscreen></iframe> <p>User "arun" wrote in on <a href="http://oldblog.jameschambers.com/blog/bootstrapping-mvc---the-completed-template">my previous post</a>, asking about a problem with the rendering of the navbar when the responsive design elements kicked in. I fired up the project to see what was amiss.&nbsp; What I found when I made the browser more narrow was this:</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Bootstrap--Mvc---Fixing-the-Navbar_BBD9/image_6.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Bootstrap--Mvc---Fixing-the-Navbar_BBD9/image_thumb_2.png" width="325" height="274"></a></p> <p>What's with that white space?&nbsp; Here's what we <em>really </em>want:</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Bootstrap--Mvc---Fixing-the-Navbar_BBD9/image_8.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Bootstrap--Mvc---Fixing-the-Navbar_BBD9/image_thumb_3.png" width="323" height="273"></a></p> <p>Yay! No whitespace! How did we make it happen? Turns out it's quite easy, just make your layout header look like this:</p><pre class="csharpcode">    <span class="kwrd">&lt;</span><span class="html">style</span><span class="kwrd">&gt;</span>
        body { padding-top: 60px; /* 60px to make the container go all the way to the bottom of the topbar */ }
        .aligntobottom { bottom:0; position:absolute; }
    <span class="kwrd">&lt;/</span><span class="html">style</span><span class="kwrd">&gt;</span>

    @Scripts.Render("~/bundles/modernizr")
    @Styles.Render("~/Content/Bootstrap")</pre>
<style type="text/css">.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>

<p>Notice that we're moving the Bootstrap library <em>below</em> the body padding style so that we can get around a CSS conflict.</p>
<p><strong>Don't forget to watch the video above for a gem in there on getting the authentication bits going!</strong></p>
<h1>What's Next?</h1>
<p>For next steps, here's some things to try out:</p>
<ul>
<li>Check out the other instalments <a href="http://oldblog.jameschambers.com/blog/bootstrap-asp.net-mvc-quickhits-installing-bootstrap">in this series</a> 
<li>Download the RTM version of the <a href="http://www.asp.net/mvc">Mvc 4 Framework</a> and build the site out with posts from the series 
<li>Follow me <a href="http://www.twitter.com/CanadianJames">@CanadianJames</a> to find out when new articles/videos are posted in this series <img class="wlEmoticon wlEmoticon-smile" style="border-top-style: none; border-left-style: none; border-bottom-style: none; border-right-style: none" alt="Smile" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Bootstrap--Mvc---Fixing-the-Navbar_BBD9/wlEmoticon-smile_2.png"> </li></ul>
<p>&nbsp;</p>
<p>Catch you on the next post, thanks all for your comments and questions!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>521</wp:post_id>
		<wp:post_date>2012-10-12 17:35:00</wp:post_date>
		<wp:post_date_gmt>2012-10-12 17:35:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bootstrap-mvc-fixing-the-navbar</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[Asp.Net MVC]]></category>
		<category domain="post_tag" nicename="bootstrap"><![CDATA[Bootstrap]]></category>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3782049046]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>(Almost) 8 Web Services in 75 Minutes - With Chad McCallum</title>
		<link>http://jameschambers.com/2012/10/almost-8-web-services-in-75-minutes-with-chad-mccallum/</link>
		<pubDate>Wed, 03 Oct 2012 17:36:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=531</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I've been presenting for over a year now and I can honestly say that one of my favourite sessions to have taken part in so far was this past week at the Prairie IT &amp; Developer Conference in Regina.&nbsp; <a href="https://twitter.com/i/#!/CanadianJames/media/slideshow?url=http%3A%2F%2Ftwitpic.com%2Fb05rhn"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: right; padding-top: 0px; padding-left: 0px; margin: 20px 0px 20px 20px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" align="right" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Almost-8-Web-Services-in-75-Minutes---Wi_495B/image_3.png" width="421" height="317"></a><a href="https://twitter.com/i/#!/CanadianJames/media/slideshow?url=http%3A%2F%2Ftwitpic.com%2Fb05rhn">Chad McCallum</a>, a regular contributor to the tech scene in Regina, was presenting his web services session, and I was to present a talk on Web API. We realized before the conference that there was going to be a lot of conceptual overlap, so we made the call to merge the sessions and deliver some awesome. <img class="wlEmoticon wlEmoticon-smile" style="border-top-style: none; border-left-style: none; border-bottom-style: none; border-right-style: none" alt="Smile" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Almost-8-Web-Services-in-75-Minutes---Wi_495B/wlEmoticon-smile_2.png"></p> <h1>The Setup</h1> <p>So here's how we did it: Chad's talk normally revolves around him demonstrating how easy it is to build out web services in the .NET world, not only with Microsoft tech, but with libraries available through the open source community as well. Other times he's presented, Chad demonstrated a console app where he consumed whichever service he was building so that the audience could see the service in action.</p> <p>For our tandem presentation, we decided on a twist: while he was writing the service, I would use a copy of the pre-built service and build a client or a service call through some kind of tooling.&nbsp; The catch? The audience got to pick what I would be using.&nbsp; As he was about to start building his service, the audience picked from a list of possible clients that I would build, and I had anywhere from 4-10 minutes to consume the service.</p> <p>Here's the client list the audience got to choose from:</p> <ul> <li>WinForms  <li>Asp.Net MVC  <li>Console App  <li>Windows Phone App  <li>Browser Request  <li>Fiddler Request</li></ul> <p>And the services Chad was building were:</p> <ul> <li>Asp.Net ASMX Web Service  <li>Asp.Net MVC 3 (JSON result)  <li><a href="http://www.asp.net/mvc">Asp.Net MVC 4 Web Api</a>  <li><a href="http://msdn.microsoft.com/en-us/library/bb332338.aspx">WCF</a>  <li><a href="http://msdn.microsoft.com/en-us/magazine/dd315413.aspx">WCF REST</a>  <li><a href="http://msdn.microsoft.com/en-us/library/bb412167.aspx">WCF AJAX</a>  <li><a href="https://github.com/NancyFx/Nancy">Nancy</a>  <li><a href="http://www.servicestack.net/">ServiceStack</a></li></ul> <p>I'm intentionally not linking to documentation on the first two because if you are starting a new project, there are very few reasons why you would start there. If you're already building in those spaces, you'll know how to get the resources.</p> <p>The fun part was that with almost 50 permutations there was no way we were going to build these out ahead of time, so this was all live-in-front-of-the-audience coding.&nbsp; Chad built the services, I built the clients, all in front of almost 50 sharp and scrutinizing devs. It was awesome.</p> <h1>The Result</h1> <p>For the most part, everything turned out great!&nbsp; We had a couple of glitches as I'll describe below, and we geeked out a little too much in some areas so we only got through 7 of the services, just 1 short of our goal.&nbsp; Here's what didn't go <em>quite</em> as expected:</p> <ul> <li>The pre-built services used a simple ECHO method, but during the presentation Chad decided to go all rogue on me and use a .ToUpper in his service method.&nbsp; Even though I finished the client in time – and it worked – the audience picked up real quickly that the text returned and displayed on my client was not converted to upper-case. There was no slight of hand here, just a crossed wire. Full credit to Chad for going further on demonstrating a more interesting method, and even more to the gentleman who picked up on it!  <li>When I built the Windows Phone app and tested quickly before showing the result, I had tested with the word "Regina", and it worked a treat. But when I demo'd the client for the audience, I punched in "Hello, Regina...". Unfortunately, I didn't URL-encode the request, so the punctuation threw off the request/service/response love and it errored out on me. <img class="wlEmoticon wlEmoticon-sadsmile" style="border-top-style: none; border-left-style: none; border-bottom-style: none; border-right-style: none" alt="Sad smile" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Almost-8-Web-Services-in-75-Minutes---Wi_495B/wlEmoticon-sadsmile_2.png">&nbsp; I quickly found the mistake and reran the app to show it was working, but it's worth pointing out that even in simple scenarios you'll need to test with more than a simple "Hello" string.</li></ul> <h1>What's Next?</h1> <p>Well, Chad and I really didn't dive too deep into the daily practical uses of these, or what scenarios the project types could be used in, but we did give the group a few things to chew on:</p> <ul> <li>Are you building something for internal use, or public use?  <li>Do you intend to open up your API?  <li>Do you plan on making mobile apps?  <li>What are your security considerations, and what do users authenticate against?  <li>What have you worked with in the past, and what do you plan on working with down the road?</li></ul> <p>Those are five simple questions that will help determine the approach to take for your project. Chad and I are both of the mind that JSON/REST services are probably what you are going to be looking for, but if you can disqualify this approach we presented a myriad of options and alternatives.</p> <h1>The Most Important Thing</h1> <p>What we really wanted to show is that someone comfortable with programming on the .NET stack can easily try these things out. If you count both our times, Chad building the service and me building the client, we took from 8 to 20 minutes to build <em>BOTH</em> sides of the equation. In less than half an hour you could be exploring any one of these service approaches with pretty much any kind of client.&nbsp; So, go File –&gt; New Project yourself some service love!</p> <h1>Want a Little More?</h1> <ul> <li><a href="http://rtigger.com/blog/2012/03/30/web-services/">Check out our slide deck that we used</a>  <li><a href="https://github.com/ChadMcCallum/WebServiceExamples.NET">Check out the service code on GitHub</a> (the client codes will be posted there too)</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>531</wp:post_id>
		<wp:post_date>2012-10-03 17:36:00</wp:post_date>
		<wp:post_date_gmt>2012-10-03 17:36:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>almost-8-web-services-in-75-minutes-with-chad-mccallum</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>
		<category domain="post_tag" nicename="prairiedevcon"><![CDATA[PrairieDevCon]]></category>
		<category domain="post_tag" nicename="regina"><![CDATA[Regina]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<category domain="post_tag" nicename="web-services"><![CDATA[Web Services]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3845560138]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Live Connect Developer Center - Application Name Collisions</title>
		<link>http://jameschambers.com/2012/10/live-connect-developer-center-application-name-collisions/</link>
		<pubDate>Mon, 01 Oct 2012 17:37:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=571</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>No Really, It Works!</h2> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: right; padding-top: 0px; padding-left: 0px; margin: 15px 0px 0px 15px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" align="right" src="http://jameschambers.azurewebsites.net/wp-content/uploads/2012/12/image1.png" width="324" height="101">Today I had the pleasure of presenting on Windows Azure Mobile Services at the Prairie IT and Developer Conference (known as Prairie Dev Con) here in Regina. It was great to see so many people out with such diverse backgrounds. We had people who develop on Android, Windows Phone, iOS and lots of .Net folks who are interested in building apps for Windows 8.&nbsp; </p> <p>I had a blast presenting…and getting an app up and running with a cloud-backend for the services side of things with a fully functional Windows 8 client is pretty great.&nbsp; But I ran into one major snafu when I tried to get Push Notifications running and, subsequently, Windows Account authentication.</p> <h2>What Went Wrong</h2> <p><a href="http://www.windowsazure.com/en-ca/develop/mobile/"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: right; padding-top: 0px; padding-left: 0px; margin: 15px 0px 15px 15px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" align="right" src="http://jameschambers.azurewebsites.net/wp-content/uploads/2012/12/image2.png" width="244" height="138"></a>Preparing for the conference I had built out the demo app several times as I dove into WAMS and examined what was going on at each level.&nbsp; Each time I would reset the environments by deleting the application and database and removing it from Live Connect Developer Center.&nbsp; Things were fairly clean.</p> <p>When I started the presentation things were going fine until I realized that I had forgot to reset after my last run through the night before.&nbsp; When I logged into the management portal, I saw the app was still there, so I deleted the app (and database) and carried on with my demo.&nbsp; </p> <p><strong>Unfortunately</strong>, when I got to enabling push notifications, the Live Connect Developer Center let me go about creating an app with the same name, and it did so without warnings or errors. Though I didn’t have time to solve it during the session (what a great group of attendees though, giving me some space to explore!), what I nailed down was this:&nbsp; when I created a new app – with the same name – I think very simply that I ended up confusing Live Connect as to which app was which.</p> <p>Further to that, authentication wouldn’t work either. Even though I discovered and deleted the second (well, I guess first) rogue app in Live Connect and verified that my app secret and package ID was correct, I still wasn’t able to authenticate. In the log files for the app in the WAMS portal, I was simple getting a message similar to “invalid client” without further explanation.</p> <p>I was able to finish out the presentation and give them a sense of how things would have worked, and from the feedback in talking with some devs afterwards, it seems they were fairly forgiving <img class="wlEmoticon wlEmoticon-smile" style="border-top-style: none; border-left-style: none; border-bottom-style: none; border-right-style: none" alt="Smile" src="http://jameschambers.azurewebsites.net/wp-content/uploads/2012/12/wlEmoticon-smile.png"></p> <h2>And So?</h2> <p><strong>Do not create a second app in Live Connect Developer Center with the same name as an existing app</strong>.&nbsp; This is bad and will break your stride.</p> <p>I got back to my hotel room, deleted the leftover pieces from the demonstration and started again from scratch – this time giving a unique name to my app – and everything worked from end-to-end without hassle or hesitation – push notifications, Windows Account authentication and the whole like.&nbsp; <strong>It took me 8 minutes.</strong></p> <p>There really should be appropriate error messages here so that you can make sense of what’s going on. Or, better yet, the Live Connect Developer Center should slap your wrist and tell you that there is already an app on your account with the same name.</p> <p>But this one is easy to avoid. Just don’t duplicate your app names!</p> <p>If you want to see for yourself how easy it is to get started, head over to the <a href="http://www.windowsazure.com/en-ca/develop/mobile/">WAMS site</a> and get started!</p> <p>Thanks again to everyone who came out and please remember to fill in those evaluations!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>571</wp:post_id>
		<wp:post_date>2012-10-01 17:37:00</wp:post_date>
		<wp:post_date_gmt>2012-10-01 17:37:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>live-connect-developer-center-application-name-collisions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="azure"><![CDATA[Azure]]></category>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>
		<category domain="post_tag" nicename="prairiedevcon"><![CDATA[PrairieDevCon]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3806115917]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Regina is Hacking Awesome</title>
		<link>http://jameschambers.com/2012/09/regina-is-hacking-awesome/</link>
		<pubDate>Sat, 29 Sep 2012 17:38:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=581</guid>
		<description></description>
		<content:encoded><![CDATA[<p><img style="float: right; display: inline" align="right" src="http://hackdays.ca/wp-content/uploads/2012/04/HackDays.png"></p> <p>Yesterday I had the pleasure of participating in HackRegina, an event organized by <a href="https://twitter.com/ChadEmm" target="_blank">Chad McCallum</a> and supported by <a href="http://hackdays.ca" target="_blank">HackDays.ca</a> with a ton of sponsors.&nbsp; There were about 40 people who came out to build apps and hack together solutions to solve the world's problems. </p> <p>Coming with neither a solid idea, nor a team, I was lucky enough to partner up with <a href="https://twitter.com/jlindenbaum" target="_blank">Johannes Lindenbaum</a>. I think we actually ended up going with the first idea that we threw out there and just pushed through on a "this train must stay on the rails or we will not finish our project" track.&nbsp; </p> <p>And the end of the day, Johannes and I put together a complete geo-location based game called <strong>DiscovR</strong>, focused on the City of Regina, and ended up winning the prize for "Best Windows Phone". We took home some loot to boot.&nbsp; If you didn't read that last sentence too carefully, I'm fully geeking out over the fact that we built a whole game in about 6.5 hours.</p> <h2>The Idea</h2> <p>Here is the basic idea: players compete for points, awarded for being the first to explore part of Regina. Each day, a new "goal" is posted to the game's backend, and the race is on to check in at the new location and capture the most points.&nbsp; After you've checked in, you get a chance to see all the local restaurants and pubs (based on your location).&nbsp; Each check in reduces the points left for the next person who checks in, so the fastest onsite gets to climb the leaderboard the fastest.</p> <p>All of this in the name of exploring the City of Regina.</p> <h2>The Build</h2> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/ee3ae11418f7_A726/SplashScreenImage_2.jpg"><img title="SplashScreenImage" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: right; padding-top: 0px; padding-left: 0px; margin: 0px 0px 0px 15px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="SplashScreenImage" align="right" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/ee3ae11418f7_A726/SplashScreenImage_thumb.jpg" width="148" height="244"></a>In a nutshell, here's all the APIs, SDKs, libraries and tools that we used to get the game running:</p> <ul> <li><a href="http://www.windowsazure.com/en-ca/">Windows Azure Mobile Services</a>  <ul> <li>This is how we got up and running quickly with our backend. We were saving game information within 30 minutes of starting our project.&nbsp; All our REST end points were automatically generated for us and WAMS takes care of all the CRUD operations for us.</li></ul> <li><a href="http://www.eclipse.org/downloads/moreinfo/java.php" target="_blank">Eclipse IDE</a>  <ul> <li>The best native app development environment for building Android apps.</li></ul> <li><a href="http://developer.android.com/sdk/index.html">Android SDK</a>  <ul> <li>Used to build the game client (used to play the game). Provides development libraries, an emulator and deployment tools for Android devices.</li></ul> <li><a href="http://www.microsoft.com/visualstudio/eng/whats-new">Visual Studio 2010</a>  <ul> <li>Building apps for .Net, Windows or Windows Phone, this is just what you use.</li></ul> <li><a href="http://www.microsoft.com/en-ca/download/details.aspx?id=27570">Windows Phone SDK</a>  <ul> <li>Helped us build the game manager, used to set new goals for the game players. Provides development libraries, an emulator and deployment tools for Windows Phone.</li></ul> <li><a href="http://nodejs.org/" target="_blank">Node.js</a>  <ul> <li>I wrote the game rules on the cloud, hosted on Azure. There's a layer to Azure Mobile Services that lets you intercept the CRUD operations to incorporate security, push notifications, dynamic model composition and more. All your server side scripts get to leverage Node.</li></ul> <li><a href="http://www.windowsazure.com/en-ca/">SQL Azure</a>  <ul> <li>This is the data store that backs Windows Azure Mobile Services. For the most part, we didn't even need to remember it was there, but when it came to resetting the database before our presentation, we were able to connect with SQL Management Studio and just execute the appropriate queries to clean things up.</li></ul> <li><a href="http://openregina.cloudapp.net/">City of Regina Open Data API</a>  <ul> <li>A municipal government that gets it – or is at least starting to.&nbsp; Great on them for making a ton of data available for free, public consumption.</li></ul> <li><a href="http://www.yellowapi.com/">Yellow API</a>  <ul> <li>This is where we got our data for exploring the neighbourhood after you've checked in for your points.</li></ul> <li><a href="http://www.fiddler2.com/fiddler2/">Fiddler2</a>  <ul> <li>A comprehensive tool that lets you compose and deconstruct HTTP messages.&nbsp; We used this – paired with dynamic schema in WAMS – to build out our first JSON messages and layout our data model.</li></ul> <li><a href="http://silverlight.codeplex.com/">Silverlight Toolkit for Windows Phone</a>  <ul> <li>A great little suite of components that help to make great looking apps for Windows Phone.</li></ul></li></ul> <p>&nbsp;</p> <p>Whew. Looking at that list, it's hard to believe we built the game in less than a day. But it sure validates my statement about having no room for things going wrong!</p> <h2>What Went Wrong</h2> <p><a href="http://openregina.cloudapp.net/"><img title="hubtiles" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: right; padding-top: 0px; padding-left: 0px; margin: 0px 0px 0px 15px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="hubtiles" align="right" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/ee3ae11418f7_A726/hubtiles_cc6f0e54-8f88-429c-81a2-26f38c5bad6e.png" width="148" height="244"></a>We made smart choices early and spent some time thinking about the path of least resistance, and for the most part this served us well.&nbsp; There were a few hiccups along the way.</p> <ul> <li>Android not playing nicely with HTTPS  <li>Windows Phone not reporting back meaningful error messages related to networking  <li>City of Regina "Point of Interest API" is a great start, but it provides no rich content about <em>why</em> the point is interesting  <li>Yellow Pages API gives you data like it's 1999.&nbsp; Seriously. Like, they wrote some XML in 1999 and then just wrapped curly braces around it and called it JSON.  <li>OAuth. I don't need to say any more than that.  <li>OData web services wrap results in a "d" property...so you if want to deserialize the data you have to create an object representing the response, then have a property called "d" which is an array of the actual model. Blog post with samples are coming.</li></ul> <p>&nbsp;</p> <p>There was one other challenge.&nbsp; Windows Azure Mobile Services provides this great wrapper for CRUD operations that allows you to use JavaScript (Node.js) and manipulate requests and responses. It's a great model, but it's not mature and the documentation is not at the level it needs to be at yet.&nbsp; This wasn't a problem with WAMS or Node, just a challenge in early adoption.&nbsp; A big shout out to <a href="https://twitter.com/TommyLee">Tommy Lee</a> and <a href="https://twitter.com/jrozenblit">Jonathan Rozenblit</a> of Microsoft for helping throughout the day to get me info, docs and articles.</p> <h2>The Android Client</h2> <p>The screenshots above are from the WP7 app that we considered to be the "game master". It was capable of reading information from the Regina API and then – through authenticated REST calls to Windows Azure Mobile Services – set new goals for the players.</p> <p>As for the Android shots below, I have no claim to these...the Android client was put together by Johannes and he was kind enough to send along the screenies. I'm certain that if there was an award for "best Android app" we would have won that as well.&nbsp; Here they are! From left to right, you have the check in point where you reach the goal, the confirmation of your points, the tie in of activities to "check out" and finally the leaderboard.</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/ee3ae11418f7_A726/image_8.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/ee3ae11418f7_A726/image_thumb_3.png" width="143" height="244"></a>&nbsp;<a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/ee3ae11418f7_A726/image_4.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/ee3ae11418f7_A726/image_thumb_1.png" width="143" height="244"></a>&nbsp;<a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/ee3ae11418f7_A726/image_2.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/ee3ae11418f7_A726/image_thumb.png" width="144" height="244"></a>&nbsp;<a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/ee3ae11418f7_A726/image_6.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/ee3ae11418f7_A726/image_thumb_2.png" width="143" height="244"></a></p> <p>A few more days and I should be able to catch up to Johannes!</p> <h2>World Peace and Other Take-Aways</h2> <p>Folks, a German boy and a Ukrainian boy worked side by side to build an Android game (with a Windows Phone admin console) running on Windows Azure.&nbsp; There is Shalom in Regina.</p> <p>I was surprised by the number of APIs that are out there, freely available. I was equally jarred by the diversity of apps that teams concocted at the event given that we were mostly working from the same APIs.&nbsp; And this is really why these events shine; the exposure to other people's creative process is quite valuable.</p> <p>This was a great experience that I am going to do again. If you haven't done a hack event before – and chances are you haven't – I really recommend breaking down some barriers (or excuses) and just go out and do it. You get to work with interesting people and if you want to you get to explore some new tech at the same time.</p> <p>Have a look at <a href="http://hackdays.ca">HackDays.ca</a> or search for <a href="http://www.bing.com/search?q=local+hackathons">local hackathons</a> to find an event near you.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>581</wp:post_id>
		<wp:post_date>2012-09-29 17:38:00</wp:post_date>
		<wp:post_date_gmt>2012-09-29 17:38:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>regina-is-hacking-awesome</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="azure"><![CDATA[Azure]]></category>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>
		<category domain="post_tag" nicename="hackathon"><![CDATA[HackAThon]]></category>
		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>
		<category domain="post_tag" nicename="windows-phone"><![CDATA[Windows Phone]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3986197468]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Getting Ready for Regina - Prairie Dev Con 2012</title>
		<link>http://jameschambers.com/2012/09/getting-ready-for-regina-prairie-dev-con-2012/</link>
		<pubDate>Wed, 26 Sep 2012 17:40:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=591</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Hey everyone in Saskatchewan!</p> <p>I'm stoked to be running my Asp.Net Mvc Framework Dojo. We are going to be covering some great topics and diving deep into the development of a database-backed, membership-enabled, fully functioning web app.</p> <p>This is a hands on session – I need you to bring your laptop along, and I highly recommend that you have the tools installed before you come. We have about 150 minutes, and if you spend the first 45+ minutes installing tools, you just won't get as much out of it!</p> <p>D'Arcy Lussier, director, general manager and philosophical guidance counsellor for Praire IT/Dev Con is graciously providing a Dojo prep area where you will be able to download the bits. But for you keeners, grab a copy of the following so you don't have to miss any sessions and you can dive right in:</p> <p><strong>Visual Studio 2012</strong> – This has everything you need. You can either grab a <a href="http://www.microsoft.com/visualstudio/eng/downloads" target="_blank">free 90 day trial edition</a> or a completely free <a href="http://www.microsoft.com/visualstudio/eng/downloads" target="_blank">Express Web edition</a>.</p> <blockquote> <h2><font style="font-weight: bold">- or - </font></h2></blockquote> <p><strong>Visual Studio 2010</strong> – But, you'll need to add some "fresh" if you want to hang out with the cool kids. Make sure you have the following:</p> <ul> <li><a href="http://www.microsoft.com/en-us/download/details.aspx?id=23691" target="_blank">Visual Studio 2010 SP1</a>  <li>The latest version of <a href="http://nuget.org" target="_blank">NuGet</a>  <li><a href="http://www.asp.net/mvc/mvc4" target="_blank">Asp.Net MVC 4</a> <em>RTM Version </em><strong>IMPORTANT – </strong>the project templates and tooling have changed. To get the most out of this dojo, I need you to have the final version of MVC4 running on your machine.</li></ul> <p><strong></strong>&nbsp;</p> <blockquote> <p>Just a quick note...while I am a totally huge Windows 8 fan and encourage you to try it out, for the purpose of this Dojo session I highly recommend running from Windows 7 (or boot to a VHD from Win8 to Windows 7). I will be demoing a tool that has not yet been updated to work with the new version of PowerShell on Windows 8.&nbsp; If you are already running Windows 8 full time (like me!) then I will be able to help you out and we can work around it.</p></blockquote> <p>Really looking forward to meeting everyone and working through as much code as possible in 2.5 hours. See you there!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>591</wp:post_id>
		<wp:post_date>2012-09-26 17:40:00</wp:post_date>
		<wp:post_date_gmt>2012-09-26 17:40:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-ready-for-regina-prairie-dev-con-2012</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[Asp.Net MVC]]></category>
		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>
		<category domain="post_tag" nicename="prairiedevcon"><![CDATA[PrairieDevCon]]></category>
		<category domain="post_tag" nicename="regina"><![CDATA[Regina]]></category>
	</item>
	<item>
		<title>Prairie Dev Con 2012 - Regina</title>
		<link>http://jameschambers.com/2012/09/prairie-dev-con-2012-regina/</link>
		<pubDate>Mon, 24 Sep 2012 17:41:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=601</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Home on the prairies! PrDC is the first event that I spoke at and have been doing so regularly since.&nbsp; It’s great to be invited again to speak in my home province of Saskatchewan, and I’m looking forward to reconnecting with some folks I’ve met at previous sessions, talks, conferences and meet-ups.</p> <p><a href="http://prairiedevcon.com/"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: right; padding-top: 0px; padding-left: 0px; margin: 5px 0px 5px 15px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" align="right" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Prairie-Dev-Con-2012---Regina_BDE5/image_3.png" width="371" height="131"></a>This year promises to be a blast with two days of hacking before the conference even starts.&nbsp; Make sure you bring a laptop (or a friend who has one!) and get ready to dive into some great tech with some great folks:</p> <ul> <li><strong>Saturday September 29th</strong>  <ul> <li>Yuep! I’m getting up early (like 4am early) and making the hike out to Regina to be a part of the all day Hackathon. We’ll get together in groups of people smarter than me, then take advantage of APIs, open data sets and whatever we can get our hands on to make The Next Big Thing, or at least have a little fun trying to.</li></ul> <li><strong>Sunday, September 30th</strong>  <ul> <li>I’ll be helping out at the Windows 8 Workshop and labs from 1-5pm.&nbsp; We will be taking over the Delta with the biggest ever Windows 8 coding session <em><strong>ever</strong></em> to be held between Pilot Butte and Moose Jaw! You won’t want to miss out on this!</li></ul></li></ul> <p>&nbsp;</p> <p>During the conference I will be presenting a few times and running an MVC 4 Dojo. I’ve had a lot of fun in the past working with 5 to 45 people in the Dojo dating all the way back to when people still used MVC 3…my how time flies! <img class="wlEmoticon wlEmoticon-winkingsmile" style="border-top-style: none; border-left-style: none; border-bottom-style: none; border-right-style: none" alt="Winking smile" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Prairie-Dev-Con-2012---Regina_BDE5/wlEmoticon-winkingsmile_2.png">&nbsp; I’ve diversified a little this year…I’m covering Windows 8, Azure, Windows Phone and some web technologies that I’ve been doing for years. Here’s a run down of my sessions:</p> <blockquote> <h4><font color="#000000"><font style="font-weight: bold">A Cloud-Based Backend for Your Apps – Integrated in Minutes (Really!)</font></font></h4> <h5><em>Azure, Data-BI-Cloud, Windows 8, SoftwareDev</em></h5> <p>The best apps need a backend, and the best backends are Cloud-based. In this session, you’ll learn how you can leverage the new Windows Azure Mobile Services to add structured storage, integrated authentication, and even Push Notifications in literally minutes to your Windows 8 Store apps.</p></blockquote> <blockquote> <h4><font color="#000000"><font style="font-weight: bold">Application Design for Windows Phone</font></font></h4></blockquote> <blockquote> <h5><em>Mobile, .NET, Windows Phone</em></h5> <p>In the past year, we've worked with hundreds of developers and designers interpreting the "Metro" design system for their own purposes. We've seen great interpretations, and others that aren't so great. In this session, we'll share with you the foundations of great Metro application design for Windows Phone, and how to use them to build outstanding applications that will stand out and get noticed… for good reasons. We will also be providing some general best practices for building great mobile experiences.  <h4><font style="font-weight: bold" color="#000000">A Tour of the ASP.NET Web API</font></h4> <h5><em>Web, ASP.NET MVC, SoftwareDev</em></h5> <p>Join us for an overview of the Web API on the Asp.Net stack and find out why developers from several disciplines - web, server, and mobile - are jumping on board. We'll take a look at the difference between RPC-style web services and approaches that are RESTful, talk about why the Web API is important and where you can use it, and cover the differences (and similarities!) between MVC-style and Web API-style routing, authorization and authentication. We'll have examples of model binding and serialization as well as content negotiation and media formatters and we'll try to have a little fun along the way.  <h4><font style="font-weight: bold" color="#000000">ASP.NET MVC 4 100mph Dojo</font></h4> <h5><em>Web, ASP.NET MVC, Dojo, SoftwareDev</em></h5> <p>Fear not, tireless web warriors, you too can get started in the MVC Framework, it's as simple as File -&gt; New -&gt; Project! Bring your laptop and take a break from Web Forms while we walk through the key components and add them to your battle arsenal. Know Ruby? Great! Cross train for a bit and get a good feel for what your .NET brethren are up to. A hands-on lab that will walk you through Razor, routing, model binding, filters, authentication and authorization, the MVC tool chain (including NuGet) and complimentary bits (like jQuery) to make your . We'll build a site with all of the above. Come for the pattern, stay for the framework!</p></blockquote> <p>I look forward to seeing everyone out!&nbsp; As always, I’ll share my slides, code and contact details at the end of the sessions, so you can dive in and start learning right away and always connect afterwards if you have any questions. It’s not too late to register if you haven’t already, you can do that here.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>601</wp:post_id>
		<wp:post_date>2012-09-24 17:41:00</wp:post_date>
		<wp:post_date_gmt>2012-09-24 17:41:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>prairie-dev-con-2012-regina</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[Asp.Net MVC]]></category>
		<category domain="post_tag" nicename="azure"><![CDATA[Azure]]></category>
		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>
		<category domain="post_tag" nicename="prairiedevcon"><![CDATA[PrairieDevCon]]></category>
		<category domain="post_tag" nicename="windows-phone"><![CDATA[Windows Phone]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3802808539]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ignoring a File That You Have Already Started Tracking in Git</title>
		<link>http://jameschambers.com/2012/09/ignoring-a-file-that-you-have-already-started-tracking-in-git/</link>
		<pubDate>Fri, 14 Sep 2012 17:42:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=651</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote> <p>These are the confessions of GitHub for Windows user who is new to Git. I'm using GitHub to make code available from my demonstrations, presentations and workshops and am generally enjoying Git for source control.</p></blockquote> <p>Today I put in about 30 minutes (and a few too many commits) into trying to prevent AuthConfig.cs from being committed to my project on GitHub. AuthConfig.cs is a new file in the basic Asp.Net MVC 4 template that allows for seamless OAuth integration with sites like Facebook and Twitter. I need the file in the repository, but I don't want to share my API keys.</p> <p>As a side note, I’ve long <a href="http://theycallmemrjames.blogspot.ca/2011/01/built-in-authentication-and.html">been a fan of Asp.Net authentication and authorization</a> and the recent overhaul is sexy with OAuth awesomesauce. Check out my link at the end of this post to see what I mean.</p> <h2>Just Trying to Git It</h2> <p>Yes, I'm still a relative rookie to Git and there are some things that I haven't wrapped my head around, but most of the time I at least have the vocabulary I need to find out what was going on.</p> <blockquote> <p><font color="#434343"><strong>EDIT: </strong>Ready a rookie! You don’t have to ignore if you’re telling Git to “assume-unchanged”.</font></p></blockquote> <p>First off, ignoring doesn't work on files that are already tracked. This means that if you've created a file before you've added your ignore rule, then Git is already "tracking" the file and it doesn't matter if you try to add an ignore rule after the fact.&nbsp; At this point - which is where I was - <strike>you need to add your ignore rule and then</strike> instruct Git to assume that the file is unchanged.</p> <p><strike>I added the following line to my ignore file, which is easily accessed through the GitHub for Windows UI, under settings.</strike></p><pre class="csharpcode">      # Membership
      AuthConfig.cs</pre>
<style type="text/css">.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>

<p><a href="http://jameschambers.azurewebsites.net/wp-content/uploads/2012/12/image3.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://jameschambers.azurewebsites.net/wp-content/uploads/2012/12/image_thumb.png" width="349" height="180"></a></p>
<p>The last step was to tell Git that we don’t really want to submits changes anymore.&nbsp; To do this, right-click on your repo in GitHub for Windows and select “Open a Shell Here”:</p>
<p><a href="http://jameschambers.azurewebsites.net/wp-content/uploads/2012/12/image4.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://jameschambers.azurewebsites.net/wp-content/uploads/2012/12/image_thumb1.png" width="198" height="194"></a></p>
<p>Finally, type this in the shell that opens up, replacing the project name and path as appropriate to your AuthConfig.cs file:</p><pre class="csharpcode">    git update-index --assume-unchanged YourProject\App_Start\AuthConfig.cs</pre>
<style type="text/css">.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>

<p>This is really just a 2 second process, but I wish I knew it 30 minutes ago. Hope this helps out!</p>
<h2>Link-o-liciousness</h2>
<ul>
<li><a href="http://www.asp.net/vnext/overview/videos/oauth-in-the-default-aspnet-45-templates">Asp.Net OAuth Integration</a> in the default templates with Scott Hanselman 
<li>The documentation on update-index, <a href="http://git-scm.com/docs/git-update-index">straight from Git</a> 
<li>GitHub for Windows <a href="http://windows.github.com/">info and download page</a></li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>651</wp:post_id>
		<wp:post_date>2012-09-14 17:42:00</wp:post_date>
		<wp:post_date_gmt>2012-09-14 17:42:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ignoring-a-file-that-you-have-already-started-tracking-in-git</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="develop-meta"><![CDATA[Develop Meta]]></category>
		<category domain="post_tag" nicename="git"><![CDATA[Git]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3794922393]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>WordPress Conversion &#038; Loss of Comments</title>
		<link>http://jameschambers.com/2012/12/wordpress-conversion-loss-of-comments/</link>
		<pubDate>Sun, 23 Dec 2012 20:14:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=1341</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In an effort to support some other ongoing initiatives I have migrated away from Orchard and onto WordPress.&nbsp; For now, I have been able to move over all my old posts, however in spite of how much I have valued them, comments were not able to make the move.&nbsp; </p> <p>There also may be some problems with images for the next few days as I make the move, but I will get those restored ASAP.</p> <p>To all you wonderful folks who have contributed to my blog over the last two years while I was on Orchard, <em>thank you</em>. Your comments, suggestions and questions are very much valued and I’m sorry that they were unable to make the cutover.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1341</wp:post_id>
		<wp:post_date>2012-12-23 20:14:00</wp:post_date>
		<wp:post_date_gmt>2012-12-23 20:14:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>wordpress-conversion-loss-of-comments</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="beyond-code"><![CDATA[Beyond Code]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3940796714]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Seed Windows Azure Mobile Services Tables with Less Than 10 Lines of Code</title>
		<link>http://jameschambers.com/2012/12/seed-windows-azure-mobile-services-tables-with-10-lines-of-code/</link>
		<pubDate>Fri, 28 Dec 2012 02:01:09 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.com/?p=1461</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Looking for an easy way to build realistic test or sample data out for your app?&nbsp; You only need two packages and a few lines of code to seed whatever kind of table you need.</p> <p>I won’t lie, when you want to throw a few dozen records into a table, this is pretty sexy:</p><pre class="csharpcode">var peopleTable = _client.GetTable&lt;Person&gt;();
var people = Angie.FastList&lt;Person&gt;();
<span class="kwrd">foreach</span> (var person <span class="kwrd">in</span> people)
{
    peopleTable.Insert(person);
}</pre>
<style type="text/css">.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>

<h2>How to Make it Happen</h2>
<ol>
<li>Create a Windows Azure Mobile Services instance and add the tables you need. In my example above, I’m using a table called “Person”.&nbsp; There is only one field created to start with called “Id”.&nbsp; Leave this as-is because we’ll use Dynamic Schema (on by default) to flesh out the table. 
<li>Create a new Console app in Visual Studio 2012. 
<li>Install two packages from the Package Manager Console: 
<ol>
<ol>
<li><font face="Consolas">Install-Package Heyns.ZumoClient</font>&nbsp; - <a href="https://github.com/DeonHeyns/Heyns.ZumoClient" target="_blank">ZumoClient</a> is a use-anywhere .Net 4.0 library that wraps Windows Azure Mobile Services, provided by <a href="https://twitter.com/DeonHeyns" target="_blank">Deon Heyns</a>.
<li><font face="Consolas">Install-Package AngelaSmith</font> – <a href="https://github.com/MisterJames/AngelaSmith" target="_blank">AngelaSmith</a> is the object initializing smarty-pants that can populate your properties with realistic-looking data, created by <a href="https://twitter.com/Dave_Paquette" target="_blank">Dave Paquette</a> and <a href="https://twitter.com/canadianjames" target="_blank">James Chambers</a> (that’s me!).</li></ol></ol></li></ol>
<p>With those things in place, you simply need to instantiate your client, table and a list of Person objects.&nbsp; Finally, iterate over your collection and push it to the cloud.&nbsp; That looks like this:</p><pre class="csharpcode">_client= <span class="kwrd">new</span> MobileServicesClient(<span class="str">"https://yourapp.azure-mobile.net/"</span>, <span class="str">"yourkey"</span>);

var peopleTable = _client.GetTable&lt;Person&gt;();
var people = Angie.FastList&lt;Person&gt;();
<span class="kwrd">foreach</span> (var person <span class="kwrd">in</span> people)
{
    peopleTable.Insert(person);
}</pre>
<style type="text/css">.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>

<p>And you’re set!&nbsp; Run that bad boy, wait a couple of minutes or so, then check your Mobile Services table in the Windows Azure portal.</p>
<p><img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://jameschambers.com/wp-content/uploads/2012/12/image5.png" width="499" height="240"></p>
<style type="text/css">.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>

<h2>Going Further</h2>
<p>You may have more complex data to set up, or you may even have requirements on how the properties need to be filled. For this, you can use the fluent methods on Angie to tell her how you want the data created.</p>
<p>Here’s how you would get 100 users worth of scores in a leaderboard on Windows Azure Mobile Services:</p><pre class="csharpcode">
var entryTable = _client.GetTable&lt;LeaderBoardEntry&gt;();

var entries = Angie.Configure()
    .ListCount(100)
    .FillBy(<span class="str">"UserName"</span>, <span class="kwrd">delegate</span>() { <span class="kwrd">return</span> <span class="kwrd">string</span>.Format(<span class="str">"{0}{1}"</span>, Susan.FillFirstName(), Susan.FillLastName()); })
    .FillBy(<span class="str">"LastUpdated"</span>, <span class="kwrd">delegate</span>() { <span class="kwrd">return</span> Susan.FillDate(DateRules.Within1Year); })
    .MakeList&lt;LeaderBoardEntry&gt;();

<span class="kwrd">foreach</span> (var entry <span class="kwrd">in</span> entries)
{
    entryTable.Insert(entry);
}</pre>
<style type="text/css">.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>

<style type="text/css">.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>

<h2>Next Steps</h2>
<p>Okay, time class participation. These are early versions of these libraries but you can help make them more awesome.&nbsp; Pop over to GitHub and fork and contribute!</p>
<ul>
<li><a href="https://github.com/MisterJames/AngelaSmith" target="_blank">AngelaSmith</a></li>
<li><a href="https://github.com/DeonHeyns/Heyns.ZumoClient" target="_blank">ZumoClient</a></li></ul>
<p>I’ve also written <a href="http://jameschambers.com/2012/12/introducing-angelasmith-the-object-initializing-smartypants/" target="_blank">a primer on using AngelaSmith</a> here on my blog.</p>
<p>
<style type="text/css">.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>
</p>


<p>Good luck!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1461</wp:post_id>
		<wp:post_date>2012-12-28 02:01:09</wp:post_date>
		<wp:post_date_gmt>2012-12-28 02:01:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>seed-windows-azure-mobile-services-tables-with-10-lines-of-code</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="azure"><![CDATA[Azure]]></category>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="post_tag" nicename="mobile-services"><![CDATA[Mobile Services]]></category>
		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3810254754]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Embedding Videos With Windows Live Writer and MetroPress</title>
		<link>http://jameschambers.com/2012/12/embedding-videos-with-windows-live-writer-and-metropress/</link>
		<pubDate>Mon, 31 Dec 2012 13:43:44 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.com/?p=1501</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>The Problem</h2> <p>Windows Live Writer, IMO, is still the best little tool out there for creating content for blogs. It does a great job at nearly every task related to editing post, pages, categories and tags, and it provides flexible posting options with the ability to manage multiple blogs.</p> <p>But, at times, she’s verbose! Embedding a YouTube video, for instance, inserts the following code into your post:</p><pre class="csharpcode"><p><span class="kwrd">&lt;</span><span class="html">div</span> <span class="attr">id</span><span class="kwrd">="scid:5737277B-5D6D-4f48-ABFC-DD9C333F4C5D:befb91d4-acb8-41d9-a0da-ec64375d826f"</span> <span class="attr">class</span><span class="kwrd">="wlWriterEditableSmartContent"</span> <span class="attr">style</span><span class="kwrd">="float: none; padding-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px"</span><span class="kwrd">&gt;</span><span class="kwrd">&lt;</span><span class="html">embed</span> <span class="attr">src</span><span class="kwrd">="http://www.youtube.com/v/uA7Z8WfD3bU?hd=1"</span> <span class="attr">type</span><span class="kwrd">="application/x-shockwave-flash"</span> <span class="attr">wmode</span><span class="kwrd">="transparent"</span> <span class="attr">width</span><span class="kwrd">="448"</span> <span class="attr">height</span><span class="kwrd">="252"</span><span class="kwrd">&gt;&lt;/</span><span class="html">embed</span><span class="kwrd">&gt;&lt;/</span><span class="html">div</span><span class="kwrd">&gt;</span></p></pre>
<style type="text/css">.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>

<p>Unfortunately, that breaks <a href="http://metropress.codeplex.com/" target="_blank">MetroPress</a> because the embed tag and script cannot load inside a Windows Store app.</p>
<p>The fix is quite simple: rather than using the built-in “Insert Video” feature, you simply need to copy and paste the embed code from YouType, which looks more like this:</p><pre class="csharpcode"><span class="kwrd">&lt;</span><span class="html">iframe</span> <span class="attr">width</span><span class="kwrd">="560"</span> <span class="attr">height</span><span class="kwrd">="315"</span> <span class="attr">src</span><span class="kwrd">="http://www.youtube.com/embed/uA7Z8WfD3bU"</span> <span class="attr">frameborder</span><span class="kwrd">="0"</span> <span class="attr">allowfullscreen</span><span class="kwrd">&gt;&lt;/</span><span class="html">iframe</span><span class="kwrd">&gt;</span></pre>
<p>This embed code is snapped from Share –&gt; Embed on the YouTube site under your video.</p>
<p><a href="http://jameschambers.com/wp-content/uploads/2012/12/image7.png"><img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://jameschambers.com/wp-content/uploads/2012/12/image_thumb3.png" width="438" height="180"></a>
<style type="text/css">.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>
</p>
<p>You can see that the new embed code is cleaner, and better still it is allowed in a Windows Store app and the video plays embedded in your posts just fine.</p>
<p><a href="http://jameschambers.com/wp-content/uploads/2012/12/image6.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://jameschambers.com/wp-content/uploads/2012/12/image_thumb2.png" width="512" height="309"></a></p>
<h2>A Little Background</h2>
<p>MetroPress is a handy way to augment your blog with an offline-capable reader for your followers.&nbsp; From their site:</p>
<blockquote>
<p>In a nutshell, this framework is a flexible app template that can be easily customized and extend it to create more awesome Windows store applications.</p></blockquote>
<p>Using the quickstart, it takes about an hour to get your blog prepped and the project built up so that you can release a Windows Store (Windows 8) application.&nbsp; Mine passed certification on the first attempt.</p>
<p>You can get MetroPress on their <a href="http://metropress.codeplex.com/" target="_blank">CodePlex project site</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1501</wp:post_id>
		<wp:post_date>2012-12-31 13:43:44</wp:post_date>
		<wp:post_date_gmt>2012-12-31 13:43:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>embedding-videos-with-windows-live-writer-and-metropress</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3784492481]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
