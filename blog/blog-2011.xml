<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/4.3.1" created="2015-11-29 06:13" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>They Call Me Mister James</title>
	<link>http://jameschambers.com</link>
	<description>Building the Web on the Cloud (and other musings)</description>
	<pubDate>Sun, 29 Nov 2015 06:13:21 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://jameschambers.com</wp:base_site_url>
	<wp:base_blog_url>http://jameschambers.com</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>james.chambers</wp:author_login><wp:author_email>james@jameschambers.com</wp:author_email><wp:author_display_name><![CDATA[james.chambers]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>


	<generator>http://wordpress.org/?v=4.3.1</generator>

	<item>
		<title>Adaptive Performance is Evil</title>
		<link>http://jameschambers.com/2011/07/adaptive-performance-is-evil/</link>
		<pubDate>Sun, 10 Jul 2011 18:30:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=1051</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I was working on tribute video for <a href="http://oldblog.jameschambers.com/blog/it-rsquo-s-been-a-long-long-long-weekend">good friends of mine</a> this last week using Adobe Premiere Pro CS4.&nbsp; I have a brand-spanky-new laptop with some pretty rockin’ specs including an nVidia video card that chews through the video processing, for the most part, in real time and as fast as 5 times better.</p> <p>But I couldn’t get that far into editing. Every minute to 90 seconds Premiere was crashing.</p> <p>I was getting OpenGL errors, saying “A problem occurred when processing OpenGL commands”, or “Encoding Failed. Could not read from the source” or “The NVIDIA OpenGL driver detected a problem with the display driver and is unable to continue. The application must close”.&nbsp; There was also one about “lost the connection to the device” and the error numbers from Adobe Premiere were error 4 and error 8.</p> <p>The culprit? Adaptive Performance. It’s built into the GPU drive and by default turned on. It’s supposed to use less power and save the environment or something.</p> <p>Turns out I hate planet Earth.</p> <p><strong>TURN ADAPTIVE PERFORMANCE OFF</strong>. At least for Premiere Pro.&nbsp; If you go into the nVidia control panel you can actually adjust driver settings on a per-application basis (or globally set the feature’s status across the whole OS). Adaptive Performance is a feature that steps down the processing capabilities of your video card to conserve energy and then tries to crank the juice up when you need it.</p> <p>Unfortunately this causes Adobe Premiere Pro to wig out.</p> <p>So, turn it off and live happier.</p> <blockquote> <p>A quick note: I found the solution to this on a gamer site when I was Binging the errors and I’m certain it was related to an OpenGL error. I would like to give attribution here but I don’t remember the name of the gaming community and can’t re-Bing the same results I was getting when I found the fix.</p></blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1051</wp:post_id>
		<wp:post_date>2011-07-10 18:30:00</wp:post_date>
		<wp:post_date_gmt>2011-07-10 18:30:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adaptive-performance-is-evil</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="develop-meta"><![CDATA[Develop Meta]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4190506771]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>It&#039;s been a long, long Long Weekend</title>
		<link>http://jameschambers.com/2011/07/it-rsquo-s-been-a-long-long-long-weekend/</link>
		<pubDate>Mon, 04 Jul 2011 18:31:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=1061</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Thursday afternoon, as our family was preparing for our July long weekend, we received some terrible, terrible news.&nbsp; Some of our closest friends’ daughter was killed in an accident on the highway; she was 17 years old. </p> <p>She was driving up to her parents’ cabin at the lake to visit her mom and was killed instantly in a head-on collision.&nbsp; Her boyfriend, travelling with her, also passed away.</p> <p>Haven’t made much sense of things yet.&nbsp; Because of the type of accident the autopsies had to be done in Winnipeg, about 2.5 hours from here.&nbsp; As a result, the families won’t have their children back until late today or possibly tomorrow.</p> <p>As a double whammy, we found out early Saturday that the driver of the other vehicle is another person close to us, an adopted aunt, of sorts, that has been in my wife’s family for years and years. We’ve eaten together every Christmas, Easter and Thanksgiving for the last 17 years (when I started dating my wife).&nbsp; She’s now in the trauma unit with broken…everything…on life support and requiring many surgeries before she makes it out.&nbsp; It is nothing short of miraculous that she’s come through this and she has such a long road ahead of her.</p> <p>My birthday was on July 1, Canada Day.&nbsp; My wife and kids and I took in the fireworks and had some good family time together, which helped to take our minds off the senselessness of it all.</p> <p>Funerals are planned for Friday and Saturday for the kids.&nbsp; We’ll be back and forth to Winnipeg to visit our friend as soon as they allow visitors.&nbsp; It’s going to be a long week.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1061</wp:post_id>
		<wp:post_date>2011-07-04 18:31:00</wp:post_date>
		<wp:post_date_gmt>2011-07-04 18:31:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>it-rsquo-s-been-a-long-long-long-weekend</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="beyond-code"><![CDATA[Beyond Code]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4013052690]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Running A Remote NuGet Feed</title>
		<link>http://jameschambers.com/2011/06/running-a-local-nuget-feed/</link>
		<pubDate>Thu, 30 Jun 2011 18:33:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=1071</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Following the NuGet docs site to setup a NuGet feed won’t get you one if you follow it (as of Jun 30). There’s one missing step in that doc (it’s here at the end of this one), but I’ve added all the steps below so you can walk through for yourself.</p> <p>I’ve also created a fork and submitted a pull request to include the missing step, so the online docs should be updated soon.</p> <h2>Setting Up for Eventual Deployment</h2> <p>Create a new site in IIS.&nbsp; </p> <p>Edit the Application Pool and make sure the .NET Framework is set to version 4.</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/ad38df3db4ba_D913/image_3.png" width="278" height="250"></p> <h2>Get Your Project Together</h2> <p>Open Visual Studio in Administrator mode (right-click, Run as administrator).</p> <p>Create a new, Empty Web Application project.</p> <p>Open the Package Manager Console and at the PM&gt; prompt, type</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/ad38df3db4ba_D913/image_8.png" width="427" height="53"></p> <p>Let NuGet do it’s sweet, sweet, beautiful magic.</p> <p>Right-click on your <strong><em>solution</em></strong> and select Open Folder in Windows Explorer.&nbsp; </p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/ad38df3db4ba_D913/image_9.png" width="336" height="30"></p> <p>There is a <em>packages</em> directory there that has a half-dozen packages installed for you.&nbsp; Go through your packages directory, and copy the .nupkg files to the clipboard, then return to Visual Studio and paste them in the Packages folder under your project. It only takes a moment to add a few. Again, you’re copying all the .nupkg files from your <strong>solution</strong> (file system) to the Packages directory in your <strong>project</strong> (Visual Studio).</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/ad38df3db4ba_D913/image_19.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/ad38df3db4ba_D913/image_thumb_6.png" width="240" height="133"></a></p> <p>Press CTRL+F5 and run the site. Click on the packages link and verify that your packages are in the feed.&nbsp; Sweet.</p> <h2>Publish Your Feed</h2> <p>Close the browser and return to Visual Studio.&nbsp; Select the project in Solution Explorer, then click on Build –&gt; Publish from the menu.</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/ad38df3db4ba_D913/image_15.png" width="318" height="272"></p> <p>This is why we ran as admin…we need to deploy to our local IIS.&nbsp; If you’re logged in as admin you should get a successful publish.</p> <p>Navigate to your site on localhost.</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/ad38df3db4ba_D913/image_14.png" width="365" height="269"></p> <p>Unfortunately, at this point…our feed is empty. Click on the packages link:</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/ad38df3db4ba_D913/image_17.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/ad38df3db4ba_D913/image_thumb_5.png" width="368" height="273"></a></p> <p>Lamesauce.&nbsp; Okay…so now to fix it.&nbsp; </p> <h2>The Missing Step</h2> <p>Go check your packages directory to the published site.&nbsp; Empty, ain’t it?</p> <p>No worries…you have two choices here:</p> <ol> <li>Paste all your packages into the site directory (where IIS is looking)  <li>Change the build action on all your .nupkg files to “Content” and republish your site.</li></ol> <p>&nbsp;</p> <p>I was originally under the assumption that it was a permissions problem or a DLL version problem due to a couple of comments out on the interwebs.&nbsp; When I had 5 minutes to look at things here this afternoon, it was quickly clear as to what the problem was.&nbsp; </p> <p>Hope this helps!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1071</wp:post_id>
		<wp:post_date>2011-06-30 18:33:00</wp:post_date>
		<wp:post_date_gmt>2011-06-30 18:33:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>running-a-local-nuget-feed</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="category" nicename="develop-meta"><![CDATA[Develop Meta]]></category>
		<category domain="post_tag" nicename="nuget"><![CDATA[NuGet]]></category>
		<category domain="post_tag" nicename="visual-studio-2010"><![CDATA[Visual Studio 2010]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3782838284]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Do Your Like a Good Game of Rock, Paper, Scissors? In the Cloud?</title>
		<link>http://jameschambers.com/2011/06/do-your-like-a-good-game-of-rock-paper-scissors-in-the-cloud/</link>
		<pubDate>Wed, 29 Jun 2011 18:34:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=1081</guid>
		<description></description>
		<content:encoded><![CDATA[<p>My head is in the clouds.&nbsp; I just played the most intense game of Rock, Paper, Scissors ever.&nbsp; It was a “best of 1,999” format.&nbsp; And my arm didn’t even get tired.&nbsp; In fact, I played about 40 rounds of it, with 8 different competitors and by the end I was winning <em>every</em> match.</p> <p>Folks, what I’m talking about is the <a href="http://www.rockpaperazure.com/">Rock, Paper, Azure</a> competition that Microsoft is hosting right now, and if you are in the least bit interested in the cloud this is a relaxed, fun way to get yourself started.&nbsp; Plus: <a href="http://www.rockpaperazure.com/aboutchallenge.aspx">free t-shirts</a>!&nbsp; Learning cloud development and a free t-shirt? How can you not?!</p> <h3><font style="font-weight: bold">What It Is</font></h3> <p>The game is hosted on the Azure platform and every participant has a chance to create an entry bot – the “player” used by the game engine to play out&nbsp; your game.&nbsp; You play every other registered player.&nbsp; Each game is played to 1,000 wins, and the first to 1,000 gets 3 points to their name.&nbsp; There are leaderboards, prizes and at the end of the practice rounds a Grand Tournament for the ultimate bragging rights.</p> <h3><font style="font-weight: bold">What You’ll Really Learn</font></h3> <p>Now, this game isn’t so much about cloud development as it is to walk developers through the process of <em>deployment</em>.&nbsp; The “bot” project – used to create your player in the game – is set up for you as part of the download.&nbsp; All you have to do is write a bit of c#, vb or f# to determine what move your bot will play next, and you’re off the races.&nbsp; </p> <p>There is one catch: your bot can only be entered into the competition if it’s hosted in Azure.&nbsp; Said another way, you <strong><em>have</em></strong> to deploy to the cloud to enter and win.&nbsp; To get your Azure account (free trial) you can visit the <a href="http://www.rockpaperazure.com/getstarted.aspx">getting started page</a> for the contest.</p> <h3><font style="font-weight: bold">Having Some Fun</font></h3> <p>Brace yourself, because you may not know this: <strong>RPS is <em>serious</em> game</strong>.&nbsp; Seriously.&nbsp; There are international organizations, widely accepted rules and derivatives, annual competitions with big prize money and the works.</p> <p>In light of all this seriousness, you can still have fun with this competition.&nbsp; You just have to remember that a “random” throw isn’t going to get you anywhere.&nbsp; In my testing, even a bot that favors a particular throw does better than a random bot.</p> <h3><font style="font-weight: bold">(Really) Getting Started</font></h3> <p>Once you get through the guide and get yourself running, you’re going to want to get some bots in your local Azure emulator so that you can test strategy.&nbsp; If you’re only working in one language, simply remove the other projects from your solution (I work in c#).</p> <p>Other bot developers aren’t going to give you their bots, but you can easily create some pseudo-strategies to make sure you don’t fail in the simplest of cases.&nbsp; Point in case: an early version of a bot I was making won every time against every bot in my lab, except the bot that through mostly scissors.</p> <p>So, let’s get started.</p> <ol> <li>Open the BotLab solution with Visual Studio running as Administrator and run the app.&nbsp; While the Azure fabric is getting going, we’ll create some bots to unleash fury in the lab.  <li><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: right; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" align="right" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/669fa1007230_9E53/image_25.png" width="244" height="42">Open the MyBot solution in a new VS instance (you don’t need to be admin here). Build the app by pressing Shift+Ctrl+B. Right-click on the project folder and click “Open Folder in Windows Explorer”.&nbsp; Here, along with your bin, obj, and properties folders, create a “bots” folder.  <li>Now, back in Visual Studio, <img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: right; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" align="right" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/669fa1007230_9E53/image_24.png" width="351" height="183">open the Properties of your project and navigate to the Build Events tab.&nbsp; We need to add a new post-build event similar to “copy $(TargetPath) $(ProjectDir)\bots\”.&nbsp; This will copy our built bot to a bot folder every time we build one.&nbsp; We’re using this as a technique to build a quick army of bots. Every time we build, our target dir gets cleared, so we want to have a bit of a locker to keep them penned in and out of harm’s way.  <li>Next, go back to the Application tab inside your project properties.&nbsp; Change the Assembly name to “ScissorBot”.&nbsp; When you build your app again (Shift+Ctrl+B) your ScissorBot dll will be copied to the bots folder.</li></ol> <p>Now we’re ready to get some bots together.</p> <h3><font style="font-weight: bold">Building Some Bots</font></h3> <p>Go to the MyBot class and you’ll see that we inherit from IRockPaperScissorsBot, which ultimately inherits from IBot.&nbsp; We have but one responsibility to fill with this contract: MakeMove.</p> <p>We want to create some bots that will just favor certain moves.&nbsp; This isn’t likely a strategy that another bot maker will employ, but if by chance they do favor a move, you’ll know that you can fare fairly well against them.&nbsp; Wow. I don’t think I’ve ever used “fare” and “fairly” side be each before.</p> <p>Replace the meat of your MakeMove function with the following code:</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/669fa1007230_9E53/image_7.png" width="313" height="98"></p> <p>This little guy has an affection for sharp things and will throw scissors better than half the time.&nbsp; Build your app and make sure the DLL is in your bots directory.</p> <p>Now do the following:</p> <ol> <li>Change the Assembly name in your project settings to PaperBot.  <li>Modify the above code above to favor paper.  <li>Build your app and make sure PaperBot’s in that bots folder too.  <li>Do steps 1-3 over for RockBot.&nbsp; Queue epic guitar solo.</li></ol> <p>&nbsp;</p> <p>Now you have some competition…they’re not great, but they’ll give you a fighting chance if your bot can survive against them.</p> <h3><font style="font-weight: bold">Testing out the BotLab</font></h3> <p>Now we get to see how things play out. Pop back over the browser that is running the BotLab. You’ll see a window there with a few sample bots in inventory.&nbsp; Use the form there to select and add the bots you’ve just created. It should look something like this when you’re done:</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/669fa1007230_9E53/image_23.png" width="226" height="244"></p> <p>Next, click the “Start Battle!” button and let the rain fall. All bots in the lab will square off against each other and the results will be tabulated for you.&nbsp; By the way, note how far down the list the Random bot is.</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/669fa1007230_9E53/image_22.png" width="244" height="200"></p> <p>Clicking on a bot brings up the game log in a little modal dialog that lets you see how things transpired.&nbsp; In this way, you can review the details of the way you played and how you won (or lost) as well (or as badly) as you did. This is how I came to discover that when one of my bots was getting into trouble, it panicked and started throwing water balloons. </p> <p>I do want to point out an interesting thing here that is part of the game rules and critical to winning:</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/669fa1007230_9E53/image_16.png" width="362" height="305"></p> <p>Notice that after BigBang has gone up 10-0 there are two draws (ties) and then PaperBot wins?&nbsp; The points accumulate through a tie, so PaperBot was awarded three points when Scissors cut Paper.&nbsp; Which brings us to some strategy.</p> <h3><font style="font-weight: bold">Some Strategy</font></h3> <p>What if you knew that the points were accumulating?&nbsp; Well you can. Your class, one instantiated, is stateful for the duration of the game. You can have member fields that hold values and therefore can track some things to gain an advantage.&nbsp; Using this tip from the RockPaperAzure blog, we are able to build a Dynamite-favoring bot that simply OWNs the competition.&nbsp; Rename your assembly and modify your bot’s class to the following:</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/669fa1007230_9E53/image_18.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/669fa1007230_9E53/image_thumb_7.png" width="525" height="258"></a></p> <p>Now we’re combining strategies: if we have a tie on the line worth three or more points we’re going to throw Dynamite. If not, we’re favoring a throw (paper).&nbsp; Now when we check our results we see the following:</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/669fa1007230_9E53/image_21.png" width="260" height="237">  <p>DynaBot wins every time I run this.&nbsp; The one mark in the loss column is <em>always</em> against ScissorBot. </p> <p>Time for some smarts!</p> <h3><font style="font-weight: bold">Making the Bot a Little Smarter</font></h3> <p>So, here’s the deal: I want to have a sporting chance in this competition, but I want to throw out some ideas as to approaches you can take to help you win too.&nbsp; I’ll give you the ideas (and some code) and you work out the details.&nbsp; I’ll help you with the code once the competition is done <img class="wlEmoticon wlEmoticon-smile" style="border-top-style: none; border-left-style: none; border-bottom-style: none; border-right-style: none" alt="Smile" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/669fa1007230_9E53/wlEmoticon-smile_2.png">.</p> <p>The first thing I did was start to keep track of the last 20 moves of the other player. This is easily done by adding a Queue&lt;Move&gt; to our class.</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/669fa1007230_9E53/image_27.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/669fa1007230_9E53/image_thumb_9.png" width="366" height="25"></a></p> <p>Next, I moved my _pointsOnTheLine logic to an UpdateStats method.&nbsp; That’s also where I’ll keep track of the _lastPlays Queue.</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/669fa1007230_9E53/image_29.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/669fa1007230_9E53/image_thumb_10.png" width="282" height="75"></a></p> <p>Now I have the ability to do a bit of analysis on the opponent’s moves.</p> <p>Next, I wanted an easy flag to see if I was currently winning in the game.&nbsp; This lets me switch between offensive and defensive strategies. I started by creating a variable that allows me to just check a bool anywhere else in my code.&nbsp; This is a class-level field.</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/669fa1007230_9E53/image_31.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/669fa1007230_9E53/image_thumb_11.png" width="200" height="27"></a></p> <p>Then, in my UpdateStats method, I do the check:</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/669fa1007230_9E53/image_33.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/669fa1007230_9E53/image_thumb_12.png" width="331" height="40"></a></p> <p>Finally, I wanted a way to set up a playbook.&nbsp; I created a series of List&lt;Move&gt; collections that easily let me pick my next few moves.&nbsp; Some examples of that are as follows:</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/669fa1007230_9E53/image_35.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/669fa1007230_9E53/image_thumb_13.png" width="552" height="142"></a></p> <p>To use these moves, I simply created a class-level queue…</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/669fa1007230_9E53/image_37.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/669fa1007230_9E53/image_thumb_14.png" width="363" height="26"></a></p> <p>…and test to see if it’s empty. If it is, I can load up a few plays rather easily…</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/669fa1007230_9E53/image_41.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/669fa1007230_9E53/image_thumb_16.png" width="384" height="45"></a></p> <p>Get it?&nbsp; If I’m “WINNING”, I foreach over “the Avalance” and add them to the queue.&nbsp; Finally, I can pop my results back off the queue easily and make plays from my populated playbook:</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/669fa1007230_9E53/image_43.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/669fa1007230_9E53/image_thumb_17.png" width="197" height="23"></a></p> <p>The last thing I did was to create a simple function that returns the throw that beats whatever you pass in.</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/669fa1007230_9E53/image_20.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/669fa1007230_9E53/image_thumb.png" width="555" height="259"></a></p> <p>Part of the stats I keep watching for a mirroring strategy (where the other bot just plays whatever I just played).&nbsp; Now I can easily throw back at the mirror and guarantee a win:</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/669fa1007230_9E53/image_47.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/669fa1007230_9E53/image_thumb_19.png" width="255" height="42"></a></p> <p>Now, obviously I’m not giving away all my secrets here, but you can use strategies similar to this to get the ball rolling.&nbsp; I wrote three <em>really good bots</em> with different strategies…in a list of 20 bots I created, one of these three always won.&nbsp; Now, I’m working on the bot that can beat all the bots in my arsenal.</p> <h3><font style="font-weight: bold">Next Steps</font></h3> <p>All that’s left to do is deploy your bot to the cloud. Head over to the game site and <a href="http://www.rockpaperazure.com/getstarted.aspx#4">watch the video</a> on deployment; that is, after all the point of this game: to see how easy it is to deploy a project to the cloud.&nbsp; When you’ve finished deploying, you can then enter the contest and start kicking bot butt!</p> <p>Good luck!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1081</wp:post_id>
		<wp:post_date>2011-06-29 18:34:00</wp:post_date>
		<wp:post_date_gmt>2011-06-29 18:34:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>do-your-like-a-good-game-of-rock-paper-scissors-in-the-cloud</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="azure"><![CDATA[Azure]]></category>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>
		<category domain="post_tag" nicename="rock-paper-scissors"><![CDATA[Rock Paper Scissors]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3783073067]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>HTML5 Boot Camp in Winnipeg</title>
		<link>http://jameschambers.com/2011/06/html5-boot-camp-in-winnipeg/</link>
		<pubDate>Sat, 25 Jun 2011 18:35:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=1091</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I just had the privilege and pleasure of speaking at the HTML5 Boot Camp Extravaganza in Winnipeg at the Delta Hotel.&nbsp; The event was hosted and organized by Microsoft Partner of the Year <a href="http://www.imaginets.com">Imaginet</a> and sponsored by Microsoft.&nbsp; There were prizes for all attendees as well as breakfast, lunch and snacks…not to mention great conversation!</p> <h3><font style="font-weight: bold">Post-Camp Connection</font></h3> <p>You can get in touch with any of the presenters through the links below:</p> <blockquote> <p><font color="#434343">David Wesst – <a href="http://david.wes.st/">blog</a>, <a href="http://twitter.com/#!/Wessty">twitter</a></font></p> <p><font color="#434343">Kelly Cassidy – <a href="http://www.mindfulsanity.com/">blog</a>, <a href="http://twitter.com/#!/k_cassidy">twitter</a></font></p> <p><font color="#434343">Tyler Doerksen – <a href="http://tylerdev.wordpress.com/">blog</a>, <a href="http://twitter.com/#!/tyler_gd">twitter</a></font></p> <p><font color="#434343">and me!&nbsp; James Chambers – <a href="http://oldblog.jameschambers.com/blog">blog</a> (you’re already here!), twitter</font></p></blockquote> <h3><strong>Hey, what was that site where….?</strong></h3> <p>We covered a ton of content and flew through all kinds of territory.&nbsp; Here’s some of the links, tools and technologies we covered:</p> <ul> <li><a title="http://diveintohtml5.org" href="http://diveintohtml5.org">http://diveintohtml5.org</a> – Learn where we came from in the world of HTML5 and how to use the tags in our toolkit  <li><a title="http://caniuse.com" href="http://caniuse.com">http://caniuse.com</a> – Dig into the bowels of the browsers and find out if you can natively use that spanky new HTML5 feature you learned about  <li><a href="http://makeawesomeweb.com">http://makeawesomeweb.com</a> – A collection of sites that are…awesome.  <li><a title="http://www.beautyoftheweb.com/#/experience/" href="http://www.beautyoftheweb.com/#/experience/">http://www.beautyoftheweb.com/#/experience/</a> – More samples to inspire awesomeness  <li><a title="http://ie.microsoft.com/testdrive/" href="http://ie.microsoft.com/testdrive/">http://ie.microsoft.com/testdrive/</a> – The testdrive site for IE10  <li><a href="http://html5boilerplate.com/">http://html5boilerplate.com/</a> – Easy starting point for working with HTML5, complete customization available  <li><a href="http://www.pirateslovedaisies.com/">http://www.pirateslovedaisies.com/</a> – Tell your boss you’re doing research on the canvas tag while he sips on his scotch  <li><a href="http://joshduck.com/periodic-table.html">http://joshduck.com/periodic-table.html</a> – Josh Duck’s reorganization of the periodic table of elements, all HTMLified  <li><a href="http://nuget.org">http://nuget.org</a> – The open source package manager you don’t love because you don’t know about it yet</li></ul> <p>There’s a ton out there, but if you’re looking for something in particular don’t hesitate to ask.&nbsp; </p> <p>Thanks, Winnipeg, for participating in this event.&nbsp; We had 50 folks of all levels of experience in the room, which made for some great questions.&nbsp; I really enjoyed the format – tandem presentations with lots of dialogue – and hope that you guys did too.</p> <p>See you at the SIG meetings in the ‘Peg over the next few months!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1091</wp:post_id>
		<wp:post_date>2011-06-25 18:35:00</wp:post_date>
		<wp:post_date_gmt>2011-06-25 18:35:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>html5-boot-camp-in-winnipeg</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>
		<category domain="post_tag" nicename="conferences"><![CDATA[Conferences]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[HTML5]]></category>
		<category domain="post_tag" nicename="speaking"><![CDATA[Speaking]]></category>
		<category domain="post_tag" nicename="winnipeg"><![CDATA[Winnipeg]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3795068597]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>NuGet Reaches 1,000,000 Package Downloads</title>
		<link>http://jameschambers.com/2011/06/nuget-reaches-1-000-000-package-downloads/</link>
		<pubDate>Wed, 22 Jun 2011 18:36:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=1101</guid>
		<description></description>
		<content:encoded><![CDATA[<p>The .Net community is beginning to embrace open source software.&nbsp; For years, we’ve struggled to find a way to elegantly share and use other people’s code – and ultimately leverage billions of lines of code – in a way that fits into our existing toolset and workflow.</p> <p>NuGet has begun to solve those problems, and now, it’s here in force.</p> <p>Adoption rate is beginning to grow, new projects are being started with NuGet in the kit and people are beginning to see that there are great gains to make on existing projects as well.</p> <h3><font style="font-weight: bold">Now It’s Really Real</font></h3> <p>This morning, NuGet reached a significant milestone, marking it’s official arrival: 1,000,000 package downloads.</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/NuGet-Reaches-1000000-Package-Downloads_70DA/image_2.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/NuGet-Reaches-1000000-Package-Downloads_70DA/image_thumb.png" width="536" height="170"></a></p> <p>Why is this significant?&nbsp; Well, for starters, it means that it’s no longer just folks messing around. People are using it.&nbsp; It’s rapidly approaching 2,000 packages and the diversity is good, if not great.&nbsp; I’ve got three projects already in production that I’ve added packages to – not including dependencies – and I would venture a guess that others have as well. </p> <p>The hourly downloads have been trending upwards (save a few spikey days).&nbsp; The 1,000,000 downloads in and of itself isn’t the significant part, but it’s a beacon of what’s happening.</p> <p>So, what <em>is</em> happening?&nbsp; Well, as developers on the .Net stack, we’ve finally got a tool that makes reusing code efficient.&nbsp; We have the ability to consume and update packages (and with the latest version of NuGet we have the ability to define constraints for updates, as well). We can leverage the great work of other devs.&nbsp; We have open source tools to publish open source libraries, helpers, templates, extensions and more. We can package up pre-configured trials of commercial products, wrap licensing around our content, or give it all away.</p> <p>Because of all these pieces coming together, we are able to move at our own comfortable pace with no barriers to entry. We can choose to be consumers or contributors to this space.</p> <p>And NuGet is the critical, now widely-used, cog in the wheel to make it happen.</p> <h3><font style="font-weight: bold">More to Come</font></h3> <p>While NuGet is already fantastic in new projects, existing projects that need some love and smaller enterprise projects, it’s tough to get it fully going in enterprise scenarios.&nbsp; This is the next focus for the folks working on NuGet, and one they’re <a href="http://furl.ca/rh">taking seriously</a>.</p> <p>Improvements to critical features like NuGet.Server publishing, adding support for authenticated sources, and facilitating CI build products outside the MS domain are all in the works.</p> <h3><font style="font-weight: bold">Now It’s On You</font></h3> <p>For anyone who doubts that you can influence this product, you’re wrong in two ways:</p> <ol> <li><strong>It’s easy to post problems you run into.</strong> If you find something that doesn’t tick the way you like it, post it on the <a href="http://nuget.codeplex.com">project site</a>. If others are running into the same thing, they will vote on it.&nbsp; If there’s enough traction, it’ll get promoted to a work item and someone will implement it.  <li><strong><u>You</u> can implement it</strong>. If it’s a feature/bug/workflow issue that’s really got you hemmed in, you might as well quit yer bitchin’ and get to work. Fork the source, post the patch and request a pull.&nbsp; Done.&nbsp; And then you can go to sleep a less horrible person.</li></ol> <p>And, once you get into this and you find out how easy it is to share code, you might get the inkling to share some of yours.&nbsp; It’s free and easy to publish to the <a href="http://nuget.org/">NuGet site</a>, and you can do some pretty interesting things with your packages during the execution of you installation or initialization <a href="http://oldblog.jameschambers.com/blog/powershell-script-examples-for-nuget-packages">scripts</a>.</p> <h3><font style="font-weight: bold">Your Turn</font></h3> <p>There are so many examples out there of <a href="http://oldblog.jameschambers.com/blog/nuget-presentation-follow-up">great pacakges</a> ready to use for all kinds of project types and scenarios. There is simply no reason for a developer to put off learning how to use this tool, especially because it’s going to take you all of 10 minutes. Folks, that is less time than it will take you to go and find code that you want to use and get it integrated into your project.</p> <p>Though some folks have been using it for months, others have been hesitant to explore it enough to fully understand what it can do for them. Hopefully, hitting this 1,000,000 package mark will wake them up.</p> <p>After all, the only effort required to try NuGet in a safe environment is this:</p> <p><font size="3" face="Courier"><strong>File –&gt; New Project</strong></font></p> <p>So, go on. I’ll wait here while you do it.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1101</wp:post_id>
		<wp:post_date>2011-06-22 18:36:00</wp:post_date>
		<wp:post_date_gmt>2011-06-22 18:36:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nuget-reaches-1-000-000-package-downloads</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="develop-meta"><![CDATA[Develop Meta]]></category>
		<category domain="post_tag" nicename="nuget"><![CDATA[NuGet]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4013331138]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>NuGet Presentation Follow-Up</title>
		<link>http://jameschambers.com/2011/06/nuget-presentation-follow-up/</link>
		<pubDate>Sun, 19 Jun 2011 18:37:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=1111</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I received an email from one of the folks at the NuGet talk last night asking about some of the packages we had a look at and I said I’d post a quick list, along with a few others that were handy to have around.</p> <ul> <li><a href="http://nuget.org/List/Packages/jQuery">jQuery</a>, <a href="http://nuget.org/List/Packages/jQuery.UI.Combined">jQuery.UI</a> &amp; <a href="http://nuget.org/List/Packages/jQuery.Validation">jQuery.Validation</a> – these are all in the new MVC3 templates by default, but you can use the Package Manager Console in VS2010 to update them to the latest version (along with the vsdoc file).&nbsp; You can also easily add them to existing projects.  <li><a href="http://nuget.org/List/Packages/EntityFramework">EntityFramework</a> (EFCodeFirst) – with the CodeFirst bits now built into EntityFramework we are able to quickly and easily define POCO classes and let the framework do the heavy lifting…kinda like scaffolding for databases.  <li><a href="http://nuget.org/List/Packages/Modernizr">Modernizr</a> – old browsers suck, but Modernizr makes them suck a loss less.&nbsp; It also exposes the presence of all the modern functionality of the client’s browser (missing or not) via boolean values, allowing us to degrade our functionality gracefully.  <li><a href="http://nuget.org/List/Packages/Glimpse">Glimpse</a> – What? Client side debugging for ASP.NET MVC? Ohhh yeah. Glimpse lets you dive deep on both sides of the request and response, letting you get a ‘glimpse’ of what happened when you made a call.&nbsp; Support for MVC, Ajax now, and more coming soon.  <li><a href="http://nuget.org/List/Packages/Pluralizer.Mvc">Pluralizer</a> – A simple but elegant solution that lets you contextually set up strings to be pluralized based on the count of the collection you pass it.  <li><a href="http://nuget.org/List/Packages/jQuery.ie9ify">jQuery.ie9ify</a> – Helps you add site pinning features and set up things like notifications, icons and the like.&nbsp; A must have for installed user bases (like intranets) where you can standardize on a browser, or where your user base is large enough that adding extras for those on IE9 is worth your time.&nbsp; </li></ul> <p>Also, Scott Hanselman has started an NPoW – “NuGet Package of the Week” – posting series on his blog. You can <a href="http://www.hanselman.com/blog/CategoryView.aspx?category=NuGetPOW">check that out here</a>.</p> <p>Finally, I fielded a couple of questions about init, install and unistall scripts when creating your own packages for NuGet.&nbsp; Here’s <a href="http://oldblog.jameschambers.com/blog/powershell-script-examples-for-nuget-packages">my post</a> on script tips and PowerShell commands commonly used in other packages.</p> <p>Thanks again all for coming out!&nbsp; See you June 24th at HTML5 Fest in Winnipeg!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1111</wp:post_id>
		<wp:post_date>2011-06-19 18:37:00</wp:post_date>
		<wp:post_date_gmt>2011-06-19 18:37:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nuget-presentation-follow-up</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>
		<category domain="post_tag" nicename="nuget"><![CDATA[NuGet]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3915947891]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Introduction to NuGet &#8211; My Talk at Prairie Dev Con 2011</title>
		<link>http://jameschambers.com/2011/06/introduction-to-nuget-ndash-my-talk-at-prairie-dev-con-2011/</link>
		<pubDate>Wed, 15 Jun 2011 18:38:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=1121</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Another great session today with some good questions and some great conversation afterwards.&nbsp; Thanks peeps!</p> <p>Here’s some great resources to get you plugged in with NuGet and to help take those first few steps:</p> <ul> <li><a href="http://www.nuget.org">http://www.nuget.org</a> – the official package source  <li><a href="http://docs.nuget.org">http://docs.nuget.org</a> – the basics of working with NuGet and creating your own packages  <li><a href="http://nuget.codeplex.org">http://nuget.codeplex.org</a> – the open source code for the NuGet project, as well as key downloads (NuGet.exe and the Package Explorer)</li></ul> <p>&nbsp;</p> <p>You can also follow the NuGet conversation on Twitter (#NuGet), or join in the <a href="http://chat.stackoverflow.com/rooms/867/nuget">StackOverflow.com chat room</a> on the subject.</p> <p>And as always, feel free to send me a note with any questions you may have.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1121</wp:post_id>
		<wp:post_date>2011-06-15 18:38:00</wp:post_date>
		<wp:post_date_gmt>2011-06-15 18:38:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>introduction-to-nuget-ndash-my-talk-at-prairie-dev-con-2011</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>
		<category domain="post_tag" nicename="nuget"><![CDATA[NuGet]]></category>
		<category domain="post_tag" nicename="prairiedevcon"><![CDATA[PrairieDevCon]]></category>
		<category domain="post_tag" nicename="visual-studio-2010"><![CDATA[Visual Studio 2010]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3915951523]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>When Things Go Wrong During a Presentation</title>
		<link>http://jameschambers.com/2011/06/when-things-go-wrong-during-a-presentation/</link>
		<pubDate>Mon, 13 Jun 2011 18:40:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=1141</guid>
		<description></description>
		<content:encoded><![CDATA[<p>So what do you do when you have a room full of people and your presentation goes awry? Make sure you know your domain before you go in.</p> <p>I just finished my talk on the spanky, fun Asp.Net Mvc Framework, and I thought I’d prepared well prior to going in.&nbsp; Aside from a few minor snags – also called teaching opportunities <img class="wlEmoticon wlEmoticon-winkingsmile" style="border-top-style: none; border-left-style: none; border-bottom-style: none; border-right-style: none" alt="Winking smile" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/When-Things-Go-Wrong-During-a-Presentati_EFCD/wlEmoticon-winkingsmile_2.png">&nbsp; – things ran rather smoothly and the initial feedback on the session was quite positive.&nbsp; Running into errors and exceptions is okay, in my mind. We’re programmers after all and 90% of what we do is wrong ;o)&nbsp; I’ve been through most scenarios, especially in this stack, and so I know how to respond.</p> <p>But then it hit me: a curve ball from the audience (thanks for the questions by the way!) took me a little off course (which I love) and I tried to figure out what the problem was (which, completely topical to my talk, was scary).&nbsp; And, after all, it’s important to know what color scary things are so that you can identify them easier.&nbsp; </p> <p>Sad face here: I hit an exception I hadn’t seen before.&nbsp; On stage. In front of 50 awesomely patient folks.&nbsp; <strong>*sigh*</strong></p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/When-Things-Go-Wrong-During-a-Presentati_EFCD/image_2.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/When-Things-Go-Wrong-During-a-Presentati_EFCD/image_thumb.png" width="346" height="221"></a></p> <p>That image reads:</p> <blockquote> <p>Model compatibility cannot be checked because the database does not contain model metadata. Ensure that IncludeMetadataConvention has been added to the DbModelBuilder conventions.</p></blockquote> <p>Unfortunately I was a little too nervous to tackle it beyond a couple of quick attempts, but the solution was quite simple: <strong>drop the database and let the EntityFramework recreate it.</strong></p> <h3>What Went Wrong</h3> <p>I think the biggest issue was that I was playing with multiple changes to the model classes during the presentation.&nbsp; The metadata associated with the database, stored in its own table where the db is created, got out of sync with what was in the database and what was in the classes in the project.&nbsp; Not a biggy, but frustrating just the same. </p> <p>I will note again that this isn’t something you’d likely run into late in a project, only early on. </p> <p>Thankfully at the front end of a project we are okay with dropping data, especially when we’re working with something like EF Code First…if we really want data in those tables after we make changes we can easily create our own db initializer and add seed data.</p> <p>Hopefully, when you run into this kind of error, you won’t be on stage. ;o)&nbsp; At least, not without having first read this post.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1141</wp:post_id>
		<wp:post_date>2011-06-13 18:40:00</wp:post_date>
		<wp:post_date_gmt>2011-06-13 18:40:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>when-things-go-wrong-during-a-presentation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>
		<category domain="category" nicename="develop-meta"><![CDATA[Develop Meta]]></category>
		<category domain="post_tag" nicename="entity-framework"><![CDATA[Entity Framework]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3951612051]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Prairie Dev Con 2011 - My talk on ASP.NET MVC</title>
		<link>http://jameschambers.com/2011/06/prairie-dev-con-2011-my-talk-on-asp-net-mvc/</link>
		<pubDate>Mon, 13 Jun 2011 18:42:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=1151</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Thanks!</p> <p><img src="http://oldblog.jameschambers.com/Media/Default/PageImages/WP_000407.jpg" width="329" height="247"></p> <p>You know a conference is going well when you the connections start happening faster than you can manage to keep up with them.&nbsp; There were a lot of great people at the session today and a lot of great conversation afterwards.</p> <p>Thanks to all who attended!&nbsp; I'll be doing another session tomorrow on NuGet and will post back here with all the critical links.</p> <p>If you're looking to get started, make sure you check out this post I did with a ton of material for <a href="http://oldblog.jameschambers.com/blog/best-links-to-getting-started-in-asp.net-mvc3">ASP.NET MVC</a>.</p> <p>Also, for those of you who were excited about the MvcScaffolding bits, be sure to check out my <a href="http://oldblog.jameschambers.com/blog/mvcscaffolding-joy-ride-with-ef-code-first">Joyride</a> post on the same.</p> <p>See you tomorrow!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1151</wp:post_id>
		<wp:post_date>2011-06-13 18:42:00</wp:post_date>
		<wp:post_date_gmt>2011-06-13 18:42:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>prairie-dev-con-2011-my-talk-on-asp-net-mvc</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[Asp.Net MVC]]></category>
		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>
	</item>
	<item>
		<title>PowerShell Script Examples for NuGet Packages</title>
		<link>http://jameschambers.com/2011/06/powershell-script-examples-for-nuget-packages/</link>
		<pubDate>Thu, 09 Jun 2011 18:44:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=1161</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Here is a list of PowerShell examples taken right from the packages you might already be using, some have more detailed explanation or examples elsewhere on the webs. This list intends to be a quick reference for common operations when building install scripts for your NuGet packages.&nbsp; Keep the list handy for writing install for your own packages.</p> <h5><em><strong>2011.06.21 Updates</strong></em></h5> <h3><strong>Import Modules (Using External Scripts for Commands)</strong>&nbsp;</h3><pre>&nbsp;&nbsp;&nbsp; Import-Module (Join-Path $toolsPath commands.psm1)</pre>
<p>Going forward, the <a href="http://stackoverflow.com/questions/5406406/do-helper-functions-in-a-nuget-packages-init-ps1-have-to-be-global" target="_blank">recommended convention</a> (from David Fowler) for extending the package manager console is to put your scripts into seperate files (modules) in your tools directory, and to import them with a command similar to above in your init.ps1 file.</p>
<h3><span style="font-weight: bold">Insert Text into Current Document at Cursor</span></h3>
<p><em>from <a href="nuget.org/List/Packages/jQuery.Farbtastic">jQuery.Farbtastic</a><br></em><span style="font-family: 'Lucida Console'" face="Lucida Console">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $dte.ActiveDocument.Selection.Insert($scriptTemplate)</span></p>
<p>Use this to write out text to the current cursor location in the active document. A little caution with this one: You might want to check the lenth of the selection first (write-host $dte<span style="color: teal">.</span>ActiveDocument<span style="color: teal">.</span>Selection<span style="color: teal">.</span>Text<span style="color: teal">.</span>Length) becuase this will overwrite any selected text.&nbsp; </p>
<h3><strong>Copy Text to the Clipboard</strong></h3>
<p><em>from </em><a href="nuget.org/List/Packages/jQuery.Farbtastic"><em>jQuery.Farbtastic</em></a><br><span style="font-family: 'Lucida Console'" face="Lucida Console">&nbsp;&nbsp;&nbsp; $mystring | clip</span></p>
<p>In this snippet all we're doing is 'piping' the string into the clipboard.&nbsp; Be mindful that this would overwrite anything already there.</p>
<p>There are lots of interesting ways you can add functionality to your package and the package manager console.&nbsp; I found, in exploring useful ways to get code to the user, that there may be scenarios where just pushing generated code to the clipboard may not be a bad option.</p>
<h3><strong>Discover IDE Manipulation and Automation Commands</strong></h3><pre style="font-family: consolas; background: white; color: black">    $dte <span style="color: teal">|</span> Get-Member
</pre>
<p>This ouputs the list of exposed properties and methods in the DTE object.&nbsp; This is super handy for fiddling with the IDE from the Package Manager Console, even inside a test project, to figure out what is available.&nbsp; Besides, self discovery is more interesting than <a href="http://msdn.microsoft.com/en-us/library/1xt0ezx9.aspx">reading the docs</a> ;)&nbsp; You can also try plugging around with the properties exposed, such as $dte<span style="color: teal">.</span>Solution <span style="color: teal">|</span> Get-Member, for example.</p>
<hr>

<h3><span style="font-weight: bold">Read Properties from Visual Studio Objects</span></h3>
<p><em><a href="http://nuget.org/List/Packages/SqlServerCompact" target="_blank">from SqlServerCompact</a><br></em><span style="font-family: 'Lucida Console'" face="Lucida Console">&nbsp;&nbsp;&nbsp; $currentPostBuildCmd = $project.Properties.Item("PostBuildEvent").Value</span></p>
<p>This gets the post build command from the specified project item.</p>
<p>&nbsp;</p>
<h3><span style="font-weight: bold">Loop Through All Installed Packages</span></h3>
<p><a href="http://nuget.org/List/Packages/NuGetPackageUpdater/1.0.0.0" target="_blank"><em>from NuGetPackageUpdater</em></a><br><span style="font-family: 'Lucida Console'" face="Lucida Console">&nbsp;&nbsp;&nbsp; foreach ($package in get-package) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; write-host "Package $($package.Id) is installed"<br>&nbsp;&nbsp;&nbsp; }</span></p>
<p>This loops through all packages that are installed on the currently targetted project.</p>
<p>&nbsp;</p>
<h3><span style="font-weight: bold">Loop Through All Projects in the Solution</span></h3>
<p><a href="http://nuget.org/List/Packages/NuGetPackageUpdater/1.0.0.0" target="_blank"><em>from NuGetPackageUpdater</em></a><br><span style="font-family: 'Lucida Console'" face="Lucida Console">&nbsp;&nbsp;&nbsp; foreach ($proj in get-project -all) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; write-host "Project $($proj.Name) is in this solution."<br>&nbsp;&nbsp;&nbsp; }</span></p>
<p>This outputs the name of each project in the solution in the package manager console. You can use get-project to retrieve the name of the currently targetted project.</p>
<p>&nbsp;</p>
<h3><span style="font-weight: bold">Delete an Item in a Project</span></h3>
<p><a href="http://nuget.org/List/Packages/MvcScaffolding" target="_blank"><em>from MvcScaffolding</em></a><br><span style="font-family: 'Lucida Console'" face="Lucida Console">&nbsp;&nbsp;&nbsp; Get-ProjectItem "foo.txt" | %{ $_.Delete() }<br></span><span style="font-family: 'Lucida Console'" face="Lucida Console">&nbsp;</span>or<br><span style="font-family: 'Lucida Console'" face="Lucida Console">&nbsp;</span><span style="font-family: 'Lucida Console'" face="Lucida Console">&nbsp;&nbsp; Get-ProjectItem "InstallationDummyFile.txt" -Project $projectName | %{ $_.Delete() }</span></p>
<p>This gets the specified file from the current project and 'pipes' it into the next command, which is a call to delete.&nbsp; The "$_" is a token representing the passed-in object.&nbsp; If you have the name of the project and want to target that project you can also use the -Project argument as in the second example.</p>
<p><em>Note: Get-ProjectItem was available when I tried this out because MvcScaffolding has a dependency on T4Scaffolding, which exposes a PowerShell cmdlet of the same name.&nbsp; I will post on this later to show you how to get this to work in your own packages, but if you intend to use scaffolding anyways there's no reason your package can't depend on T4 for now.</em></p>
<p>&nbsp;</p>
<h3><strong>Remove a Reference from a Project</strong></h3>
<p><em>from <a href="http://nuget.org/List/Packages/Machine.Specifications">Machine.Specifications</a></em></p><pre>&nbsp;&nbsp;&nbsp; $project.Object.References | Where-Object { $_.Name -eq 'NameOfReference' } | ForEach-Object { $_.Remove() }</pre>
<p>If you're looking to purge references that you know are safe to do so when you're uninstalling, you can do so as above. This uses a filter to selectively remove a reference from the project in question.&nbsp; You could also use a foreach at the project level and remove the reference from each project (rather than using the $project param that NuGet feeds you when uninstall is executed).</p>
<p>Alternatively, rather than assuming your user hasn't taken on the dependency in another fashion in their project, you could simply use Write-Host and let them know that if they aren't using the references you've added (during your install) that it is now safe to remove them from the project in question.</p>
<p>&nbsp;</p>
<h3><strong>Loop Through All Project Items</strong></h3>
<p><em>from <a href="http://oldblog.jameschambers.com">MisterJames</a></em></p><pre>&nbsp;&nbsp;&nbsp; ForEach ($item in $project.ProjectItems) { Write-Host $item.Name } </pre>
<p>This will print out the list of all items in the specified project. You can use $item for project item operations per the VS automation docs (see link at bottom), here, I've just output the name.</p>
<p>&nbsp;</p>
<h3><span style="font-weight: bold">Open a File from the Tools Folder</span></h3>
<p><a href="http://nuget.org/List/Packages/EFCodeFirst" target="_blank"><em>from EfCodeFirst</em></a><em>&nbsp;</em>(note that this is a legacy package no longer used)</p>
<p><span style="font-family: 'Lucida Console'" face="Lucida Console">&nbsp;&nbsp;&nbsp; $dte.ItemOperations.OpenFile($toolsPath + '\EFCodeFirstReadMe.txt')</span></p>
<p>This one is pretty straightforward.&nbsp; $toolsPath is passed into our script and is available as a parameter throughout.&nbsp; Here, we're simply calling $dte.ItemOperations.OpenFile to open the file specified.</p>
<p>&nbsp;</p>
<h3><span style="font-weight: bold">Opening a File from the Content Folder</span></h3>
<p><em><a href="http://nuget.org/List/Packages/Glimpse.Mvc3" target="_blank">from Glimpse.Mvc3</a></em><br><span style="font-family: 'Lucida Console'" face="Lucida Console">&nbsp;&nbsp;&nbsp; $path = [System.IO.Path]<br>&nbsp;&nbsp;&nbsp; $readmefile = $path::Combine($path::GetDirectoryName($project.FileName), "App_Readme\glimpse.mvc3.readme.txt")<br>&nbsp;&nbsp;&nbsp; $DTE.ExecuteCommand("File.OpenFile", $readmefile)</span></p>
<p>In this example there are two variables at play, an System.IO.Path reference&nbsp; and a string being built to open a file.&nbsp; In the final line, $DTE.ExecuteCommand is called to invoke Visual Studio's "open file" command in a different way from EFCodeFirst, with the filename passed in as a parameter.&nbsp; Note that you could also use [System.IO.Path]::Combine directly; $path is just a reference/alias to access the static method in a more readible manner.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h3><span style="font-weight: bold">Calling Other Scripts in the Current Scope</span></h3>
<p><strong>&nbsp;</strong><em><a href="http://nuget.org/List/Packages/SqlServerCompact" target="_blank">from SqlServerCompact</a><br></em><span style="font-family: 'Lucida Console'" face="Lucida Console">&nbsp;&nbsp;&nbsp; . (Join-Path $toolsPath "GetSqlCEPostBuildCmd.ps1")</span></p>
<p>PowerShell will execute the specified file in the context of the current script when you do a "dot-space-brackets".&nbsp; In this example, we need to concatenate the name of our script, which is located in the package tools directory, to the tools path and then make the call.&nbsp; At this point, any vars you set up will be available to you in the current script.&nbsp; If you want to break out and build a list of files or - in this case - set up a variable with post-build information, this is your vehicle.</p>
<p>&nbsp;</p>
<p>Exploring On Your Own</p>
<p>If you want to accomplish something that you don’t see here but have seen in another package it’s pretty easy to see what they’ve done.&nbsp; You need to get yourself a copy of the <a href="http://nuget.codeplex.com/releases/view/59864" target="_blank">NuGet Package Explorer</a> – also a great tool for building your own packages – and just start pulling down the work that’s out there.</p>
<p><img title="image" style="display: inline" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/2c0f6af1e34b_927A/image_3.png" width="431" height="264"></p>
<p>The best part about using this for exploratory purposes is that it can connect directly to a repository feed.&nbsp; Just pull up File –&gt; Open from Feed… to search or browse packages. The NuGet.org package repository load by default, but you can specify your own.</p>
<p><img title="image" style="display: inline" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/2c0f6af1e34b_927A/image_6.png" width="420" height="313"></p>
<h3>References</h3>
<p>You can dive much deeper, of course, as you have PowerShell in your hands here, controlling the IDE.&nbsp; If you want more information on specifics of any of the ideas at play here, check out the following links:</p>
<ul>
<li><a href="http://docs.nuget.org/docs/reference/package-manager-console-powershell-reference" target="_blank">NuGet PowerShell Reference on docs.NuGet.org</a> 
<li><a href="http://msdn.microsoft.com/en-us/library/envdte.dte.aspx" target="_blank">Visual Studio DTE Reference on MSDN</a> 
<li><a href="http://technet.microsoft.com/en-us/library/ee221100.aspx" target="_blank">Windows PowerShell Reference on TechNet</a> </li></ul>
<p>&nbsp;</p>
<h3>Wrapping Up</h3>
<p>Know any other good samples?&nbsp; A more straight-forward way to pull something off? Feel free to send me a note so I can add them here, or send questions my way.</p>
<p><a style="display: none" href="http://anyurl.com" rel="tag">CodeProject</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1161</wp:post_id>
		<wp:post_date>2011-06-09 18:44:00</wp:post_date>
		<wp:post_date_gmt>2011-06-09 18:44:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>powershell-script-examples-for-nuget-packages</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="post_tag" nicename="codeproject"><![CDATA[CodeProject]]></category>
		<category domain="post_tag" nicename="nuget"><![CDATA[NuGet]]></category>
		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>
		<category domain="post_tag" nicename="visual-studio-2010"><![CDATA[Visual Studio 2010]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3781193623]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>34311</wp:comment_id>
			<wp:comment_author><![CDATA[Assembly Version Mismatch and Bulk Package Update &laquo; Trailmax Tech]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://tech.trailmax.info/2013/09/assembly-version-mismatch-and-bulk-package-update/</wp:comment_author_url>
			<wp:comment_author_IP>50.87.144.84</wp:comment_author_IP>
			<wp:comment_date>2013-09-11 11:18:21</wp:comment_date>
			<wp:comment_date_gmt>2013-09-11 11:18:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Here is a nice list of PowerShell commands you can use in Visual [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35071</wp:comment_id>
			<wp:comment_author><![CDATA[NuGet: &#8216;Copy to output directory&#8217; set to &#8216;copy always&#8217; | .NET Software Engineering]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.rwassenaar.nl/2014/05/20/nuget-copy-to-output-directory-set-to-copy-always/</wp:comment_author_url>
			<wp:comment_author_IP>212.204.254.10</wp:comment_author_IP>
			<wp:comment_date>2014-05-22 20:48:30</wp:comment_date>
			<wp:comment_date_gmt>2014-05-22 20:48:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] James Chambers has some other good examples of what can be done in these powershell scripts: http://jameschambers.com/2011/06/powershell-script-examples-for-nuget-packages/ [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>39911</wp:comment_id>
			<wp:comment_author><![CDATA[Adrian]]></wp:comment_author>
			<wp:comment_author_email>adrian@adrianpadilla.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>177.249.136.89</wp:comment_author_IP>
			<wp:comment_date>2015-04-08 02:31:56</wp:comment_date>
			<wp:comment_date_gmt>2015-04-08 02:31:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excellent as a cheat sheet! Thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[2036812631]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Oh Yes, NuGet Can!</title>
		<link>http://jameschambers.com/2011/06/oh-yes-nuget-can/</link>
		<pubDate>Thu, 09 Jun 2011 18:46:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=1171</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>Update Via Twitter</h3> <p>I received a message from one of the awesome NuGet folks on Twitter about <a href="http://oldblog.jameschambers.com/blog/real-world-scenarios-working-with-nuget" target="_blank">this post</a> on NuGet real world scenarios:</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Oh-Yes-NuGet-Can_9855/image%5B6%5D_2.png"><img title="image[6]" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image[6]" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Oh-Yes-NuGet-Can_9855/image%5B6%5D_thumb.png" width="543" height="108"></a></p> <p>David is pointing out that if you want to upgrade a package you can first remove its dependencies, which allows you to do so without NuGet unwinding the operation. Thanks to David for this! </p> <p>I responded by saying I’d still like a –ForceUpdate command that would bring all dependencies to the correct version (known as leveling) and have since discovered that such a feature is in the works for NuGet.&nbsp; </p> <p>More good things to come for sure.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1171</wp:post_id>
		<wp:post_date>2011-06-09 18:46:00</wp:post_date>
		<wp:post_date_gmt>2011-06-09 18:46:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>oh-yes-nuget-can</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="category" nicename="develop-meta"><![CDATA[Develop Meta]]></category>
		<category domain="post_tag" nicename="nuget"><![CDATA[NuGet]]></category>
	</item>
	<item>
		<title>Naming the Database Created by EF Code First</title>
		<link>http://jameschambers.com/2011/06/naming-the-database-created-by-ef-code-first/</link>
		<pubDate>Thu, 02 Jun 2011 18:47:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=1181</guid>
		<description></description>
		<content:encoded><![CDATA[<div>If you don’t want to have a database name like:</div> <div><pre>holy.crap.this.is.a.long.name.with.my.whole.namespace.contextname</pre>…then you simply need to name the database.&nbsp; To do this, we need to create the class that inherits from DbContext and call the base constructor to pass in the name. <pre>&nbsp;&nbsp;&nbsp; public class FamilyContext : 

DbContext&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public FamilyContext (): base("FamilyContext") {}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</pre>
<div>&nbsp;</div>
<div>Sweet.&nbsp; So, one other thing to pay attention to then, especially if you’re using MvcScaffolding or other similar tools.&nbsp; If you’ve named your context you’ll need to tell it where you want your entity collections to manifest.&nbsp; For MvcScaffolding in particular, you can use the –DbContext switch and pass in your context name.&nbsp; That looks something like this:</div><pre>Scaffold Controller Family -DbContext Family</pre>
<div>The result is that MvcScaffolding will now look for that type in the target project and add the appropriate code.</div>
<div></div>
<div><pre>    public class FamilyContext : DbContext
    {
        public FamilyContext (): base("FamilyContext") {}
        public DbSet&lt;MyProject.Models.Family&gt; Families { get; set; }     
    }</pre></div>
<div></div>
<div>Hope this helps! </div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1181</wp:post_id>
		<wp:post_date>2011-06-02 18:47:00</wp:post_date>
		<wp:post_date_gmt>2011-06-02 18:47:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>naming-the-database-created-by-ef-code-first</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[Asp.Net MVC]]></category>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="post_tag" nicename="entity-framework"><![CDATA[Entity Framework]]></category>
		<category domain="post_tag" nicename="mvcscaffolding"><![CDATA[MvcScaffolding]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3812263994]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Real World Scenarios Working with NuGet</title>
		<link>http://jameschambers.com/2011/06/real-world-scenarios-working-with-nuget/</link>
		<pubDate>Wed, 01 Jun 2011 18:50:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=1191</guid>
		<description></description>
		<content:encoded><![CDATA[<p>If you’re working with ASP.NET and haven’t made the jump to MVC yet, you have to admit it’s getting harder and harder to <em>not</em> commit.&nbsp; We’ve got some pretty juicy tools on this side of the fence with MVC3, especially when coupled with NuGet and some of the 1600+ open source packages that are already available free of charge.</p> <h2>Installation, Adding and Upgrading Packages</h2> <p>When you use an “Install-Package” command to install a package NuGet runs off first to grab the lastest version of the package from the repository. It “installs” it in the packages folder under your solution:</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Using-NuGet-with-Multiple-Projects_7C58/image_2.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Using-NuGet-with-Multiple-Projects_7C58/image_thumb.png" width="242" height="126"></a></p> <p>It adds entries to your packages.config file in your <strong>target project</strong>:</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Using-NuGet-with-Multiple-Projects_7C58/image_4.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Using-NuGet-with-Multiple-Projects_7C58/image_thumb_1.png" width="361" height="155"></a></p> <p>It may modify your web.config files…</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Using-NuGet-with-Multiple-Projects_7C58/image_10.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Using-NuGet-with-Multiple-Projects_7C58/image_thumb_4.png" width="241" height="183"></a></p> <p>…add project references…</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Using-NuGet-with-Multiple-Projects_7C58/image_8.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Using-NuGet-with-Multiple-Projects_7C58/image_thumb_3.png" width="173" height="183"></a></p> <p>…or files…</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Using-NuGet-with-Multiple-Projects_7C58/image_12.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Using-NuGet-with-Multiple-Projects_7C58/image_thumb_5.png" width="244" height="142"></a></p> <p>…before completing.&nbsp; And if there are other dependencies in the package, those are downloaded and installed as well.&nbsp; You will be notified if there are any conflicts.</p> <p>Updating is a little more tricky because there is no auto-resolution from the console to force all required dependencies to upgrade.&nbsp; To see what I mean, try installing Ie9ify to a new MVC3 project.&nbsp; You have to go through:</p> <ul> <li>an error and rollback on the ie9ify package install…it’s requesting jQuery 1.5.2  <li>you attempt to update jQuery, but it fails because of dependencies  <li>you have to update each package separately (jQuery UI, Validation and vsdoc)  <li>then you update jQuery  <li>then you can install ie9ify </li></ul> <p>Now, you can pass in an –IgnoreDependencies flag, but that doesn’t really help get you out of the water; you’ll still need to update all the other packages and resolve the conflicts manually.</p> <h2>Multiple Projects</h2> <p>Note that if you have more than one project on a solution that NuGet has to have a target for where its action will play out, and I’ve found that this will be the first project added to the solution.&nbsp; So, for example, if you create a blank solution, add a models project and then add an MVC project, you’ll need to retarget your Package Manager Console.</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Using-NuGet-with-Multiple-Projects_7C58/image_14.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Using-NuGet-with-Multiple-Projects_7C58/image_thumb_6.png" width="260" height="79"></a></p> <p>So, not always a necessity, but worth looking at if a package install/update goes south.&nbsp; You will notice this blatantly if you try to update or uninstall a package when you are targeting the wrong project. </p> <p>There are legitimate reasons to target different projects at different times, so this is a great feature to have.&nbsp; It is confusing, however, to have NuGet autocomplete package names for you when you try to tab them out; all packages installed in the solution will appear in the list.</p> <h2>Cleaning Up Post-Uninstall</h2> <p>Actually, I’m surprised at how good a job NuGet does at cleaning up.&nbsp; For instance, if the package adds entries to the project’s app.config or web.config files it will properly remove them for you as well.&nbsp; Same goes if it adds files to your project; they, too, will be removed.&nbsp; Binary references, same deal.</p> <p>There are some instances where an uninstall will report a clean job, but you’ll still need to do a little work.&nbsp; Here are a few examples:</p> <ul> <li>If you rename a file that’s been added by a package, it will remain in your project  <li>You can change the value component of web.config and app.config files and NuGet will still remove them cleanly, but if you change the name/key of the entry, it’ll stick around  <li>Dependencies aren’t removed when you remove a package, even if they were installed with the package in the first place. </li></ul> <h2>Rounding Up</h2> <p>While there is still some room to grow, NuGet has become quite the little workhorse in the last few builds.&nbsp; With the power of Power Shell behind the scenes most third party integration can be automated by package contributors.&nbsp; Not only is there a growing library of community-sourced packages out there, but you create your own as well, or even create your own repository internally and take advantage of easy project setup company wide.</p> <p>Questions about NuGet? Just ask! I’d be happy to help work through anything you’re trying to tackle.</p> <p><a style="display: none" href="http://anyurl.com" rel="tag">CodeProject</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1191</wp:post_id>
		<wp:post_date>2011-06-01 18:50:00</wp:post_date>
		<wp:post_date_gmt>2011-06-01 18:50:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>real-world-scenarios-working-with-nuget</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="post_tag" nicename="codeproject"><![CDATA[CodeProject]]></category>
		<category domain="category" nicename="develop-meta"><![CDATA[Develop Meta]]></category>
		<category domain="post_tag" nicename="nuget"><![CDATA[NuGet]]></category>
		<category domain="post_tag" nicename="visual-studio-2010"><![CDATA[Visual Studio 2010]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3858016104]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Best Links to Getting Started in ASP.NET MVC3</title>
		<link>http://jameschambers.com/2011/05/best-links-to-getting-started-in-asp-net-mvc3/</link>
		<pubDate>Wed, 04 May 2011 18:51:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=1201</guid>
		<description></description>
		<content:encoded><![CDATA[<p>If you want to spend an afternoon (or weekend) getting your head around what it means to move to ASP.NET MVC3, I’ve compiled a great list of resources that should get you on your way, sprinkled with the odd shameless plug. ;o)</p> <h2><font style="font-weight: bold">Great Web Resources</font></h2> <h3>Bloggers</h3> <p>It wouldn’t be right to start off a list like this without links to the people and places that host the most valuable content and resources on the web for ASP.NET MVC 3. If you’ve worked in MVC before and are comfortable catching up on your own these are the folks you want to be reading.</p> <ul> <li>Scott Guthrie&nbsp; <a href="http://weblogs.asp.net/scottgu/">http://weblogs.asp.net/scottgu/</a>  <li>Steve Sanderson&nbsp;&nbsp; <a href="http://blog.stevensanderson.com/">http://blog.stevensanderson.com/</a>  <li>Scott Hanselman&nbsp;&nbsp; <a href="http://www.hanselman.com/blog/">http://www.hanselman.com/blog/</a>  <li>Brad Wilson&nbsp;&nbsp; <a href="http://bradwilson.typepad.com/">http://bradwilson.typepad.com/</a>  <li>Jon Galloway&nbsp;&nbsp; <a href="http://weblogs.asp.net/jgalloway/archive/tags/ASP.NET+MVC/default.aspx">http://weblogs.asp.net/jgalloway/archive/tags/ASP.NET+MVC/default.aspx</a>  <li>Andrew Nurse&nbsp;&nbsp; <a href="http://vibrantcode.com/">http://vibrantcode.com/</a>  <li>Bertrand Le Roy&nbsp;&nbsp; <a href="http://weblogs.asp.net/bleroy/archive/tags/MVC/default.aspx">http://weblogs.asp.net/bleroy/archive/tags/MVC/default.aspx</a>  <li>Rachel Appel&nbsp;&nbsp; <a href="http://rachelappel.com/">http://rachelappel.com/</a>  <li>Louis DeJardin&nbsp;&nbsp; <a href="http://whereslou.com/">http://whereslou.com/</a>  <li>Rick Anderson&nbsp;&nbsp; <a href="http://blogs.msdn.com/b/rickandy/">http://blogs.msdn.com/b/rickandy/</a></li></ul> <p>&nbsp;</p> <h3>Community Sites</h3> <p>And, of course, here are the sites that keep the content rolling.</p> <ul> <li>ASP.NET MVC Site&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="http://www.asp.net/mvc">http://www.asp.net/mvc</a>  <li>MVC Forum on ASP.NET&nbsp; <a href="http://forums.asp.net/1146.aspx/">http://forums.asp.net/1146.aspx/</a>  <li>StackOverflow on MVC&nbsp; <a href="http://stackoverflow.com/questions/tagged/asp.net-mvc">http://stackoverflow.com/questions/tagged/asp.net-mvc</a></li></ul> <p>&nbsp;</p> <h2><font style="font-weight: bold">Introductory Links</font></h2> <h3>Getting Started</h3> <p>First timer? No problem. Dive into these guys here and find your way around your first few topics and projects.</p> <ul> <li><a href="http://msdn.microsoft.com/en-us/library/dd381412(VS.98).aspx" target="_blank">General Overview</a>  <li><a href="http://www.asp.net/mvc/tutorials/getting-started-with-mvc3-part1-cs" target="_blank">First Project</a>  <li><a href="http://www.asp.net/mvc/tutorials" target="_blank">The ASP.NET Tutorial List</a></li></ul> <h3>The Razor View Engine</h3> <p>Get a better understanding of the new Razor View Engine and wrap your ahead around unwrapping the complexity of notation in views.</p> <ul> <li><a href="http://weblogs.asp.net/scottgu/archive/2010/07/02/introducing-razor.aspx" target="_blank">Introduction</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <li><a href="http://weblogs.asp.net/scottgu/archive/2010/12/15/asp-net-mvc-3-razor-s-and-lt-text-gt-syntax.aspx" target="_blank">Syntax Pointers</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <li><a href="http://weblogs.asp.net/scottgu/archive/2010/10/22/asp-net-mvc-3-layouts.aspx" target="_blank">Layouts (Master Pages for Razor)</a>&nbsp; </li></ul> <h3>Custom HTML Helpers</h3> <p>Lego building blocks for site developers. You can use other folks’ code or build your own.</p> <ul> <li><a href="http://www.asp.net/mvc/tutorials/creating-custom-html-helpers-cs" target="_blank">Creating Custom HTML Helpers</a>&nbsp; <li><a href="http://weblogs.asp.net/scottgu/archive/2011/05/12/asp-net-mvc-3-and-the-helper-syntax-within-razor.aspx" target="_blank">Razor @Helper Syntax</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <li><a href="http://mvchtml5.codeplex.com/" target="_blank">MVC HTML5 Toolkit</a>&nbsp;&nbsp;&nbsp;&nbsp; </li></ul> <p>&nbsp;</p> <h2><font style="font-weight: bold">Deeper Dives</font></h2> <h3>Walkthroughs</h3> <p>See how some of the finer details work and build some sample applications.</p> <ul> <li><a href="http://www.asp.net/mvc/tutorials/mvc-music-store-part-1" target="_blank">Music Store</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <li><a href="http://theycallmemrjames.blogspot.com/2010/05/aspnet-mvc-and-jquery-part-4-advanced.html" target="_blank">Model Binding</a>  <li><a href="http://www.codeproject.com/KB/aspnet/RazorMaps.aspx" target="_blank">Google Maps in Razor</a>&nbsp;</li></ul> <h3>Videos and Video Tutorials</h3> <p>Get some pop corn, a pop and sit back.&nbsp; <strong><u>Caution:</u></strong> The “Stack of Love” session might require a week of abdominal warm-up exercises to make sure you have appropriate laughing capabilities prior to viewing.&nbsp; Try to avoid taking sips whenever you sense an incoming joke.</p> <ul> <li><a href="http://channel9.msdn.com/Events/MIX/MIX11/FRM02" target="_blank">MS Web Stack of Love</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <li><a href="http://www.asp.net/mvc/pluralsight" target="_blank">Free Pluralsight Training</a>&nbsp; <li><a href="http://channel9.msdn.com/shows/Going+Deep/Andrew-Nurse-Inside-Razor/" target="_blank">Going Deep: Inside Razor</a>&nbsp;&nbsp;&nbsp; <li><a href="http://weblogs.asp.net/rashid/archive/2009/04/01/asp-net-mvc-best-practices-part-1.aspx">ASP.NET MVC Best Practices</a> (and <a href="http://weblogs.asp.net/rashid/archive/2009/04/03/asp-net-mvc-best-practices-part-2.aspx">part 2</a>)</li></ul> <p>&nbsp;</p> <h2><font style="font-weight: bold">Other Resources</font></h2> <p>Did I miss something critical? Is there a blogger out there that helped get you through a bind? Let me know and I’ll keep the list updated.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1201</wp:post_id>
		<wp:post_date>2011-05-04 18:51:00</wp:post_date>
		<wp:post_date_gmt>2011-05-04 18:51:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>best-links-to-getting-started-in-asp-net-mvc3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[Asp.Net MVC]]></category>
		<category domain="category" nicename="develop-meta"><![CDATA[Develop Meta]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3882333865]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>MVC 3 Tools Refresh Released</title>
		<link>http://jameschambers.com/2011/05/mvc-3-tools-refresh-released/</link>
		<pubDate>Wed, 04 May 2011 18:52:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=1211</guid>
		<description></description>
		<content:encoded><![CDATA[<p>At MIX11 we saw a few of the then soon-to-be-released tools coming in the refresh for MVC 3 in Visual Studio 2010. Today, those tools have been posted.</p> <p>Here’s <a href="http://weblogs.asp.net/scottgu/archive/2011/05/03/asp-net-mvc-3-tools-update.aspx" target="_blank">Scott Guthrie’s post</a> on the matter.</p> <p>You can download the bits <a href="http://www.asp.net/mvc" target="_blank">here</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1211</wp:post_id>
		<wp:post_date>2011-05-04 18:52:00</wp:post_date>
		<wp:post_date_gmt>2011-05-04 18:52:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mvc-3-tools-refresh-released</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="develop-meta"><![CDATA[Develop Meta]]></category>
		<category domain="post_tag" nicename="mvc"><![CDATA[MVC]]></category>
		<category domain="post_tag" nicename="visual-studio-2010"><![CDATA[Visual Studio 2010]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3805936591]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>MvcScaffolding Joy Ride with EF Code First</title>
		<link>http://jameschambers.com/2011/05/mvcscaffolding-joy-ride-with-ef-code-first/</link>
		<pubDate>Tue, 03 May 2011 18:52:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=1221</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Okay, so here’s the situation: you are creating a web-based application that contains a series of tables, one of which has multiple one-to-one relationships with another table.</p> <p>In your view, you’ll obviously have a series of drop downs that let you pick entities from the second table. This ensures data integrity, but is a bit of a PITA to wire up.</p> <p>How do we put it all together?</p> <h3>A Quick Overview</h3> <p>All this work is really not that bad with the latest tools refresh, and only takes a few lines of code.&nbsp; Let’s get there step by step and see how to make it happen.&nbsp; I’m going to make a Movie entity and a FavoriteMovieProfile entity.&nbsp; Here’s how she goes:</p> <ol> <li>Create a new ASP.NET MVC3 Internet Application.  <li>Use NuGet to install MvcScaffolding.  <li>Create a Movie class. POCO here, nothing special.  <li>Create a FavoriteMovieProfile class, with a bit of EF flavor.  <li>Scaffold our controllers with the repository pattern from the Package Manager Console.  <li>Extend the MoviesContext and create our own initializer for the database.  <li>Rescaffold the controllers. </li></ol> <h3>Let’s Get Started – Project Setup</h3> <p>Okay, fire up Visual Studio 2010 and make sure you have the <a href="http://www.microsoft.com/downloads/en/details.aspx?FamilyID=75568aa6-8107-475d-948a-ef22627e57a5" target="_blank">latest bits</a>. Create a new project and select the type ASP.NET MVC 3 Web Application. I named my project Movies.Web and called the solution Movies.</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/MvcScaffolding-Joy-Ride-with-EF-Code-Fir_A43C/image_2.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/MvcScaffolding-Joy-Ride-with-EF-Code-Fir_A43C/image_thumb.png" width="488" height="284"></a></p> <p>Create an Internet application, Razor view engine and HTML5, because that’s the in thing to do.</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/MvcScaffolding-Joy-Ride-with-EF-Code-Fir_A43C/image_4.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/MvcScaffolding-Joy-Ride-with-EF-Code-Fir_A43C/image_thumb_1.png" width="367" height="338"></a></p> <p>Go to the Package Manager Console and type the following:</p><pre>Install-Package MvcScaffolding</pre>
<p>This goes out to the interwebs and grabs the latest version of this toolkit, along with the required bits to generate the scaffolding.&nbsp; Going about its business, the Package Manager copies the packages to your project directory, updates your packages.config file and executes the required integration steps to light up the new references in your project.</p>
<p>Sweet.</p>
<h3>Creating the Classes</h3>
<p>Okay, right click on your Models folder and create a new class called Schema. When the file opens, delete the class definition (I just want the file named schema). Add the following using statement at the top of the file:</p><pre>using System.ComponentModel.DataAnnotations</pre>
<p>We’re going to add two classes to the namespace, the first is Movie:</p><pre>public class Movie
{&nbsp;&nbsp;&nbsp;&nbsp; <br>public int MovieID { get; set; }&nbsp;&nbsp;&nbsp;&nbsp; <br>public string Title { get; set; }&nbsp;&nbsp;&nbsp;&nbsp; <br>public string LeadActor { get; set; }&nbsp;&nbsp;&nbsp;&nbsp; <br>public string Director { get; set; }
}</pre>
<p>Next, add in the FavoriteMovieProfile class like so:</p><pre>public class FavoriteMovieProfile 
{&nbsp;&nbsp;&nbsp; <br> public int FavoriteMovieProfileID { get; set; }&nbsp;&nbsp;&nbsp;&nbsp; <br>public string Name { get; set; }&nbsp;&nbsp;&nbsp;&nbsp; <br>public int ComedyID { get; set; }&nbsp;&nbsp;&nbsp;&nbsp; <br>public int HorrorID { get; set; }&nbsp;&nbsp;&nbsp;&nbsp; <br>public int DramaID { get; set; }&nbsp;&nbsp;&nbsp;&nbsp; <br>public int SciFiID { get; set; }&nbsp;&nbsp;&nbsp;&nbsp; <br>public int FlickWithHalleBerryID { get; set; }&nbsp;&nbsp;&nbsp;&nbsp; <br><br>[ForeignKey("ComedyID")] public virtual Movie Comedy { get; set; }&nbsp;&nbsp;&nbsp;&nbsp; <br>[ForeignKey("HorrorID")] public virtual Movie Horror { get; set; }&nbsp;&nbsp;&nbsp;&nbsp; <br>[ForeignKey("DramaID")] public virtual Movie Drama { get; set; }&nbsp;&nbsp;&nbsp;&nbsp; <br>[ForeignKey("SciFiID")] public virtual Movie SciFi { get; set; }&nbsp;&nbsp;&nbsp;&nbsp; <br>[ForeignKey("FlickWithHalleBerryID")] public virtual Movie FlickWithHalleBerry { get; set; }
}</pre>
<p>You’ll notice a little bit of funkiness going on there, but it’s really not that bad once you get your head around it. Let me explain what’s going on.</p>
<p>EF Code First and the MvcScaffolding bits are good and smart, but they still need to know stuff.&nbsp; If we want our Views to light up correctly, MvcScaffolding needs to know how to render the model you’re trying to express.</p>
<p>You can boil the insanity down to a sort of key-pair model here. We need to store the id of the movie in the database but we also want to have the benefit of a rich model that knows about the movie entity being referenced.</p>
<p>Let’s look at just one key-pair sequence isolated from the rest:</p><pre>public int ComedyID { get; set; }
[ForeignKey("ComedyID")] public virtual Movie Comedy { get; set; }</pre>
<p>See, that’s not so bad, right!?</p>
<p>The ComedyID will be persisted to the database, while the Comedy movie object will not. We add the ForeignKey attribute for MvcScaffolding to clear up any confusing it might have mapping the object in its duties. Marking it virtual is a way of saying, “Hey, Mr. EF Code First groovy bits, please keep track of this object for me using the integer field I gave you, but when you load up my model, please include the full movie entity and not just a numerical field. K, thanks!”</p>
<p>Thanks, indeed, Mr. EF Code First groovy bits. Thanks, indeed.</p>
<h3>Scaffold Intending to Fail</h3>
<p>The only reason I want to fail here is to illustrate a current limitation of Code First. We can build up our project very quickly here, so make sure you have a good feel around the solution if you’re new to this so that you understand what’s going on.</p>
<p>Back in the Package Manager Console, type the following:</p><pre>Scaffold Controller Movie -Repository</pre>
<p>This little gem treats you to a coffee break while it creates your CRUD capable controller, your repository, the DB context object you want and fleshes out your views.&nbsp; We’re going to do the same with FavoriteMovieProfile class now:</p><pre>Scaffold Controller FavoriteMovieProfile -Repository</pre>
<p>This does the same thing, but it respects that you already have a context in place and it just updates it as required.</p>
<p>Let’s run the project now and once it’s up, add a /Movies to your URL. The project will seem to run fine at first, but once you hit that movies view you should see this:</p>
<p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/MvcScaffolding-Joy-Ride-with-EF-Code-Fir_A43C/image_7.png" width="524" height="100"></p>
<blockquote>
<p>The database creation succeeded, but the creation of the database objects did not. See InnerException for details.</p></blockquote>
<p>And when we check the inner exception for details…</p>
<blockquote>
<p>Introducing FOREIGN KEY constraint 'FavoriteMovieProfile_Drama' on table 'FavoriteMovieProfiles' may cause cycles or multiple cascade paths. Specify ON DELETE NO ACTION or ON UPDATE NO ACTION, or modify other FOREIGN KEY constraints. <br>Could not create constraint. See previous errors.</p></blockquote>
<p>Ah, yes, that failure I was talking about.&nbsp; So, here’s the deal. EF Code First doesn’t really have an elegant solution for several one-to-one mappings, or at least, not one that can be expressed with the fluent API or attributes alone. SQL Server will whine about trying to create the constraints, so we need to spoon feed it a bit.</p>
<p>I understand that spoon feeding in the future will be baked into EF Code First. Thankfully it’s not that big of a deal.</p>
<h3>A Side-Step to Clean Up</h3>
<p>Code First means that we get our data model for free, without having to create a database. The schema is implied through our object definitions, the attributes we provide, and any additional directions we throw at it through the fluent API.</p>
<p>For me, because I’m not using an SDF, the database was created (or at least, it was attempted to be created) in SQL Server Express, which I have running locally. We need to clean that up a bit.</p>
<p>While we’re about to employ a method that will clean up the database independently and automatically, we had a fail here and the metadata required to track changes was not correctly written to the database. You will need to manually delete the database at this time. If you’re looking, it’ll be named ProjectName.Models.DataContext (with appropriate nomenclature, mine was Movies.Web.Models.MoviesWebContext).</p>
<p>Go ahead. I’ll wait for you here to finish.</p>
<h3>Extending our Movies Data Context</h3>
<p>Once you remove the comments and add a little brevity to the model names, our MoviesWebContext class (found in the models folder) should look like this:</p><pre>public class MoviesWebContext : DbContext
{&nbsp;&nbsp;&nbsp;&nbsp; <br>public DbSet&lt;Movie&gt; Movies { get; set; }&nbsp;&nbsp;&nbsp;&nbsp; <br>public DbSet&lt;FavoriteMovieProfile&gt; FavoriteMovieProfiles { get; set; }
}</pre>
<p>We inherit from DbContext and define a couple of entity sets, each containing the models that we’ve scaffolded so far.&nbsp; To this class, we’re going to override a method from our base class and put in a bit of our own helpers to get that database created more smoothly.</p>
<p><span style="font-family: courier new" face="Courier New">protected override void OnModelCreating(DbModelBuilder modelBuilder) <br>{ <br>&nbsp;&nbsp;&nbsp; // ... <br>}</span></p>
<p>In this method, we’ll add five lines like the following:</p><pre>modelBuilder.Entity&lt;FavoriteMovieProfile&gt;()<br>   .HasRequired(m =&gt; m.Comedy)<br>   .WithMany()<br>   .HasForeignKey(m =&gt; m.ComedyID)<br>   .WillCascadeOnDelete(false);</pre>
<p>You can see the mapping and likely get the idea. We mark the field as required and want to set up the foreign key, which requires the WithMany() call. This sets up a one-to-many relationship (which I mentioned above and will fix below) and also takes care of the cascade error with the false flag.&nbsp; All five lines are as follows:</p><pre><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/MvcScaffolding-Joy-Ride-with-EF-Code-Fir_A43C/image_10.png" width="527" height="237"></pre>
<p>Great, now that that’s out of the way, we have two small things to take care of: creating our own initializer and making sure it’s getting called at the appropriate time by our application.</p>
<h3>Initializing the Database the Cool Way</h3>
<p>Well, not so cool if you actually have real data in there, I suppose, but I digress.</p>
<p>What we’re going to do now is to add one more class to our application (you can just put it in the dbcontext file for now) that inherits from <span style="font-family: courier new" face="Courier New">DropCreateDatabaseIfModelChanges</span>. This is a class that can automatically detect changes to the schema. When it does, it proceeds to drop the DB and recreate it. In this class we override the Seed method and clean up our one-to-one mappings.</p>
<p>The entire class looks like this:</p><pre>public class MoviesDbInitializer : DropCreateDatabaseIfModelChanges&lt;MoviesWebContext&gt;
{&nbsp;&nbsp;&nbsp;&nbsp; <br>	protected override void Seed(MoviesWebContext context)&nbsp;&nbsp;&nbsp;&nbsp; <br>	{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>	context.Database.ExecuteSqlCommand("ALTER TABLE FavoriteMovieProfiles ADD CONSTRAINT unique_Drama UNIQUE(DramaId)");<br>	context.Database.ExecuteSqlCommand("ALTER TABLE FavoriteMovieProfiles ADD CONSTRAINT unique_Comedy UNIQUE(ComedyId)");<br>	context.Database.ExecuteSqlCommand("ALTER TABLE FavoriteMovieProfiles ADD CONSTRAINT unique_HalleBerry UNIQUE(FlickWithHalleBerryId)");&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>	context.Database.ExecuteSqlCommand("ALTER TABLE FavoriteMovieProfiles ADD CONSTRAINT unique_Horror UNIQUE(HorrorId)");&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>	context.Database.ExecuteSqlCommand("ALTER TABLE FavoriteMovieProfiles ADD CONSTRAINT unique_SciFi UNIQUE(SciFiId)");&nbsp;&nbsp;&nbsp;&nbsp; <br>	}
}</pre>
<p>Basically, we’re just executing some SQL commands that take care of the part that EF can’t do on it’s own, creating our unique constraints.</p>
<p>Finally, drill into your Global.asax.ca file and add the following line of code in <span style="font-family: courier new" face="Courier New">Application_Start()</span>:</p><pre>Database.SetInitializer(new Movies.Web.Models.MoviesDbInitializer());</pre>
<p>(You’ll also need to add <span style="font-family: courier new" face="Courier New">System.Data.Entity</span> to your using statements.)</p>
<p>Press F5 and add the /movies to your URL to play along.</p>
<p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/MvcScaffolding-Joy-Ride-with-EF-Code-Fir_A43C/image_13.png" width="472" height="285"></p>
<p>Add a couple of movies, then switch up your url to /FavoriteMovieProfiles for kicks. When you create a new one it’ll look like this:</p>
<p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/MvcScaffolding-Joy-Ride-with-EF-Code-Fir_A43C/image_16.png" width="258" height="400"></p>
<p>…and when you save it and return to the grid, it’ll look like this:</p>
<p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/MvcScaffolding-Joy-Ride-with-EF-Code-Fir_A43C/image_19.png" width="619" height="157"></p>
<p>Very nice.&nbsp; Only thing missing is “melo” in front of “Drama”.</p>
<h3>Wrapping Up</h3>
<p>This wasn’t hard at all, once we had the bits in place we needed.&nbsp; We are talking about less than 30 lines of code here, and this isn’t the simplest of models. Powerful stuff.</p>
<p>The ASP.NET MVC Framework is getting better with each iteration as it continues to add functionality, convention and integration points with external libraries, even those from the open source community.</p>
<p>The addition of NuGet to our toolkit, while not yet perfect, is still a huge help and makes adding third-party resources a breeze. </p>
<p>The Swiss Army Knife of this trip is obviously the MvcScaffolding, which kicks out that boiler plate code that we’ve all come to be able to write in our sleep (but, obviously, it’s much more fun to have a tool do it).</p>
<p>And hey, I’m no tool.</p>
<p>To read more on this, visit:</p>
<ul>
<li><a href="http://weblogs.asp.net/manavi/default.aspx">Morteza Manavi</a> 
<li><a href="http://blog.stevensanderson.com">Steven Sanderson</a> 
<li><a href="http://weblogs.asp.net/scottgu/">Scott Guthrie</a> 
<li><a href="http://www.hanselman.com/blog/">Scott Hanselman</a> </li></ul>
<p>These guys all have MVC coverage and infos on MvcScaffolding.</p>
<p>Cheers.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1221</wp:post_id>
		<wp:post_date>2011-05-03 18:52:00</wp:post_date>
		<wp:post_date_gmt>2011-05-03 18:52:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mvcscaffolding-joy-ride-with-ef-code-first</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="post_tag" nicename="mvc"><![CDATA[MVC]]></category>
		<category domain="post_tag" nicename="mvcscaffolding"><![CDATA[MvcScaffolding]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3787351731]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Moving Database Files in MS SQL Server</title>
		<link>http://jameschambers.com/2011/04/moving-database-files-in-ms-sql-server/</link>
		<pubDate>Thu, 21 Apr 2011 20:00:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=1251</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I was running into a disk space problem that was only revealed when I tried to restore a production database to the test environment that was several GBs bigger.</p> <p>I updated the DB’s files to point to a new drive on the server, moved the files and restarted the service.&nbsp; All good.</p> <p>Then, as I attempted to restore the database, I kept getting files pace errors.</p> <p>The problem? I had forgot to alter the restoration file location and SQL Management Studio was trying to use the original file path.</p> <p>Here’s where you make the change:</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Moving-Database-Files-in-MS-SQL-Server_1474D/image_3.png" width="511" height="208"></p> <p>When you go to Tasks –&gt; Restore –&gt; Database, select the Options page and change the target paths for your database files.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1251</wp:post_id>
		<wp:post_date>2011-04-21 20:00:00</wp:post_date>
		<wp:post_date_gmt>2011-04-21 20:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>moving-database-files-in-ms-sql-server</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="develop-meta"><![CDATA[Develop Meta]]></category>
		<category domain="post_tag" nicename="sql-server"><![CDATA[SQL Server]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3882328161]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>MIX11: The Decompression Session</title>
		<link>http://jameschambers.com/2011/04/mix11-the-decompression-session/</link>
		<pubDate>Sat, 16 Apr 2011 20:02:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=1261</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I am back from <a href="http://live.visitmix.com/">MIX11</a> in the sunny state of Nevada, an annual event hosted by Microsoft. This year’s conference was located at Mandalay Bay at the south end of the strip in Las Vegas.&nbsp; MIX gave me a much needed energy refresh with some great speakers, some great content and wonderful conversation with folks in the industry.</p> <p>As a result of the recharge I am moving my blog to this site and returning to working in and with the community to help other developers move their skillsets forward and get excited about what we’re able to do with the tools and resources available to us as software developers.</p> <p>Want to know what it’s like to be at MIX? </p> <h2>Registration</h2> <p>This was actually one of my only complaints about the event.&nbsp; I arrived in Las Vegas a day early and made my way to the registration area of the conference.&nbsp; Security would have none of that (they were, in fact, quite rude and condescending) and told me to come back Monday at 9AM.&nbsp; </p> <p>Luckily I didn’t listen to them. Here’s what I saw when I arrived at 8AM.</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/88256bd9063b_1326F/image_3.png" width="637" height="303"></p> <p>And when I got through the line, a 40 minute adventure, the line extended out past the lounge areas, the “Commons”, around the corner and out to the escalators.&nbsp; It was nuts. At the onset, it seemed as though there were only 4 lines moving, with over 35 people in each line and hundreds more moving in by the hour.</p> <p>Registration staff were friendly and once they got their groove on, they seemed to chew through the line rather quickly.</p> <h2>Boot Camps</h2> <p>While there was added cost to the conference when attending the boot camps, I think that this was some of the most valuable learning at the show.&nbsp; In particular, there were some great tandem presentations where you were able to gain some great insight into the workflow between designers and developers. This was especially handy for those of us who wear both roles.</p> <h2>Keynotes</h2> <p>On Tuesday and Wednesday the day began with a packed house event in the main ballroom at the conference center. Tuesday was the IE9 and HTML5 show, focusing on native-like applications on Windows and reinforcing the speed of IE9 versus the competition with some live demos.&nbsp; While some of the content was impressive, the presenters were a little scattered and seemed to flip in and out of semi-random topics (for example, the Samsung laptop mention). </p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/88256bd9063b_1326F/image_13.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/88256bd9063b_1326F/image_thumb_5.png" width="569" height="397"></a></p> <p>Wednesday’s keynote was nuts.&nbsp; We saw IE9 running on Windows Phone 7 and it <em>destroyed</em> the iPhone 4.&nbsp; I’m talking about hardware accelerated rendering support that took HTML5 samples and trounced Safari by a performance factor of 15 to 1. We got treated to a ton of information on the new APIs for WP7 and some interesting, exciting and at times hilarious demos of some of the tech available to us and coming in the near future. We should all have our hands on the new WP7 bits within weeks, as well as the SDK for the Kinect.</p> <p>Which is why they gave <strong><em>every</em></strong> attendee a free Kinect.&nbsp; Sweet!</p> <h2>Sessions</h2> <p>I was able to maximize my learning in the sessions, especially around web development tooling updates and the UX discussions. Some of the speakers are worth the price of admission for the entire event, and while I’ve seen some epic videos of these guys in the past, you really need to be there to see what happens before and after the taping!</p> <p>The only thing I didn’t care for about the sessions was the organization, presentation and planning materials available to attendees.&nbsp; There were no topical streams, and any particular room could vary greatly in topic from one time slot to the next. The map and session info (printed materials) were not well laid out and lots of folks were wondering trying to find the next session they wanted to attend.</p> <h2>Extra Perks</h2> <p>I was pleased to be invited by Microsoft Canada to the Tao VIP room at the Venetian hotel. Wowsers. Free-flowing bar, very classy appetizers and samples all night, hands-on tech demos, great conversation and face-to-face time with other Canadian developers and Microsoft folks. This was probably the most energizing event for me because of some of the connections I was able to make and the chance to catch up with some folks I hadn’t seen in a while. </p> <h2>The Grub</h2> <p>I have never eaten at any conference or training event like I did at MIX11. The food was incredible. It was professional prepared, presented and served.&nbsp; Though it was buffet style self-service, the staff ushered attendees through the line and you got to the food quickly while temperature was still excellent. There was fish, chicken, beef and vegetarian options (as well as some other specialized menus) and all kinds of fresh fruit, salad, dressings, fixings, sides and the like.&nbsp; I cannot stress enough that most of the food had no business being on a buffet line!</p> <h2>The Haul</h2> <p>Conferences aren’t just about the learning. At MIX this year I learned just how much we geeks love us some free shirts. I literally saw grown men standing on chairs shouting “Me! Me!”.&nbsp; So, yes, of course there was loot! You could get lanyards, t-shirts, hoodies, photo-booth photos, goofy Windows Phone 7 desktop mascots, pens, mouse pads and more. But the real thrill was getting a free Kinect after the keynote on Wednesday.</p> <h2>And, Yes, The Strip</h2> <p>What would a trip to Las Vegas be without a trip down the strip? Here are some of the sights we were able to take in.</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/88256bd9063b_1326F/image_5.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/88256bd9063b_1326F/image_thumb_1.png" width="205" height="152"></a>&nbsp; <a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/88256bd9063b_1326F/image_7.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/88256bd9063b_1326F/image_thumb_2.png" width="198" height="150"></a>&nbsp; <a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/88256bd9063b_1326F/image_9.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/88256bd9063b_1326F/image_thumb_3.png" width="118" height="147"></a>&nbsp;<a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/88256bd9063b_1326F/image_11.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/88256bd9063b_1326F/image_thumb_4.png" width="199" height="147"></a></p> <p>New York, New York, Excalibur, and a couple shots of the Bellagio.</p> <h2>Final Thoughts</h2> <p>I was so fortunate that my wife was able to join me for this event. We’ve been together for over 15 years, but she’s still such a great sport when, environmentally, I have no choice but to geek out. She was able to enjoy herself through the shops and hotels along the strip while I was in conference, but we also got some great nights in together and took advantage of our first trip away from kids since we were married over a decade ago (at least, without the kids!).</p> <p>While this post tried to get you into what MIX was like to attend I haven’t really covered the tech side of what I took in. I am looking forward to development in the weeks ahead and will be writing about some of the great resources that have advanced, been released or will be soon.</p> <p>This conference had a wide enough spectrum to bring in a great cross section of the development community as well as some great minds in design.&nbsp; If you are involved in the UI, UX or supporting backend bits this is a great chance to catch up on the new tech, take a deep dive into the existing tools, see a little more clearly the road ahead and to interact with a great community.</p> <p>Hope to see you there next year!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1261</wp:post_id>
		<wp:post_date>2011-04-16 20:02:00</wp:post_date>
		<wp:post_date_gmt>2011-04-16 20:02:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mix11-the-decompression-session</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="beyond-code"><![CDATA[Beyond Code]]></category>
		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>
		<category domain="post_tag" nicename="mix11"><![CDATA[MIX11]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3882318039]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>New Digs</title>
		<link>http://jameschambers.com/2011/04/new-digs/</link>
		<pubDate>Sat, 16 Apr 2011 20:03:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=1271</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I have been on the Blogger platform for years, but have decided to move over to Orchard so that I can further integrate code samples, pick and choose modules and widgets appropriate to my style and take advantage of (and hopefully contribute to) the already mature community around the Orchard engine.</p> <p>I’m going to ride the default theme for a while as I get my bearings, and I don’t think I’m going to make much effort to port my old posts over to this site.</p> <p>If you’re looking for the old Mister James site, you can find it at <a href="http://theycallmemrjames.blogspot.com">http://theycallmemrjames.blogspot.com</a>.</p> <p>Thanks for joining me!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1271</wp:post_id>
		<wp:post_date>2011-04-16 20:03:00</wp:post_date>
		<wp:post_date_gmt>2011-04-16 20:03:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>new-digs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="develop-meta"><![CDATA[Develop Meta]]></category>
		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3882327453]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>So, You Want to Speak JSON, eh?</title>
		<link>http://jameschambers.com/2011/12/so-you-want-to-speak-json-eh/</link>
		<pubDate>Wed, 21 Dec 2011 18:09:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=871</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I am actively developing on ASP.NET MVC 3 and that has proven very useful to me as I make the switch to developing for Windows Phone 7.</p> <p><em>What?</em>&nbsp; you say <em>That doesn't make any sense!</em></p> <p>To which I reply: embrace the cloud, homeboy.&nbsp; </p> <h2>Okay, Wait a Minute</h2> <p>I know, I know, I just went from JSON to MVC 3 to Windows Phone 7 to the cloud. But, here's the thing: they're all complimentary. </p> <p>If you're looking for the code that makes returning JSON pretty much a freebie, skip ahead. <font face="Lucida Console">Else { BuckleUp(); }</font></p> <p>ASP.NET MVC is great for working with JSON – it supports binding JSON to your model classes natively, even when you're dealing with complex mappings like collections of entities nested in other entities.&nbsp; It's also trivial to return JSON encoded data from your model classes and the result types are native to the framework.&nbsp; It gets even better with LINQ to JSON and the <a href="http://json.codeplex.com/" target="_blank">Json.Net</a> serialization library available on <a href="http://nuget.org/packages/Newtonsoft.Json" target="_blank">NuGet</a>.</p> <p>JSON is lightweight, so it makes it a great candidate for pushing data around in mobile scenarios.&nbsp; If you want to work with anything other than Windows Phone 7 (what? why would you do that?!), then the freebies in the .NET world don't play so nicely and you'll want to jump on the JSON bandwagon.&nbsp; Json.Net works on WP7 as well, so now you're covered for your soon-to-be-awesome Windows Phone app.&nbsp; (By the way...go <a href="http://www.developermovement.com/" target="_blank">join the movement</a> and get a free Xbox, WP7, $500 and more <a href="http://www.developermovement.com/" target="_blank">here</a>, if you're Canadian...publish some apps!).</p> <p>Where does the cloud come into this? Thought you'd never ask.&nbsp; A refresh on the Azure toolkit earlier this year gave us MVC3 deployment templates, so pushing your app out on the web <a href="http://www.asp.net/mvc/overview/deployment/walkthrough-hosting-an-aspnet-mvc-application-on-windows-azure" target="_blank">is simple</a>. Find out more <a href="http://blogs.msdn.com/b/cdndevs/p/canadadoesazure.aspx">http://blogs.msdn.com/b/cdndevs/p/canadadoesazure.aspx</a>.</p> <h2>Speaking JSON</h2> <p>So, you're doing some MVC 3 dev, you (maybe) are hosting out in the cloud, and you want to knock off some low-hanging fruit to turn your controllers and actions into full-fledged JSON participants?&nbsp; I was at a conference recently and saw how easy this was in Ruby on Rails, and figured there had to be a way to do this in MVC.&nbsp; I didn't want to have to write new versions of all my actions just to respond with the <em>same</em> data as JSON.</p> <p>Turns out this is too easy, but first we need to understand a little bit about how controllers and actions work.</p> <p>Incoming requests are handled by the routing framework for us.&nbsp; A request coming in for Home/Index results in an instance of the HomeController getting created and then our Index action (method) being invoked.&nbsp; But did you know that you have the chance to use ActionFilters?&nbsp; If we create our own ActionFilter, we get the chance to modify the parameters coming into the action, we get access to the controller, the HttpContext and more.&nbsp; </p> <p>And that's just on the front end of execution. We get a chance to look at everything again – including the view data – on the back end of execution as well, meaning we can swap out our own result object.&nbsp; Huzzah! We have a vector!</p> <h2>Using the Vector</h2> <p>Here's the plan:</p> <ul> <li>Let the action execute  <li>Check to see if the requesting party was looking for a JSON response, and, if they were,  <li>Create a new JsonResult and push the model data from the action into it</li></ul> <p>&nbsp;</p> <p>Seems simple enough, right? Here's what the implementation looks like (and honestly, there's as much commenting in there as code):</p><pre>namespace Json.ActionFilter
{&nbsp;&nbsp;&nbsp;&nbsp; public class SupportsJson : ActionFilterAttribute&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // we will use the framework default but allow users to override in the constructor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private JsonRequestBehavior _jsonRequestBehavior = JsonRequestBehavior.DenyGet;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public SupportsJson() {}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // if you want to allow GET (lame!) then be my guest...&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public SupportsJson(JsonRequestBehavior behavior)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _jsonRequestBehavior = behavior;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // this happens AFTER the action is executed and BEFORE the result is returned&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // so it's the perfect place to swap out the result object for our JSON one&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public override void OnActionExecuted(ActionExecutedContext filterContext)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // capture the application types&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var applicationTypes = (filterContext.HttpContext.Request.AcceptTypes ?? new string[] {""});&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // check to see if json is in there&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (applicationTypes.Contains("application/json"))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // swap out the result if they requested Json&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var model = filterContext.Controller.ViewData.Model;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; filterContext.Result = new JsonResult { Data = model, JsonRequestBehavior = _jsonRequestBehavior };&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp;&nbsp;&nbsp;&nbsp; }
}</pre>
<p>Bam! And just like that we have us some JSON capabilities!</p>
<h2>Using the ActionFilter</h2>
<p>Here's an existing ActionResult I have:</p><pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public ActionResult FooCookies(string term)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PeopleRepository repository = new PeopleRepository();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var people = repository.GetPeople(term);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return View(people);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</pre>
<p>How much work is it to have it return JSON instead?</p><pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [SupportsJson]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public ActionResult FooCookies(string term)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PeopleRepository repository = new PeopleRepository();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var people = repository.GetPeople(term);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return View(people);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</pre>
<p>Tada! That's right, just add the attribute <font face="Lucida Console">SupportsJson</font> and instantly you can repurpose any action to return JSON from the controller.</p>
<h2>Next Steps</h2>
<p>Hey look, you don't need to be building Windows Phone 7 apps on Azure to take advantage of this.&nbsp; If you're building any site using jQuery or jQuery UI, if you work with other mobile platforms or even building for Windows 8, now is a good time to make sure that your data (and complex entity collections) are JSONable. So, you can start by:</p>
<ul>
<li><font size="4">Learning more about </font><a href="http://www.asp.net/mvc" target="_blank"><font size="4">ASP.NET MVC</font></a> 
<li><font size="4">Experimenting with </font><a href="http://jquery.com/" target="_blank"><font size="4">jQuery</font></a><font size="4"> and </font><a href="http://www.jqueryui.com" target="_blank"><font size="4">jQuery UI</font></a> 
<li><font size="4">Check out Json.Net on </font><a href="http://json.codeplex.com/" target="_blank"><font size="4">CodePlex</font></a><font size="4"> and </font><a href="http://nuget.org/packages/Newtonsoft.Json" target="_blank"><font size="4">NuGet</font></a> 
<li><font size="4">Trying out the </font><a href="http://create.msdn.com/en-ca/" target="_blank"><font size="4">Windows Phone 7</font></a><font size="4"> or </font><a href="http://blogs.msdn.com/b/cdndevs/p/canadadoesazure.aspx" target="_blank"><font size="4">Azure</font></a><font size="4"> toolkits</font></li></ul>
<p><br>Good luck!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>871</wp:post_id>
		<wp:post_date>2011-12-21 18:09:00</wp:post_date>
		<wp:post_date_gmt>2011-12-21 18:09:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>so-you-want-to-speak-json-eh</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
		<category domain="post_tag" nicename="windows-phone"><![CDATA[Windows Phone]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3799125711]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ninjas Unleashed to the Wild</title>
		<link>http://jameschambers.com/2011/11/ninjas-unleashed-to-the-wild/</link>
		<pubDate>Tue, 22 Nov 2011 18:10:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=881</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I want to extend a huge thank you for all who attended my inaugural Asp.Net MVC3 Dojo event.&nbsp; Over a dozen folks came out and slogged away at code as we worked through building a movie review site end-to-end using the MVC Framework, NuGet and one mighty fine IDE, Visual Studio 2010.</p> <p>Some of the things we covered in today's two and a half hour code work-out:</p> <ul> <li>Models, views and controllers (of course!)  <li>Scaffolding and the MvcScaffolding package  <li>jQuery and AJAX in MVC  <li>Partial views  <li>Action filters  <li>Authentication and Authorization  <li>The MVC tool chain  <li>NuGet and little "gems" like jQuery.RateIt and MvcMembership.Mvc  <li>Customizing the output of the scaffolders  <li>EF Code First, data contexts and dbsets  <li>Data annotations  <li>Model binding  <li>JSON and other alternate action return types  <li>...and more </li></ul> <p>&nbsp;</p> <p>We covered a lot of ground, for sure.&nbsp; If you want to have at the reference app with the rest of the code that we weren't quite able to get to, please pop on over to <a href="https://github.com/MisterJames/MovieFu" target="_blank">github</a> and grab a copy of the solution.</p> <p>Looking forward to hearing the feedback and please, feel free to get in touch.</p> <h1>Next Steps</h1> <p>Now that you've gone through File –&gt; New Project, don't stop there.</p> <ul> <li>Make sure you get your IDE up to date  <li>Keep exploring MVC, including MVC 4  <li>Ask questions...  <ul> <li>On the <a href="http://www.linkedin.com/groups/Canadian-Developer-Connection-3398140" target="_blank">Canadian Developer Connection</a> (Linked In)...I keep watch here for web dev questions and am always happy to help out  <li>Here, on my blog <img class="wlEmoticon wlEmoticon-winkingsmile" style="border-top-style: none; border-left-style: none; border-bottom-style: none; border-right-style: none" alt="Winking smile" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Ninjas-Unleashed-to-the-Wild_1378A/wlEmoticon-winkingsmile_2.png">  <li>Ask on <a href="http://www.twitter.com/canadianjames" target="_blank">Twitter</a> with the #aspnetmvc hash tag  <li>Or on a community site you're already comfortable with</li></ul> <li>Have a good browse over at <a href="http://nuget.org/" target="_blank">nuget.org</a> and find packages that will simplify your development </li></ul> <p>&nbsp;</p> <p>Thanks again!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>881</wp:post_id>
		<wp:post_date>2011-11-22 18:10:00</wp:post_date>
		<wp:post_date_gmt>2011-11-22 18:10:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ninjas-unleashed-to-the-wild</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>
		<category domain="post_tag" nicename="mvc"><![CDATA[MVC]]></category>
		<category domain="post_tag" nicename="mvcscaffolding"><![CDATA[MvcScaffolding]]></category>
		<category domain="post_tag" nicename="prairiedevcon"><![CDATA[PrairieDevCon]]></category>
		<category domain="post_tag" nicename="speaking"><![CDATA[Speaking]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3812622655]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ASP.NET MVC 101/WPG</title>
		<link>http://jameschambers.com/2011/11/asp-net-mvc-101-wpg/</link>
		<pubDate>Mon, 21 Nov 2011 18:11:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=891</guid>
		<description></description>
		<content:encoded><![CDATA[<p>It's great to be speaking in my stomping grounds and to be able to share a little about the ASP.NET MVC Framework while I'm here at Prairie Dev Con 2011 Winnipeg.&nbsp; </p> <h1>Surviving the Boom!</h1> <p>Yikes. Talk about a presenter's nightmare! In the <a href="http://www.irongeek.com/i.php?page=reviews/dell-xp-mini-displayport-projector-fix" target="_blank">perfect storm of technology fail</a>, my particular combination of laptop make and model, the Apple mini-displayport adapter and a wonky projector worked together to try to stop the presentation from happening at all.</p> <p>Thanks especially to D'Arcy Lussier for making a last minute schedule change and squeezing me back in.&nbsp; There were about 50 people on board for the session with great questions and lots of interest.&nbsp; Please keep the feedback coming and stay tuned for lots more info on MVC 4 here in my scratching grounds.</p> <p>As for diving deeper, join me tomorrow for a two-hour Dojo-style dive into MVC3 and we'll get your feet wet.&nbsp; Bring your laptops!</p> <p>Here's a couple of links for you to help transition from what we talked about today in session to your own projects in your IDE:</p> <ul> <li><a href="http://oldblog.jameschambers.com/blog/best-links-to-getting-started-in-asp.net-mvc3" target="_blank">MVC "Getting Started" Best Links</a>  <li><a href="http://oldblog.jameschambers.com/blog/questions-about-the-asp.net-mvc-3-framework" target="_blank">Common Questions on MVC3 Development</a>  <li><a href="http://oldblog.jameschambers.com/blog/current-development-must-haves-for-asp.net-mvc-3" target="_blank">Must-Have Dev Tools for ASP.NET MVC3 Developers</a></li></ul> <p>&nbsp;</p> <p>Thanks again everyone for joining me and I look forward to seeing you at the Dojo session tomorrow.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>891</wp:post_id>
		<wp:post_date>2011-11-21 18:11:00</wp:post_date>
		<wp:post_date_gmt>2011-11-21 18:11:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>asp-net-mvc-101-wpg</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[Asp.Net MVC]]></category>
		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>
		<category domain="post_tag" nicename="prairiedevcon"><![CDATA[PrairieDevCon]]></category>
		<category domain="post_tag" nicename="winnipeg"><![CDATA[Winnipeg]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3968246558]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Prairie Dev Con - The Windows Phone 7 Conference App</title>
		<link>http://jameschambers.com/2011/11/prairie-dev-con-ndash-the-windows-phone-7-conference-app/</link>
		<pubDate>Tue, 15 Nov 2011 18:13:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=901</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I have published my version of the <a href="http://www.prairiedevcon.com">Prairie Dev Con</a> conference app out to the Windows Phone Marketplace, which you can browse or invoke an install from <a href="http://www.windowsphone.com/en-US/apps/8e74279f-c4ab-43a6-bff3-a1a4ba1a8514">here</a>. I am going to write a little at a high level about the experience, then get into some meatier posts down the road.</p> <h1>Timeline</h1> <p>It took ten days to build. Actually, it was more like two flights, a few hours in TO Pearson airport, one late night and an after-supper-code-crunch. I wish I had used some more agile tricks and principles to help pull through this project (some great conversations with <a href="http://twitter.com/#!/srogalsky">Steve</a> and <a href="http://twitter.com/#!/davidalpert">David</a> over the last few months about Agile have been a solid influence).&nbsp; It certainly helped that <a href="http://twitter.com/#!/davidalpert">David</a> and <a href="http://twitter.com/#!/abarylko">Amir</a> had already built the JSON services, so my responsibilities were simply in being a consumer.</p> <h1><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: right; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" align="right" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Prairie-Dev-Con--The-Windows-Phone-7-Con_871C/image_3.png" width="294" height="477">The Tech That Made it Tick</h1> <ul> <li>MVVM Light Toolkit – this was a God-send. Seriously, it made visual binding in Expression Blend so easy. I put my time in the trenches hand-bombing XAML in the past. I think everyone should know XAML inside and out if you want to build WP7 apps, but once you do...man alive. Laurent, I'm buying you a drink!  <li>Silverlight Toolkit for Windows Phone – This gem adds a bunch of controls to the designer's tool chest.&nbsp; I made use of the page transitions and the hub tiles. I wasn't able to get a good thing going with the context menu - I was trying to use it on data-bound items and there was too much friction there to use it without pain.  <li>SQL CE and LINQ – Yum. Though I had a few struggles with many-to-many relationships (I'll explain later) this makes working with relational data so simple. I was going to go with custom serialization but at the last minute threw together a spike solution and committed.&nbsp; It was also good to exercise some of the Mango functionality.  <li>JSON.net – This little library chews through JSON data and does an excellent job of deserialization without object mapping.  <li>Visual Studio 2010 – Best development environment on the planet. Period.  <li>Expression Blend – As I mentioned, I've earned my stripes in raw XAML, so I have no problem using the right tool for the right job. While the markup it creates is still a little verbose (and you have to cajole it into using best practices) Expression Blend makes such quick work of templating, databinding and making your app look like a big bowl of awesomesauce. With cherries.  <li>Marketplace Test Kit – this is a handy utility that plugs into VS2010 when you install the phone SDK. It has some automated tests, makes sure your images are in check, then gives you the skinny on what you need to do to get your app approved.&nbsp; This is the kind of <em>brutal transparency </em>that app developers deserve and other vendors (*cough* Apple *cough*) would do good to imitate. </li></ul> <p>&nbsp;</p> <p>This was a fun app to build. I got to touch (and dive into) a good variety of technical elements. I'm a little sick in the head, in that I like when things break. I tend to find that when they do break you get that exciting rush of running down the rabbit hole to see what makes things tick.</p> <h1>Friction Points – Things I Don't/Didn't Like</h1> <h2>Navigation and User Experience</h2> <p>The back stack of NavigationService helps to maintain a consistent feel across the whole UI, across the whole phone. Microsoft is fighting for this, recommending this and I agree with it for the most part. In my app, though, I ran into this UX problem; consider the following:</p> <ul> <li>User clicks on the speakers tile  <li>They click on a speaker  <li>They click on a session  <li>They save the session (which navigates to the sessions page again)  <li>They go to another session  <li>They click back (which returns them to the session list) </li></ul> <p><br>Now, to get to the "home" screen, they still have to click back 4 times.&nbsp; Which is gross.&nbsp; I "solved" this by adding a "return" button in the application bar of the session list, but I want to study this more and see if it's a design problem.&nbsp; The thing is, until you want to move backwards, the app seems easy and fluid to move through speakers and sessions and I don't want to break that.</p> <h2>Many-to-Many Relationships in SQL CE</h2> <p>Another hang up (for a couple hours, on the plane with no internet access, boo!) was with the many-to-many relationships in SQL CE. I have "sessions" and "tags". Tags have several different sessions and sessions can have more than one tag.&nbsp; In the mobile version of code-first, you have to be more explicit about these relationships, something I missed originally.&nbsp; I'll put a post together on this.</p> <h2>Blend and Build Configurations</h2> <p>This one is completely obvious once you get what's going on, yet will make you pull out your hair if you don't. And I don't have a lot of hair to begin with.</p> <p>I was switching between Release, Debug and a config I created called "Trial".&nbsp; Once you get in the pattern of flowing back and forth between VS 2010 and Blend, you have to remember that Blend only reads from your Debug directory. For example, if you're building in Release config changing parts of your ViewModel in VS and then flipping over to Blend to wire up the UI, the changes just don't show up when you're trying to bind.&nbsp; Just be aware of this, if you're using multiple build configurations.</p> <p>Again, completely obvious, just not at 2 in the morning.</p> <h2>My Own Threading Design</h2> <p>I rushed this piece and didn't think this through. As a result, I had to create a bunch of events rather than using existing messaging facilities and even then, I didn't get the UI responsive. I'm redesigning this piece.</p> <h1>Awesomeness – Things that Worked Really Well</h1> <h2>MVVM Light Toolkit and Expression Blend</h2> <p>I can't stress enough how quickly things come together when you're using "Blendable" view models.&nbsp; This app was very much an experiment as to where those pieces fit and where code should live (as evidenced in the source), but visualizing data is just so easy with this marriage.</p> <h2>JSON.Net</h2> <p>While I originally missed the LINQ-to-JSON support, I've started playing with this and it's great. In my current build I had to smack together a bunch of DTO objects that could easily be used by JSON.Net, then I crafted up my real model objects and did a mapping.&nbsp; I know now about the LINQ support and will be using that to replace my hackiness in my psuedo-DAL</p> <h2>Visual Studio 2010 and the Mango SDK</h2> <p>Folks, if you're developing on any other mobile platform, your tools aren't as good. I don't rightly care if that offends you. I've used the iOS and Android toolset (even with folks more well versed than I) and they've not shown me a better end-to-end experience. I've put up a challenge on Twitter for Android developers to do a head-to-head tool comparison at a conference with no bites.&nbsp; I'm talking everything from New Project to the emulator all the way through to the Marketplace Readiness test kit.&nbsp; It's all there, and I can effortlessly switch between Blend and VS.&nbsp; The SDK is strong, close to the metal, and fully integrated into Visual Studio. It's what it should be.</p> <h1>And, The Project is Going Open Source!</h1> <p>That's right, even in it's half-baked bits right now, I'm pushing it up to Git.&nbsp; <a href="http://twitter.com/#!/abarylko">Amir</a> has promised that the code will not be used to judge me <img class="wlEmoticon wlEmoticon-winkingsmile" style="border-top-style: none; border-left-style: none; border-bottom-style: none; border-right-style: none" alt="Winking smile" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Prairie-Dev-Con--The-Windows-Phone-7-Con_871C/wlEmoticon-winkingsmile_2.png"> so I'm trusting that he'll hold true to that. There are no tests, the view models are inconsistent, I'm not making full use of the JSON tools and my templates are crafted quite differently from one view to the next.&nbsp; Simply put: This code will not appear in it's current form on my resume <img class="wlEmoticon wlEmoticon-winkingsmile" style="border-top-style: none; border-left-style: none; border-bottom-style: none; border-right-style: none" alt="Winking smile" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Prairie-Dev-Con--The-Windows-Phone-7-Con_871C/wlEmoticon-winkingsmile_2.png">.</p> <h1>And For You, the Reader</h1> <p>Well, surf over <a href="http://www.windowsphone.com/en-US/apps/8e74279f-c4ab-43a6-bff3-a1a4ba1a8514">here</a> and try it out! I would love feedback on what conference attendees would like to see in an app.</p> <p>Equip yourself with <a href="http://create.msdn.com/en-ca/home/getting_started">the dev tools</a> from MSDN.</p> <p>Familiarize yourself with <a href="http://www.json.org/">JSON</a>.&nbsp; Grab a copy of <a href="http://json.codeplex.com/">JSON.NET</a>.</p> <p>And start building apps!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>901</wp:post_id>
		<wp:post_date>2011-11-15 18:13:00</wp:post_date>
		<wp:post_date_gmt>2011-11-15 18:13:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>prairie-dev-con-ndash-the-windows-phone-7-conference-app</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>
		<category domain="post_tag" nicename="prairiedevcon"><![CDATA[PrairieDevCon]]></category>
		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>
		<category domain="post_tag" nicename="windows-phone"><![CDATA[Windows Phone]]></category>
	</item>
	<item>
		<title>Errors With AdControl in Windows Phone 7.1 (Retail 7.5)</title>
		<link>http://jameschambers.com/2011/11/errors-with-adcontrol-in-windows-phone-7-1-retail-7-5/</link>
		<pubDate>Mon, 07 Nov 2011 18:14:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=911</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I recently implemented the AdControl in the trial version of an app I've got in the marketplace. It is remarkable how easy they've made it to add ads to your app, with the Microsoft Advertising ASK baked right into the Windows Phone 7.1 SDK.</p> <p>Unfortunately, I couldn't get the app displaying ads. I assumed there was something wrong with the way that I was implementing it, sent a couple emails out and went about finishing the other features I was working on. The error I was getting was:</p> <blockquote> <p align="left">A first chance exception of type 'Microsoft.Advertising.Mobile.Shared.AdException' occurred in Microsoft.Advertising.Mobile.dll</p></blockquote> <p>No detail, wrapping the control code I was using to add the control to the page with a try block produced no results, so I moved on.&nbsp; Unfortunately, as the ad was not appearing, I forgot that I had stubbed it in and published the update to the marketplace.&nbsp; Oops.</p> <p>When I saw the update appear in the Marketplace, I installed the app and...there were the ads.&nbsp; In the paid version.&nbsp; Oops.</p> <h3>Check Your Manifest at the Door</h3> <p>Wait a minute! Everything I've read says that if you can't see ads in the debugger that the ads won't show up on the live app. So what gives?</p> <p>In looking for help on the error, I hit the SDK documentation where I stumbled on the control's <a href="http://msdn.microsoft.com/en-us/library/hh495454(v=MSADS.20).aspx">events</a>, where I found the ErrorOccurred event.&nbsp; This little beauty solved all my problems.&nbsp; Subscribing to this event – as easy as <font color="#666666" face="Lucida Console">yourAdControl.ErrorOccurred += [tab] [tab]</font> – and checking the properties on the exception provided the details on my problem: I was missing the ID_CAP_IDENTITY_USER declaration in my application manifest.</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/203c741d6e15_11BF2/image_2.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/203c741d6e15_11BF2/image_thumb.png" width="631" height="75"></a></p> <h3>So Why Did It Work on the Live App?</h3> <p>Ah, right...when you submit your app to the Marketplace, Microsoft kindly builds your manifest for you with all the correct capabilities.&nbsp; If you have extras, they take them out. If you don't have the ones you need, they inject them.</p> <p>So, when you accidently publish your app with the AdControl in it, but you're missing the capabilities from your manifest, fear not! The App Hub publishing process will take care of everything.&nbsp; </p> <p>Just try to remember to avoid pushing out your app with ads in the paid version.</p> <h3>Going Forward</h3> <p>So, here's some things you should do when using the AdControl:</p> <ul> <li>Familiarize yourself with SDK if you're wondering about monetizing your app.&nbsp; It's super simple.  <li>Make sure you're properly registered with Pub Center and follow the instructions they give.&nbsp; It's straightforward.  <li>Add an event handler to the AdControl.ErrorOccured event. If you run into any issues with the control, it'll set you straight.</li></ul> <p>&nbsp;</p> <p>Good luck!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>911</wp:post_id>
		<wp:post_date>2011-11-07 18:14:00</wp:post_date>
		<wp:post_date_gmt>2011-11-07 18:14:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>errors-with-adcontrol-in-windows-phone-7-1-retail-7-5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="post_tag" nicename="windows-phone"><![CDATA[Windows Phone]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3785283002]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CustomBinding on Service Reference Results in TransportBindingElement Error</title>
		<link>http://jameschambers.com/2011/10/custombinding-on-service-reference-results-in-transportbindingelement-error/</link>
		<pubDate>Wed, 12 Oct 2011 18:15:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=921</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I’m coding an ASP.NET MVC 3 web site in Visual Studio 2010.&nbsp; I added a service reference to a SOAP 1.2 version of a web service and started updating my code (I was using a SOAP 1.1 endpoint previously).</p> <p>Unfortunately the switchover wasn’t as clean as I had hoped. The first method I changed resulted in an error, even on a call that appeared identical to the previous version. The error message I received was:</p> <blockquote> <p><em>The CustomBinding on the ServiceEndpoint with contract 'SubscriberServices' lacks a TransportBindingElement.&nbsp; Every binding must have at least one binding element that derives from TransportBindingElement</em>.</p></blockquote> <p>…which looked like this:</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/c2efd7958743_EA38/image_2.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/c2efd7958743_EA38/image_thumb.png" width="244" height="146"></a></p> <p>For the quick fix, head to the end of this article.&nbsp; Keep reading if you want to know what’s going on.</p> <h3>What Was Going On?</h3> <p>The two things that gave me the strongest clues where “CustomBinding” and “TransportBindingElement”, but for different reasons.&nbsp; CustomBinding was a little unexpected as the service was added via HTTP. I guess I always assumed that it would be using an HTTP binding? The other piece suggested a derivative of the TransportBindingElement, which according to <a href="http://msdn.microsoft.com/en-us/library/system.servicemodel.channels.transportbindingelement.aspx">MSDN</a> is an abstract base class.</p> <h3>Off to Our Config File</h3> <p>Actually, at this point, I wanted less noise, so I quickly created a console app and added references to both services.&nbsp; The differences were, at this point, fairly obvious. The 1.1 version of the service <em>was</em> using a basicHttpBinding element (which I was expecting), whereas the 1.2 service was using a custom binding:</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/c2efd7958743_EA38/image_4.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/c2efd7958743_EA38/image_thumb_1.png" width="491" height="308"></a></p> <p>So, what we’re looking at is trying to get the custom binding to know which transport we want to use. This is something that is implicit in the basicHttpBinding but needs to be explicitly set for customBindings.</p> <h3>The Fix</h3> <p>Following the links on the TransportBindingElement will lead us to the <a href="http://msdn.microsoft.com/en-us/library/system.servicemodel.channels.httptransportbindingelement.aspx">httpTransportbindingElement</a>, which has both code and config file samples.&nbsp; Adding a short and simple section to the binding did the trick; all I needed was an httpTransport element in the customBinding\binding element. The updated config section looked like this with the MSDN sample config injected:</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/c2efd7958743_EA38/image_8.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/c2efd7958743_EA38/image_thumb_3.png" width="463" height="204"></a></p> <p><a href="http://msdn.microsoft.com/en-us/library/ms405872.aspx">Further reading</a> shows that all the properties set in the MSDN example are actually all defaults, which means that our httpTransport element can simply be reduced to a single, self-closing tag:</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/c2efd7958743_EA38/image_10.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/c2efd7958743_EA38/image_thumb_4.png" width="467" height="173"></a></p> <p>Great!</p> <h3>Quick Recap</h3> <p>So, in short, if you’re using a SOAP 1.2 service reference, or any service reference that requires the use of a custom binding, make sure you’ve added a TransportBindingElement (such as httpTransport) to your config file or in your code.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>921</wp:post_id>
		<wp:post_date>2011-10-12 18:15:00</wp:post_date>
		<wp:post_date_gmt>2011-10-12 18:15:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>custombinding-on-service-reference-results-in-transportbindingelement-error</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[Asp.Net MVC]]></category>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="post_tag" nicename="soap"><![CDATA[SOAP]]></category>
		<category domain="post_tag" nicename="visual-studio-2010"><![CDATA[Visual Studio 2010]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3795992640]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Setting up ASP.NET MVC 3 to work with jQuery UI 1.9</title>
		<link>http://jameschambers.com/2011/10/setting-up-asp-net-mvc-3-to-work-with-jquery-ui-1-9/</link>
		<pubDate>Thu, 06 Oct 2011 18:16:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=931</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote> <p>Caution: I don't recommend trying this in a production environment. The branch of jQuery UI I'm using in this series is not considered stable and is not meant for prod releases.&nbsp; You can, however, learn about the new features in the UI library and stretch your development capabilities!</p></blockquote> <h3>The New and Juicy Bits</h3> <p>jQuery UI continues to impress. The development team's commitment to extensibility means that their own widgets are up for review at each release, and even at each milestone of a release.&nbsp; The great thing about the modularity in jQuery UI is that you can build your own widgets or customize the existing ones with the very parts used to build the core set in the first place. </p> <p>But, before you even have to venture in that direction, you already have the ability to work with the many themes (or roll your own!) to make it look and feel the way you want to.</p> <p>Focusing on stability and flexibility in the 1.9 build, here are some of the important bits that will be surfacing in this release of jQuery UI:</p> <ul> <li>Improved, tested code in many of the existing widgets  <li>Much better accessibility accross the suite (for disabled users/browsers)  <li>Revisited the API design on a number of widgets (Button, Dialog, Position, ProgressBar, Slider, Tabs)  <li>Improved collision detection on Position and added a new flipfit mode  <li>A new version of Theme Roller, the download builder and the web site  <li>New widgets: Tooltip, Spinner, Menu and Menubar </li></ul> <p>&nbsp;</p> <p>Here's the descriptions of the new Widgets from the horse's mouth:</p> <ul> <li><strong>Tooltip</strong>: A tooltip is a small overlay that sits over the main page that can be used to provide content or functionality that does not need to be always visible.  <li><strong>Spinner</strong>: A spinner (stepper) is a simple widget that allows users to increment or decrement the current text box value without having to input it manually.  <li><strong>Menu</strong>: Menu transform a list of anchors into a widget with mouse and keyboard support for selecting an item.  <li><strong>Menubar</strong>: A horizontal menu with nested vertical flyout menus for each menu item. </li></ul> <p>&nbsp;</p> <h3>Getting jQuery UI 1.9</h3> <p><br>While I'm a huge fan of the integrated package manager in VS2010, you're not going to find these bits on Nuget.&nbsp; You're going to either need to follow the links from the <a href="http://blog.jqueryui.com/2011/09/jquery-ui-1-9-milestone-6-spinner-2/">Milestone 6 post</a> or grab the bits directly from <a href="http://jquery-ui.googlecode.com/files/jquery-ui-1.9m6.zip">googlecode.com</a>.</p> <p>Once you grab the zip, unpack it and have a look at the contents.</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Using-jQuery-UI-1.9-With-ASP.NET-MVC-3_BF3D/image_6.png" width="292" height="209"></p> <p>Pretty much everything we're going to need will be in the UI and Themes directories.&nbsp; If you're not familiar with jQuery UI, the Themes directory is where all the CSS is stored for making the entire UI has a consistant look-and-feel.&nbsp; UI is where all the code exists for all components. </p> <p>You have the choice of building up your own set of functionality for the widgets you're using by including the smaller UI libraries, or you can fire up the full kit with one library.&nbsp; This allows the bandwidth-concerned developer the opportunity to choose lighter weight code files (or even compile only the needed scripts into a minified script of their own creation).</p> <p>As an example, if you wanted to make use of the new spinner, you'd need to include:</p> <ul> <li>jquery.ui.core.js  <li>jquery.ui.widget.js  <li>jquery.ui.button.js  <li>jquery.ui.spinner.js </li></ul> <p><br>Of course, you would also need to include the relevant CSS files, but with a total weight of 7Kb (and the option to use multiple CDNs out on the web) you might as well just include the full jQuery-ui.css.</p> <h3>Using jQuery UI 1.9 in ASP.NET MVC</h3> <p>I'm going to assume you've done a little MVC work before, if not, hold tight for the walkthrough after the bullet list. I'm using version 3 of the MVC Framework in Visual Studio 2010 SP1.</p> <p>Here's the steps:</p> <ol> <li>Create a new MVC 3 project using the "Empty" template  <li>Delete the "themes" folder in Content  <li>Update jQuery with NuGet  <li>Add jQuery UI 1.9 files to the project ("themes" go in Content and "UI" go in Scripts)  <li>Add a HomeController  <li>Add an Index view for HomeController  <li>Modify the _Layout.cshtml file (your master page) to include jQuery UI and the theme CSS </li></ol> <p>&nbsp;</p> <h2>Walking Through the Setup</h2> <p>Here's the visual play-by-play of that in action.</p> <h3>Creating and Cleaning up the Project</h3> <p>Open up Visual Studio 2010 and select File –&gt; New Project.&nbsp; Create a new ASP.NET MVC 3 Application.</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Using-jQuery-UI-1.9-With-ASP.NET-MVC-3_BF3D/image_3.png" width="448" height="43"></p> <p>Name the project and click OK.&nbsp; Finally, select the “Empty” template from the list and click okay.</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Using-jQuery-UI-1.9-With-ASP.NET-MVC-3_BF3D/image_8.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Using-jQuery-UI-1.9-With-ASP.NET-MVC-3_BF3D/image_thumb_2.png" width="244" height="119"></a></p> <p>Navigate to the content folder at the root of the project and delete it.</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Using-jQuery-UI-1.9-With-ASP.NET-MVC-3_BF3D/image_11.png" width="186" height="117"></p> <h3>Updating jQuery</h3> <p>Next, we need to get the latest version of jQuery so that jQuery UI 1.9 is happy with us.&nbsp; Go to the Package Manager Console and type:</p> <p><span style="font-family: 'Lucida Console'" face="Lucida Console">Update-Package jQuery</span></p> <p>…and you’ll see the following:</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Using-jQuery-UI-1.9-With-ASP.NET-MVC-3_BF3D/image_14.png" width="612" height="114"></p> <p>NuGet (the heart of this console) happily goes off and updates all our dependencies for us.</p> <h3>Adding jQuery UI 1.9</h3> <p>Pop over to that zip folder you downloaded. You’ll need to make sure you’ve extracted all the files. Copy the themes directory, then switch over to VS2010 and paste it into the content folder.&nbsp; Do the same with UI, but paste it as a sub folder into Scripts.</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Using-jQuery-UI-1.9-With-ASP.NET-MVC-3_BF3D/image_20.png" width="212" height="177"></p> <h3>Adding the Controller and View</h3> <p>We’re going to use the tooling in MVC 3 to do the next bit of work for us, in particular, the code generation that creates controllers and views for us.&nbsp; Right-click on the Controller folder, then select <strong>Add –&gt; Controller</strong>.&nbsp; Call it HomeController when the dialog prompts you (this is so that we can take advantage of the default routing rules in MVC).</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Using-jQuery-UI-1.9-With-ASP.NET-MVC-3_BF3D/image_19.png" width="455" height="228"></p> <p>Your HomeController class is automatically generated with the Index action created for you.&nbsp; Right click on the name of this action and select <strong>Add View</strong>. Accept the default name (it picks Index for you because that’s the action you right-clicked).</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Using-jQuery-UI-1.9-With-ASP.NET-MVC-3_BF3D/image_23.png" width="403" height="73"></p> <h3>Updating the Layout</h3> <p>Almost there!&nbsp; All that’s left to do is to adjust our Layout.&nbsp; The _Layout.cshtml file is like a MasterPage from our days of WebForms and we use it to inject our head element containing the script and CSS references. </p> <p>There’s already a jQuery reference there, so that needs to be update to the correct version (1.6.4 as at the time of this writing).&nbsp; You’ll need to add the jquery-ui.css and jquery-ui.js files as well.</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Using-jQuery-UI-1.9-With-ASP.NET-MVC-3_BF3D/image_25.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Using-jQuery-UI-1.9-With-ASP.NET-MVC-3_BF3D/image_thumb_8.png" width="496" height="125"></a></p> <p>For you copy-and-pasters out there:</p><pre>&nbsp;&nbsp;&nbsp; &lt;link href="@Url.Content("~/Content/themes/base/jquery-ui.css")" rel="stylesheet" type="text/css" /&gt;&nbsp;&nbsp;&nbsp;&nbsp; &lt;script src="@Url.Content("~/Scripts/jquery-1.6.4.min.js")" type="text/javascript"&gt;&lt;/script&gt;&nbsp;&nbsp;&nbsp;&nbsp; &lt;script src="@Url.Content("~/Scripts/ui/jquery-ui.js")" type="text/javascript"&gt;&lt;/script&gt;</pre>
<p>And that’s it! You’re all set up to use jQuery UI 1.9.</p>
<h1>A Convenience Disclaimer</h1>
<p>Things are a little drawn out right now because we can't grab the preview bits on NuGet.</p>
<p>Keep in mind that once the updated library is released, you will simply be able to update jQuery UI through the package manager console in Visual Studio 2010. This, in turn, will resolve and update all other dependancies and will also incorporate the vsdoc files needed for IntelliSense.</p>
<div><span class="Apple-style-span" style="font-size: 20px; font-weight: bold">For You To Do</span></div>
<p>Right now we really only have the guts in place to make jQuery UI tick, but it's always good to stay on top of your game.&nbsp; Get your hands dirty now!</p>
<p>1) Download the jQuery UI 1.9 development branch (<a href="http://blog.jqueryui.com/2011/09/jquery-ui-1-9-milestone-6-spinner-2/">Milestone 6 post</a>)</p>
<p>2) Create an ASP.NET MVC 3 project</p>
<p>3) Get jQuery UI 1.9 in your project and start exploring</p>
<p>4) Try jQuery UI 1.9 in a copy of one of your current project and see if anything breaks</p>
<h1>Next Up: Using the Spinner with Entity Metadata</h1>
<p>Now that you’ve got the library in your project, we’re going to have look at some of the controls in more detail. One of the great things in MVC is the insanely simple&nbsp; rendering of templates and data binding, especially when coupled with something like Entity Framework.</p>
<p>Hold on to your hats, in the next segment we’re going to use data annotation attributes to wire up a jQuery UI Spinner widget.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>931</wp:post_id>
		<wp:post_date>2011-10-06 18:16:00</wp:post_date>
		<wp:post_date_gmt>2011-10-06 18:16:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>setting-up-asp-net-mvc-3-to-work-with-jquery-ui-1-9</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[Asp.Net MVC]]></category>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="post_tag" nicename="jquery-ui"><![CDATA[jQuery UI]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3782498596]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Got Windows 7? Here&#039;s an Easy Way to Dual-Boot Windows 8</title>
		<link>http://jameschambers.com/2011/09/got-windows-7-here-rsquo-s-an-easy-way-to-dual-boot-windows-8/</link>
		<pubDate>Wed, 28 Sep 2011 18:17:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=941</guid>
		<description></description>
		<content:encoded><![CDATA[<p>If you want to run Windows 8 in a virtual machine or boot from a VHD there are already instructions out there for that.&nbsp; What about dual-booting on an existing machine?&nbsp; Yeah. That’s why you’re here.</p> <p>I have a good sized HDD and lots of free space on my lap top.&nbsp; I wanted to run Windows 8 on the metal but didn’t want to format (and lose my perfectly good Win7 config) or swap HDDs every time I wanted to switch OSes.&nbsp; I also wanted to try out the Windows 8 graphical boot loader, so here’s what I came up with.</p> <h2>The Process</h2> <p>Here’s what you need:</p> <ol> <li>Download Windows 8 from <a href="http://dev.windows.com">http://dev.windows.com</a>  <li>Either burn the ISO or <a href="http://maketecheasier.com/create-windows-8-usb-boot-disk/2011/09/21">create a bootable USB</a> (I like &amp; used the USB option)  <li>About 40Gb of free space on your drive  <li>Maybe up to 2 hours of passive time (waiting on drive operations) </li></ol> <p>The steps are pretty simple:</p> <ol> <li>Go to computer management and shrink your drive  <li>Reboot your computer with the DVD/USB plugged in </li></ol> <p>And that’s it!</p> <h2>Here’s What It Looks Like</h2> <p>First we’re going to need to open up the Disk Management snap-in. It’s located in Computer Management under <strong>Storage</strong>.&nbsp; You access it by right-clicking on <strong>Computer</strong> in the start menu and selecting <strong>Manage</strong>.</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/e5a9731de44e_743D/image_2.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/e5a9731de44e_743D/image_thumb.png" width="240" height="169"></a></p> <p>If your drive is older or you’re a little crunched for space, right-click your target drive and pull up the properties.&nbsp; You can defrag your drive and possibly shuffle a little more room out of your disk.&nbsp; Note this is completely optional because it looks like shrinking might try to do a lighter version of defrag when it runs.</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/e5a9731de44e_743D/image_6.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/e5a9731de44e_743D/image_thumb_2.png" width="184" height="244"></a></p> <p>Next, right-click the drive and select <strong>Shrink Volume</strong>.</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/e5a9731de44e_743D/image_4.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/e5a9731de44e_743D/image_thumb_1.png" width="338" height="173"></a></p> <p>Windows happily goes off and does it’s best to figure out what it can do for you.&nbsp; Go get a coffee, especially if you have a bigger drive.</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/e5a9731de44e_743D/image_8.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/e5a9731de44e_743D/image_thumb_3.png" width="262" height="74"></a></p> <p>Once that is out of the way, give yourself the space you need for Windows 8.&nbsp; There is a recommended minimum of 25Gb, but if you want to install the full version of Visual Studio 11 you’re going to need at least another 10Gb.&nbsp; I used 40Gb and I'm finding that’s a good size to explore the OS and do a bit of development.</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/e5a9731de44e_743D/image_10.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/e5a9731de44e_743D/image_thumb_4.png" width="307" height="208"></a></p> <p>Click <strong>Shrink</strong> and away you go!&nbsp; Prepare for another wait while it does the dirty work for you.&nbsp; Plug your Windows 8 bootable USB/DVD in the drive and restart your computer, and select your new partition as the destination.</p> <p>After the install, you’ll have dual-boot glory and Windows 8 running on the metal.</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/e5a9731de44e_743D/image_12.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/e5a9731de44e_743D/image_thumb_5.png" width="336" height="228"></a></p> <h2>An Important Tip</h2> <p>If you’re using a USB drive to install (perhaps with DVD, didn’t try) you’re going to want to pull out the key when Windows 8 tries to reboot.&nbsp; Otherwise, it’ll start the process over again. Save yourself 5 minutes of waiting to reboot and pull the USB stick out AFTER your screen goes black and preferably BEFORE your POST finishes.</p> <h2>What’s Next</h2> <ol> <li>Developers, dive in! It’s easy to create new apps using the included Visual Studio 11 Express, or if you have an MSDN subscription, you can grab the full preview of VS11.  <li>Forget what you know about using Windows and just try to embrace Metro. Play with the apps that they’ve included.&nbsp; Look at how those apps integrate with each other, and figure out where it’s appropriate for your app to expose Share or Search contracts.  <li>Try to rethink an app or part of an app you’ve recently worked on and design it for Metro. It’s a different paradigm and we need to think about things that perhaps weren’t always in our domain as Windows developers (application activation &amp; state, connectivity/network availability, and more importantly style). </li></ol> <p>&nbsp;</p> <p>Good luck with your dual boot!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>941</wp:post_id>
		<wp:post_date>2011-09-28 18:17:00</wp:post_date>
		<wp:post_date_gmt>2011-09-28 18:17:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>got-windows-7-here-rsquo-s-an-easy-way-to-dual-boot-windows-8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="develop-meta"><![CDATA[Develop Meta]]></category>
		<category domain="post_tag" nicename="visual-studio-11"><![CDATA[Visual Studio 11]]></category>
		<category domain="post_tag" nicename="windows-8"><![CDATA[Windows 8]]></category>
	</item>
	<item>
		<title>Why don&#039;t people think that LoB apps can live in the Metro UI?</title>
		<link>http://jameschambers.com/2011/09/why-don-t-people-think-that-lob-apps-can-live-in-the-metro-ui/</link>
		<pubDate>Fri, 23 Sep 2011 18:18:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=951</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I'm not sure I understand the position that many (including MS insiders) are taking, saying that Metro will not be for LoB applications.</p> <p>I think we're actually going to head into a different class of applications, where we redefine what LoB means.&nbsp; I think we'll see less and less of lists, grids and data dumps and move towards a place where we introduce context, history and action.</p> <p>And I would argue that the Metro UI is the perfect place for this.</p> <h3>Let's Rethink LoB</h3> <p>Here's a screenshot from an LoB application I designed 2 years ago. The views were built in XAML. Please pay no mind to the cheesy rounded corners and glossy buttons, it was 2 years ago :).</p> <p><img alt="" src="http://www.bandofgeeks.net/blogimages/OutWiththeOld_F0F1/image.png" width="536" height="345"></p> <p>This is the screen a helpdesk technician would see when they "take" a call from the queue.&nbsp; It's integrated into the VoIP system.&nbsp; It's already run some background tests (see: "No Internet Access"). It allows the tech a chance to gauge the customers' mood (based on previous satisfaction surveys/time on hold/technical ability), confirm the contact details of the caller and then take some relevant action.&nbsp; If you take a look at it, there is quite a bit of data packed in, but it's all in context. It's by no means a Metro style but it doesn't look anything like a typical LoB app either and the user experience is quite different.</p> <p>They didn't start with a search, the data was ready based on context.</p> <p>They didn't start with a list of tickets and survey results, the information was visualized.</p> <p>They didn't surf through the "chrome" of application menus, relevant actions were presented.</p> <p>There is no reason that an app running in Metro can't be connected, integrated and contextual - in fact I think this will be the trend - and it's not a far leap from the above to something that fits that style.</p> <h3>Do Our Part: Cut Out the Uglies</h3> <p>These kinds of concepts should be more prevalent in LoB applications, IMO.&nbsp; I'm not sure why they're not.&nbsp; I've previously argued that we've trained users to expect ugly software (grids, lists, buttons, menus), which in turn has cultivated analysts and designers who ask developers to make more of the same.</p> <p>The thing that excites me about Metro is the opportunity we have to reinvent the whole thing, maybe even take some risks.</p> <p>So, why can't we change our perception of what an LoB application can be, and why can't we develop them in Metro?</p> <p>Necessity is the mother of innovation, so let's put ourselves in need.&nbsp; The next time you go to draft a UI up, throw out the grid, throw out text-only lists and try to think about what user is doing when they will be looking at that screen. Craft your actions as something that happens in context to what the user will do.&nbsp; These are the kinds of excercises that will help us bend our minds around designing for Metro.</p> <p>And, maybe, if we act like we don't have the old tools, we'll be forced to create something that changes the game.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>951</wp:post_id>
		<wp:post_date>2011-09-23 18:18:00</wp:post_date>
		<wp:post_date_gmt>2011-09-23 18:18:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>why-don-t-people-think-that-lob-apps-can-live-in-the-metro-ui</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="design"><![CDATA[Design]]></category>
		<category domain="category" nicename="develop-meta"><![CDATA[Develop Meta]]></category>
		<category domain="post_tag" nicename="metro"><![CDATA[Metro]]></category>
		<category domain="post_tag" nicename="windows-8"><![CDATA[Windows 8]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3786831263]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Preparing to Speak</title>
		<link>http://jameschambers.com/2011/09/preparing-to-speak/</link>
		<pubDate>Thu, 01 Sep 2011 18:19:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=961</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I’ve been revisiting my presentations on <a href="http://oldblog.jameschambers.com/speaking">ASP.NET MVC</a> and <a href="http://oldblog.jameschambers.com/speaking">NuGet</a>, as well as preparing my dojo-style course on web development (a deep dive session in MVC).&nbsp; I’ve got two engagements booked this fall (<a href="http://sdeconf.com/">SDEC</a> in September and <a href="http://www.prairiedevcon.com/">PrDC</a> in November) and want to make sure I knock them out of the park.</p> <p>As such, I’ve reviewed my notes on what technical content didn’t pan out, which jokes worked well, projects that I forgot to reset and the like.&nbsp; </p> <p>Here are some of the things that I try to do during a presentation, and something I’m working to improve in my existing talks:</p> <ul> <li>Ride a theme. Creating a story arc that helps you tie content together keeps the audience engaged and allows for you to keep building on past references. If you’re trying to pick a metaphor for the work you’re doing, don’t force it. Jokes become fluid in this space too, especially if you can back-reference.  <li>Use humor.&nbsp; Sometimes you can plan for this, sometimes it just happens. I got hit with a funny and only realized it once when it was up on the screen in front of the whole room. Content+Context can sometimes be hilarious.&nbsp; The other thing is that laughter draws folks in. If someone’s drifted off and they hear everyone laughing, they want to get right back into listening because they feel like they’ve missed something.  <li>If you use humor, land it.&nbsp; Don’t just make a joke, but make a <em>relevant</em> joke, and then use that to drive home an important point.&nbsp; People are listening after you make them laugh, so plan to use that attentiveness.  <li>Pay dividends.&nbsp; Remember that your audience is investing their time in you and that they do have expectations.&nbsp; Help them fulfill those by creating appropriate abstracts (to help them plan which session to attend), delivering content that is worth their time (to help them learn), equip them with things they can use right away (to get their buy-in) and follow up with post-talk support, code, links etc. (to provide participants with a landing).</li></ul> <p>&nbsp;</p> <p>I’ve dug up some posts that have been helpful in that planning and cover a lot of the bases for things you want to do when addressing a technical audience.&nbsp; Below are some tips of some of my favorite presenters that I have seen in-person and really admire their effort and the skill with which they execute when presenting.</p> <h4>Scott Hanselman </h4> <ul> <li><a href="http://www.hanselman.com/blog/11TopTipsForASuccessfulTechnicalPresentation.aspx">11 Top Tips for a Successful Technical Presentation</a>  <li><a href="http://www.hanselman.com/blog/TipsForPreparingForATechnicalPresentation.aspx">Tips for Preparing for a Technical Presentation</a>  <li><a href="http://www.hanselman.com/blog/content/radiostories/2003/01/22/scottHanselmansTipsForASuccessfulMsftPresentation.html">His Original “Tips for a successful MSFT Presentation”</a>  <li><a href="http://www.hanselman.com/blog/PDCTipsForGivingAGreatPresentationActuallyUsed.aspx">Some thoughts and ratings of PDC Presentations</a></li></ul> <p>&nbsp;</p> <h4>Phil Haack</h4> <ul> <li><a href="http://haacked.com/archive/2011/08/30/preflight-checklist.aspx">Preflight Checklist</a>  <li><a href="http://haacked.com/archive/2011/04/18/presentation-tips.aspx">Presentation Tips I’ve Learned From My (Many) Mistakes</a></li></ul> <p>&nbsp;</p> <p>Some other great tips come from <a href="http://blogs.msdn.com/b/kaevans/archive/2005/03/12/394527.aspx">Kirk Evans</a>, <a href="http://www.venkatarangan.com/blog/PermaLink.aspx?guid=dab57735-2976-40d7-a5d0-2e641ddea515">Venkatarangan</a> and <a href="http://weblogs.asp.net/jgalloway/archive/2006/12/05/tips-for-a-technical-presentation.aspx">Jon Galloway</a>.&nbsp; Finally, head over to Presentation Zen and watch some great presentations. Lots of material there.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>961</wp:post_id>
		<wp:post_date>2011-09-01 18:19:00</wp:post_date>
		<wp:post_date_gmt>2011-09-01 18:19:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>preparing-to-speak</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>
		<category domain="post_tag" nicename="prairiedevcon"><![CDATA[PrairieDevCon]]></category>
		<category domain="post_tag" nicename="sdec"><![CDATA[SDEC]]></category>
		<category domain="post_tag" nicename="speaking"><![CDATA[Speaking]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3986192764]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>A Little Geek Vertical Humour</title>
		<link>http://jameschambers.com/2011/08/a-little-geek-vertical-humour/</link>
		<pubDate>Mon, 15 Aug 2011 18:20:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=971</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Phil Haack posted a “<a href="http://haacked.com/archive/2011/08/12/random-friday-geek-verticals.aspx?utm_source=feedburner&amp;utm_medium=feed&amp;utm_campaign=Feed%3A+haacked+%28you%27ve+been+HAACKED%29">Geek Vertical</a>” challenge featuring the Gu and Scott Hanselman. I thought I’d tie my version into a recent post by <a href="http://www.hanselman.com/blog/RequestForCommentsIssuesWithNETAndMicrosoftProductVersioning.aspx">Mr. Hanselman</a>.</p> <p>&nbsp;</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/d1b9e4aea901_BEC0/gu-hanselman_4.jpg"><img title="gu-hanselman" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="gu-hanselman" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/d1b9e4aea901_BEC0/gu-hanselman_thumb_1.jpg" width="504" height="1568"></a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>971</wp:post_id>
		<wp:post_date>2011-08-15 18:20:00</wp:post_date>
		<wp:post_date_gmt>2011-08-15 18:20:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-little-geek-vertical-humour</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="beyond-code"><![CDATA[Beyond Code]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4001332628]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Setting the Resolution Using the Camera API in Windows Phone 7.1 Mango</title>
		<link>http://jameschambers.com/2011/08/setting-the-resolution-using-the-camera-api-in-windows-phone-7-1-mango/</link>
		<pubDate>Tue, 09 Aug 2011 18:22:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=981</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I'm working on an app that, believe it or not in today's ultra-high-res-world, doesn't require much resolution at all. The images are used as part of a simple on-screen sequence, and while they may ultimately be saved to local storage, they'll only ever be displayed in a 100x100 box on the display.</p> <p>Changing the resolution is fairly easy: we simply pick one of the resolutions available on the device and assign it to our PhotoCamera instance.&nbsp; Note that you can't pick a random resolution and set it on your own whim, it has to be a resolution supported by the hardware/config of the actual handset.</p> <p>You can find code on MSDN similar to the following that walks through the PhotoCamera.AvailableResolutions to discover what is available on the user's device:</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Setting-the-Resolution-Using-the.1-Mango_12E48/image_2.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Setting-the-Resolution-Using-the.1-Mango_12E48/image_thumb.png" width="547" height="161"></a></p> <p>In my case, however, I'm not really interested in iterating through the list; I want the smallest resolution possible. LINQ to the rescue!</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Setting-the-Resolution-Using-the.1-Mango_12E48/image_4.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Setting-the-Resolution-Using-the.1-Mango_12E48/image_thumb_1.png" width="574" height="66"></a></p> <p>Likewise, if you want to use the highest available resolution, modify the query to use OrderByDescending instead of the straight OrderBy.&nbsp; You can, of course, make that ultra-terse by making a direct assignment.</p> <p>You must first initialize the camera instance before you set the resolution.&nbsp; That means two things: you're going to have to assign the camera instance to the source of a VideoBrush and you're going to have to write an event handler for your Initialized event on the camera. As you spin up the form, you're find yourself doing something like this:</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Setting-the-Resolution-Using-the.1-Mango_12E48/image_10.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Setting-the-Resolution-Using-the.1-Mango_12E48/image_thumb_4.png" width="703" height="95"></a></p> <p>...and then in the event handler you're going to want to move back to the UI thread and set the resolution:</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Setting-the-Resolution-Using-the.1-Mango_12E48/image_8.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Setting-the-Resolution-Using-the.1-Mango_12E48/image_thumb_3.png" width="658" height="204"></a></p> <p>And there you have it!</p> <h3><font style="font-weight: bold">Side Note of Developer Love: The Windows Phone 7 APIs Make Me Happy Inside</font></h3> <p>I just want to mention this at this point: the WP7 APIs are awesome.&nbsp; I am helping to mentor a friend of mine as he broadens his skill set and I totally dig the opportunity to teach him how to write good code. We've the weirdest mentorship set up where I, a .NET guy for a decade now, am teaching a guy to program in Java on the Android dev stack.&nbsp; Needless to say, we're both doing a lot of learning.</p> <p>So here's the deal...unless I'm missing some magic cloud of awesomeness that the Android folks have cleverly buried away, WP7 devs seem to be at a distinct advantage.&nbsp; Case in point: Camera API.&nbsp; Want to display a live preview on WP7?&nbsp; Create a camera instance, assign it to a brush.&nbsp; Done. Android?&nbsp; Get out the fairy dust and sacrifice a unicorn.&nbsp; Sure there's a ton of samples out there, but good luck finding one that follows the same kind of convention that any other sample uses, and better luck still you manage to get it to run as-is on your version of the dev tools.</p> <p>At any rate, my buddy's plugging through the Android stuff and I'm having a blast helping him through the learning curves of everything from properties and constructors through to web service access and hardware APIs.&nbsp; I'm developing the app in the WP7 world and loving the experience, and he's drooling over Blend and slugging it out in Eclipse.&nbsp; He's come along way since "what's a class?" and it's only been a couple of months...today we were even having a conversation about threading!&nbsp; I'm looking forward to having another person in these parts whose face doesn't glaze over when I mention "protocol" or "inheritance".</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>981</wp:post_id>
		<wp:post_date>2011-08-09 18:22:00</wp:post_date>
		<wp:post_date_gmt>2011-08-09 18:22:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>setting-the-resolution-using-the-camera-api-in-windows-phone-7-1-mango</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="post_tag" nicename="windows-phone"><![CDATA[Windows Phone]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3782710517]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Automatic Generation of Metadata &#034;Buddy&#034; Classes</title>
		<link>http://jameschambers.com/2011/08/automatic-generation-of-metadata-buddy-classes/</link>
		<pubDate>Sun, 07 Aug 2011 18:23:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=991</guid>
		<description></description>
		<content:encoded><![CDATA[<p>MvcScaffolding.EntityMetadata is <a href="http://nuget.org/List/Packages/MvcScaffolding.EntityMetadata">now available on NuGet</a>.&nbsp; EntityMetadata generates metadata classes for you with attribute-based annotations to denote things like max length, human-readible display names, nullable fields and more.&nbsp; These classes are used to decorate your entity with a MetadataType attribute, giving you great labels on your views with only a few extra keystrokes.&nbsp; EntityMetadata gives you a custom scaffolder – ControllerWithEntityMetadata – to use and then calls the regular Controller scaffolder that you would normally call.</p> <h2><span style="font-weight: bold">How To Use It</span></h2> <p>Here's a quick step-by-step to use EntityMetadata from a new Asp.Net MVC 3 project:</p> <ol> <li>Add an EDMX (an Entity Framework designer file) to your project and add a few tables  <li>Right-click on the diagram and select "Add Code Generation Item..."  <li>Select the "ADO.NET DbContext Generator" item from the Data category  <li>Build your project  <li>In the Package Manager Console, type: Install-Package MvcScaffolding.EntityMetadata. This will check for and/or pull down EF, T4 Scaffolding, MvcScaffolding and EntityMetadata itself  <li>Still in the Package Manager Console, type: <strong>Scaffold ControllerWithEntityMetadata –Context YourContextNameHere</strong> (obviously replacing the last bit there with your context name). EntityMetadata will prompt you for the rest! </li></ol> <p>If you're having any issues, please see the FAQ at the bottom of this page, or visit the <a href="http://oldblog.jameschambers.com/EntityMetadata">project page here</a> and post comments/questions.</p> <h2><span style="font-weight: bold">When To Use It</span></h2> <p>Here's the scenario: You are using database-first development with the Entity Framework and would like to make use of MvcScaffolding.&nbsp; You think the only hiccup in your journey is that MvcScaffolding isn't too fond of the context and classes that are generated for you.&nbsp; Thankfully the Microsoft folks have taken care of the juicy bits for us and created the DbContext custom code template.</p> <p>All good, right?</p> <p>Except that all our views seem to be scaffolded in a not-so-human-friendly way and don't know anything about max length or required.</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Automatic-Generation-of-Metadata-Buddy-C_136D7/image_14.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Automatic-Generation-of-Metadata-Buddy-C_136D7/image_thumb_6.png" width="190" height="203"></a></p> <p>The recommended way to fix this is to create a metadata class with all the same fields as your entity. You attribute each of these fields with the appropriate attributes from ComponentModel &amp; DataAnnotations, setting up things like friendly names, whether or not fields are required and max length properties.&nbsp; Finally, you create a partial class for your main entity and decorate it with the MetadataType attribute, specifying your metadata class.</p> <p>And you have to do this for each entity in your model.</p> <p><strong>But we now have access to MvcScaffolding.EntityMetadata,</strong> available through NuGet, so all you need to do is type (or use tab-completion to help):</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Automatic-Generation-of-Metadata-Buddy-C_136D7/image_12.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Automatic-Generation-of-Metadata-Buddy-C_136D7/image_thumb_5.png" width="775" height="81"></a></p> <p>...and you'll see this:</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Automatic-Generation-of-Metadata-Buddy-C_136D7/image_2.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Automatic-Generation-of-Metadata-Buddy-C_136D7/image_thumb.png" width="512" height="265"></a></p> <p>...and your view will look like this:</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Automatic-Generation-of-Metadata-Buddy-C_136D7/image_4.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Automatic-Generation-of-Metadata-Buddy-C_136D7/image_thumb_1.png" width="193" height="207"></a></p> <p>...and more importantly, you'll have a Metadata class (with the required partial for the main class) generated for you here:</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Automatic-Generation-of-Metadata-Buddy-C_136D7/image_8.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Automatic-Generation-of-Metadata-Buddy-C_136D7/image_thumb_3.png" width="198" height="129"></a></p> <p>...which looks something like this:</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Automatic-Generation-of-Metadata-Buddy-C_136D7/image_10.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Automatic-Generation-of-Metadata-Buddy-C_136D7/image_thumb_4.png" width="285" height="374"></a></p> <p>There are a few things to point out that make this worth considering:</p> <ol> <li>These are created on-demand and can be <strong>created inline when you're scaffolding controllers</strong>  <li><strong>These are not overwritten</strong> (unless you scaffold them again with –Force)  <li>You are <strong>free to edit</strong> this, rename, make changes as you see fit  <li>It's hella fast and <strong>takes the tediousness out</strong> of having to create the 'buddy' classes for your entities  <li>You can call EntityMetadata <strong>even after you've scaffolded the view</strong> and your view will immediately take advantage of the newly provided metadata.  <li>It does it's best to appropriately put human-friendly DisplayNames </li></ol> <p>&nbsp;</p> <h2><span style="font-weight: bold">Here's the FAQs</span></h2> <h3><span style="font-weight: bold"><em>I don't have this DbContext code generation item you're talking about. Where do I get it?</em></span></h3> <p>Chances are you haven't installed the latest full bits of the Entity Framework, which you can get from <a href="http://www.microsoft.com/download/en/details.aspx?displaylang=en&amp;id=26825">MSDN</a>.&nbsp; This installs the DbContext template, a much more POCO-ish code generator than the standard ObjectContext.</p> <h3><em><span style="font-weight: bold">I'm getting errors about multiple primary keys with the same name. What is wrong?</span></em></h3> <p>Chances are the compiler's just got confused with a couple different versions of the same entity class name, like the one originally created with the ObjectContext on your Edmx.&nbsp; Clean your solution and rebuild.</p> <h3><em><span style="font-weight: bold">Is there a shorthand version so I don't have to follow the prompts?</span></em></h3> <p>Yes, just follow the same order as the prompts and you'll be fine (so, type Scaffold ControllerWithEntityMetadata YourDbmxFilename YourEntityname)</p> <h3><em><span style="font-weight: bold">Why does my database appear to have no data in it when I know it does?</span></em></h3> <p>You didn't specify the –Context argument to the scaffolder.&nbsp; Check the instructions in the walkthrough up the page a bit.&nbsp; Because EF 4.1 has code-first capabilities, and because MvcScaffolding will try to make up its own DB context, you've likely gone and created a new DB in either SqlCompact or SqlExpress on localhost.</p> <h3><em><span style="font-weight: bold">Why can't it find my EDMX file?</span></em></h3> <p>Right now, EntityMetadata just assumes it's in your Models folder. Sorry, best I could do!</p> <h3><em><span style="font-weight: bold">What if I need more help?</span></em></h3> <p>Please pop over to the <a href="http://oldblog.jameschambers.com/EntityMetadata">project page</a> and ask questions/add comments/demand features. <img class="wlEmoticon wlEmoticon-winkingsmile" style="border-top-style: none; border-left-style: none; border-bottom-style: none; border-right-style: none" alt="Winking smile" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Automatic-Generation-of-Metadata-Buddy-C_136D7/wlEmoticon-winkingsmile_2.png"></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>991</wp:post_id>
		<wp:post_date>2011-08-07 18:23:00</wp:post_date>
		<wp:post_date_gmt>2011-08-07 18:23:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>automatic-generation-of-metadata-buddy-classes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="post_tag" nicename="entity-framework"><![CDATA[Entity Framework]]></category>
		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3781207238]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>34061</wp:comment_id>
			<wp:comment_author><![CDATA[Jeremy]]></wp:comment_author>
			<wp:comment_author_email>bee002@hotmai.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>175.136.232.154</wp:comment_author_IP>
			<wp:comment_date>2013-04-24 02:25:59</wp:comment_date>
			<wp:comment_date_gmt>2013-04-24 02:25:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hi i am new to this , as i using ADO.Net Entity Data Model in VS2012, 
i added a edmx file under models folder then , i install "MvcScaffolding.EntityMetadata"  as what you told ,

then i build , then i try to scaffold Scaffold ControllerWithEntityMetadata
then it prompt me for edmx file name , i provided , then 
Model i also provided 
but it show this error

https://dl.dropboxusercontent.com/u/50999690/ControllerWithEntityMetadata.PNG 

i am stucked for 2 days...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[2036811777]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Questions about the ASP.NET MVC 3 Framework</title>
		<link>http://jameschambers.com/2011/07/questions-about-the-asp-net-mvc-3-framework/</link>
		<pubDate>Tue, 26 Jul 2011 18:24:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=1001</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Here is a collection of the most common questions I've run into when working with developers who are new to application development using the ASP.NET MVC 3 Framework.&nbsp; I will continue to expand this list as questions come up, feel free to ask yours in the comments below!</p> <p>&nbsp;</p> <h1>Creating New Projects</h1> <h3><font style="font-weight: bold">What if I don’t like the look of the default project?</font></h3> <p>You really have two options here; you can edit the _Layout.cshtml file located in Views\Shared\ to make it your own (the Site.css stylesheet is in the Content folder), or you can opt to start with an empty project. You’ll get a very clean _Layout.cshtml at this point, and a really reduced Site.css to work with. Remember that getting your project going is as easy as adding controllers and views, but you won’t have the authentication bits that the Internet Application template gives you.</p> <h3><font style="font-weight: bold">Is it okay to use the ASPX View Engine instead of Razor?</font></h3> <p>Of course! If you’re worried about learning the pattern as well as a new view engine, you can start with a syntax you’re more comfortable with. You will have a harder time finding source samples, however, as most folks on the MVC Framework are using Razor. Also note that there is a different paradigm at play in MVC. ASP.NET Web Forms use a PageController pattern and make use of view state. You don’t have those or page events in the same way in MVC, so don’t be surprised if you don’t find them!</p> <h3><font style="font-weight: bold">Why should(n’t) I use HTML 5 semantic markup?</font></h3> <p>HTML5 and CSS 3 aren’t fully supported on all browsers and the implementations that are there aren’t yet consistent. What’s important to remember is that HTML5 is HTML4 <em>plus</em> an assortment of new features. If you’re targeting HTML5 and using the new features you’ll still need to write alternate views (degrade gracefully) unless you have a fixed deployment environment (like corporate intranet), however, it’s important to remember that the semantic tags <em>do</em> add value to your page today, they <em>are</em> backwards compatible (especially with Modernizr) and are now starting to be better read and understood by search engines.</p> <p>&nbsp;</p> <h1>Controllers and Views</h1> <h3><font style="font-weight: bold">Do controller actions have to return Views?</font></h3> <p>Not at all! You can return plain text, images, PDFs, page fragments (typically called partial views), XML or JSON…pretty much whatever you like.</p> <h3><font style="font-weight: bold">Why isn't a link to my new controller in the Menu?</font></h3> <p>Navigation isn’t something that can be fully free, but it can be easy. We could create a link in our _Layout.cshtml file, and this would be a great exercise for the reader. If you're working from a clean project, you want to add a third LI element to the NAV’s UL. In the new LI, you can follow the pattern of the other menu items and use the HtmlHelper extension method to render links. Using Visual Studio’s IntelliSense you can figure out which order to pass in the label of the link, the action and the controller you’re looking for. Or just re-read that sentence.</p> <h3><font style="font-weight: bold">When I type return View() how does it know which view to return?</font></h3> <p>This, again, is part of the beauty of convention over configuration.&nbsp; The view that will be returned is the one that has the same name as the method in the controller. If you have a method in the Food controller with the following implementation:</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Questions-about-the-.NET-MVC-3-Framework_A869/image_3.png" width="254" height="70"></p> <p>...then you're going to need a view named SpicyPickles in the Food folder inside of Views.</p> <p>You're not bound by this, however, and you can return alternate views if you like by passing the name of the view as a string:</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Questions-about-the-.NET-MVC-3-Framework_A869/image_6.png" width="309" height="73"></p> <p>&nbsp;</p> <h1>Models</h1> <h3><font style="font-weight: bold">Why are my model classes not showing up in the MVC tooling?</font></h3> <p>The most likely reason is that you have not built you application. The MVC tooling looks at types in your assemblies. If you haven't built your app since you added those model types to your project (or modified them), the tooling won't pick up all the correct bits for you.</p> <h3><font style="font-weight: bold">I'm having trouble binding my model when submitting data to my controller. How do I debug the request?</font></h3> <p>There's a couple of things you should try to do. First, get a copy of Firebug running (in Firefox) or use the developer tools in IE9 or Chrome.&nbsp; You need to examine the message you're sending to the server. Check to make sure that your parameters are named correctly, conform to the correct type and are actually capturing the correct values from the client. Set a breakpoint in your controller and examine the object. Make sure the correct action is being invoked.&nbsp; <a href="http://getglimpse.com/">Glimpse</a> is also coming a long way in revealing how your request is seen by the server and can easily be installed via NuGet.</p> <p>&nbsp;</p> <h1>Authentication</h1> <h3><font style="font-weight: bold">Do I have to use the ASPNETDB.MDB that is created for me for authentication?</font></h3> <p>No, you can setup your own database following <a href="http://oldblog.jameschambers.com/blog/setting-up-an-alternate-data-source-for-your-asp.net-authentication-provider">these steps</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1001</wp:post_id>
		<wp:post_date>2011-07-26 18:24:00</wp:post_date>
		<wp:post_date_gmt>2011-07-26 18:24:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>questions-about-the-asp-net-mvc-3-framework</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[Asp.Net MVC]]></category>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="category" nicename="design"><![CDATA[Design]]></category>
		<category domain="category" nicename="develop-meta"><![CDATA[Develop Meta]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3839891934]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Current Development Must-Haves for ASP.NET MVC 3</title>
		<link>http://jameschambers.com/2011/07/current-development-must-haves-for-asp-net-mvc-3/</link>
		<pubDate>Tue, 26 Jul 2011 18:26:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=1011</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I recently wanted to replace the exhaust manifold on my vehicle. I looked at the part online, and there were <em>maybe</em> 8 bolts that I needed to remove/replace.&nbsp; As it turns out, those 8 bolts are part of a 112 step process that takes an experienced mechanic 5-6 hours to complete. If he has the right tools.</p> <p>The ASP.NET 3 Framework gives us a lot of help in achieving our web application development chores, but it's best to have the right tools.</p> <p>Here's a current checklist (July 2011) of the tools you should have in your kit:</p> <ul> <li>A copy of Visual Studio 2010 (<a href="http://www.microsoft.com/visualstudio/en-us/try">trial</a>, <a href="http://www.microsoft.com/visualstudio/en-us/products/2010-editions/visual-web-developer-express">express</a>, <a href="http://www.microsoft.com/web/websitespark/">free</a>)  <li> <div align="left">VS2010 <a href="http://www.microsoft.com/download/en/details.aspx?id=23691">Service Pack 1</a></div> <ul> <li> <div align="left">This one's important!&nbsp; VS 2010 SP1 gives you the most updated tooling for MVC.</div></li></ul> <li>The NuGet Package Manager (<a href="http://visualstudiogallery.msdn.microsoft.com/27077b70-9dad-4c64-adcf-c7cf6bc9970c">plugin</a>, <a href="http://nuget.codeplex.com/releases">console</a>)  <ul> <li>Also important! NuGet lets you access great libraries for your project, including MvcScaffolding, Ie9ify and more  <li>It's installed in SP1, but make sure you get the latest updates</li></ul> <li>The Visual Studio 2010 Productivity Power Tools (<a href="http://visualstudiogallery.msdn.microsoft.com/d0d33361-18e2-46c0-8ff2-4adea1e34fef">plugin</a>)  <li>An LED <a href="http://www.thinkgeek.com/homeoffice/lights/59e0/">Binary Clock</a>. It won't help you with MVC development, but it looks cool on your desk  <li>The Entity Framework <a href="http://www.microsoft.com/download/en/details.aspx?displaylang=en&amp;id=26825">version 4.1</a>  <ul> <li>The "project version" binary is pulled down by new projects in MVC 3 through NuGet, but the full version adds other tooling and templates</li></ul></li></ul> <p>&nbsp;</p> <p>Also, check out <a href="http://oldblog.jameschambers.com/blog/best-links-to-getting-started-in-asp.net-mvc3">this post</a> I put together with a ton of handy links for your MVC 3 adventures.</p> <p>Missing anything? What do you use on a day-to-day basis that's not on this short-but-powerful list?</p> <p>By the way, the only thing in my mechanic toolkit is a hammer and a set of pliers.&nbsp; I left the exhaust manifold for the pros.</p> <p>Cheers!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1011</wp:post_id>
		<wp:post_date>2011-07-26 18:26:00</wp:post_date>
		<wp:post_date_gmt>2011-07-26 18:26:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>current-development-must-haves-for-asp-net-mvc-3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[Asp.Net MVC]]></category>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="category" nicename="develop-meta"><![CDATA[Develop Meta]]></category>
		<category domain="post_tag" nicename="visual-studio-2010"><![CDATA[Visual Studio 2010]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3841475557]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Setting up an Alternate Data Source for your ASP.NET Authentication Provider</title>
		<link>http://jameschambers.com/2011/07/setting-up-an-alternate-data-source-for-your-asp-net-authentication-provider/</link>
		<pubDate>Sun, 24 Jul 2011 18:27:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=1021</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Alternate_987F/image_2.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: right; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" align="right" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Alternate_987F/image_thumb.png" width="225" height="316"></a>The authentication provider that is baked in to ASP.NET for free is a great start to managing users on your site, and gives you full capabilities around roles, profiles and authorization within your application.&nbsp; The default project template for internet applications includes functionality designed around it. I'm a big fan of these free jump-starts as they’re also easy to swap out.&nbsp; For the purposes of this post, I'm using Visual Studio 2010, the ASP.NET MVC Framework and SQL Server 2008 Express.</p> <p>By default, if you try to create an account without prior configuration, the ASP.NET bits happily go about creating a local MDF for you with all the required tables and procs.&nbsp; This is great, if you never intend to save anything else in your database, you don’t wish to rename it, and you don’t want to use an existing data source, but it’s also not the only way to go about getting a data source for your authentication needs.</p> <p>If you're scratching your head after creating a user account, wondering where the MDF ended up, look no further than Visual Studio's magic show-me-my-flipping-files button.&nbsp; The data file will be in your App_Data directory, but not included by default in the project.</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Alternate_987F/image_6.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Alternate_987F/image_thumb_2.png" width="260" height="158"></a></p> <h2>&nbsp;</h2> <h2>Provisioning Your Own Data Source</h2> <p>Thankfully, the good folks at Microsoft have provided us with a tool to create these tables and procs in our own databases as well.</p> <p>First, we're going to need to get a landing spot for our data, so fire up SQL Server Management Studio and connect to your favourite database server. This can be any SQL Server edition (including Express, <a href="http://www.microsoft.com/sqlserver/en/us/editions/express.aspx">which is free</a>), running locally or out on your network.&nbsp; Create a new database, I called mine <strong>NotJustAnAuthDatabase</strong>.</p> <p>Open a Visual Studio Command Prompt as Administrator and type the following:</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Alternate_987F/image_8.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Alternate_987F/image_thumb_3.png" width="671" height="92"></a></p> <p>While you can pass in arguments from the command line, there's also a wizard that launches in the absence of them.&nbsp; This makes it easy to select the database and apply the authentication data model.&nbsp; </p> <p>Step through the wizard.&nbsp; We're going to Configure SQL Server for application services.&nbsp; Notice the option to remove the service information?&nbsp; That’s why I said it's easy to swap!</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Alternate_987F/image_11.png" width="446" height="149"></p> <p>Next, we specify the server and database name that we want to add authentication support to:</p> <p><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Alternate_987F/image_14.png" width="437" height="339"></p> <p>Click next a couple times, then finish.&nbsp; Your data source is all setup!&nbsp; You can check your handiwork in SSMS:</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Alternate_987F/image_16.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Alternate_987F/image_thumb_6.png" width="260" height="254"></a></p> <p>&nbsp;</p> <h2>Getting ASP.NET In Tune With Our Work</h2> <p>There are only a couple of small steps left to point our provider at the new database.&nbsp; First, we'll need to adjust our ApplicationServices connection string.&nbsp; Pop back into Visual Studio and open up web.config.&nbsp; You'll need to work out whatever your connection string will be for your server and database. Mine looked like this:</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Alternate_987F/image_18.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Alternate_987F/image_thumb_7.png" width="663" height="87"></a></p> <p>Next, you can delete the MDF file that was created for you (if you had one created).&nbsp; Remember to use the Show All Files button to reveal the database if it does not at first appear in Solution Explorer.&nbsp; Oh, and a note here: you're deleting a database.&nbsp; It may hold data, so think that through if you want something in it.</p> <p>When you re-run your app you will now be attached to the freshly-configured data source for authentication, allowing registration to your new backend.</p> <h2>A Few Cleanup Points</h2> <p>First, authentication isn't the only thing that's covered in Application Services, there is a lot of goodness baked in there. You might consider <a href="http://msdn.microsoft.com/en-us/library/014bec1k.aspx">using profiles</a> as well.&nbsp; Once a user is authenticated, you can make use of the very simple authorization attributes in ASP.NET MVC, so there's all kinds of peripheral benefits too, not just the benefit of not writing registration/role/authentication code for users on your site.</p> <p>Secondly, this isn't new.&nbsp; In fact, the first bits of these services were shared with us in late 2005 when we were introduced to the .NET 2.0 Framework.&nbsp; So why am I posting about it now?&nbsp; As easy as it is to use, as comprehensive as the toolkit seems, and as mature as the components are, I still run into senior developers who have never used it or explored it.&nbsp; File –&gt; New, people! <strong>File –&gt; New!!!</strong></p> <p>Another reason is that there are lots of new developers out there who aren't sure by looking at VS2005 docs if that material is relevant any more. Some of it isn't. Some is, but the IDE looks different.&nbsp; It may seem cumbersome at first glance to get all this going, but I'm hoping that by showing you all you have to do is run a wizard and update a string that you'll consider giving it a try.</p> <p>Finally, just remember that if you're mid-stream on a project and you make a switch out you're going to need to first <strong>back up your data</strong>. Setting up the service components in an alternate location doesn't port your users or roles and if you nuke your existing data store that data will be gone.</p> <p>Best of luck in your authentication adventures!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1021</wp:post_id>
		<wp:post_date>2011-07-24 18:27:00</wp:post_date>
		<wp:post_date_gmt>2011-07-24 18:27:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>setting-up-an-alternate-data-source-for-your-asp-net-authentication-provider</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[Asp.Net MVC]]></category>
		<category domain="post_tag" nicename="authentication"><![CDATA[Authentication]]></category>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3794969716]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Asp.Net MvcScaffolding Generates Extra Properties in Views, Or, &#034;The Type Was Not Mapped&#034;</title>
		<link>http://jameschambers.com/2011/07/asp-net-mvcscaffolding-generates-extra-properties-in-views/</link>
		<pubDate>Fri, 15 Jul 2011 18:28:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=1031</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I’m not sure if this is something widely seen, but I ran into a situation here where I was changing my data model and ended up having to drop my Entity Framework EDMX file from my project (with all the changes, it was just easier to start over). I hit a wall when I tried to get back to regenerating my views. I am building a simple data entry tool with about seven or eight tables using Asp.Net Mvc3 with the <a href="http://nuget.org/List/Packages/MvcScaffolding">MvcScaffolding</a> package installed via NuGet.</p> <p>When I generated my views everything compiled properly (I’m done, right?!) but the views wouldn’t render. There was an extra property in the view for nearly every property on the entity (anything other than a simple type).&nbsp; So, for example:</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/MvcScaffolding_145CD/image_2.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/MvcScaffolding_145CD/image_thumb.png" width="511" height="98"></a></p> <p>Here is an NcrDisposition property, but MvcScaffolding also created an NcrDispositionReference property.&nbsp; It was creating each field and adding “Reference” on the end of the field name.</p> <p>The problem that I first ran into was along the lines of this:</p> <blockquote> <p>The type YOUR_TYPE was not mapped. Check that the type has not been explicitly excluded by using the Ignore method or NotMappedAttribute data annotation. Verify that the type was defined as a class, is not primitive, nested or generic, and does not inherit from EntityObject</p></blockquote> <p>Both of these symptoms were from the same source.</p> <h2>Where Things Went Wrong</h2> <p>As it turns out I was working off of an existing database, building an EDMX and running scaffolding against that.&nbsp; When you are using EF Code First (no EDMX) and MvcScaffolding, the data context and classes are built up off the lighter weight DbContext objects (rather than the default EDMX code gen classes) through the T4 Scaffolding installed along with the package.&nbsp; But MvcScaffolding (version 1.0, anyways) doesn’t play nicely with the classes straight from the EDMX.</p> <p>Thankfully, the fix is easy.&nbsp; What we’re going to do is add some T4 templates that do the heavy lifting for us and bring our context and entity classes back in line with what MvcScaffolding is expecting.</p> <blockquote> <p><em>If you’re where I’m at, MvcScaffolding likely created a new data context class for you.&nbsp; You can delete this class, as we’re going to have it auto-generated for us.&nbsp; Just keep in mind that you will lose any changes/customizations that you’ve made to this class.&nbsp; For me this turned out to be great: I had to hand-bomb all my DbSets in the first place…something that should trigger a “hey this kinda smells” reaction.</em></p></blockquote> <p>Pop open your EDMX and right click on the design canvas, select <strong>Add Code Generation Item…</strong></p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/MvcScaffolding_145CD/image_4.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/MvcScaffolding_145CD/image_thumb_1.png" width="240" height="234"></a></p> <p>Make sure you select “Code” from the Installed Templates menu, then select the DbContext Generator, name it appropriately and let it do it’s thing.</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/MvcScaffolding_145CD/image_6.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/MvcScaffolding_145CD/image_thumb_2.png" width="588" height="333"></a></p> <p>Next, we’re going to invoke the scaffolder to generator our views and controller.&nbsp; Because we’ve already done this, we’re going to need to use the -Force option. As well, because the T4 template has generated our context for us, we’re going to pass that in as well so the MvcScaffolding bits know where to find the DbSets.</p> <p><span style="font-family: lucida console" face="Lucida Console">&nbsp;&nbsp;&nbsp; <span style="color: #666666" color="#666666">Scaffold Controller <strong>YourEntity</strong> -DbContextType <strong>YourDataContextType</strong> -Force</span></span></p> <p>And blamo! Good to go!</p> <p>Note that MvcScaffolding is sensitive to the fact that the context already contains the property for the entity in question. For me, the package manager console looked like this when it got going:</p> <p><a href="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/MvcScaffolding_145CD/image_8.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/MvcScaffolding_145CD/image_thumb_3.png" width="464" height="53"></a></p> <p>There’s more than one thread on the <a href="http://mvcscaffolding.codeplex.com/discussions">CodePlex</a> site about this, so hopefully this helps get some folks through!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1031</wp:post_id>
		<wp:post_date>2011-07-15 18:28:00</wp:post_date>
		<wp:post_date_gmt>2011-07-15 18:28:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>asp-net-mvcscaffolding-generates-extra-properties-in-views</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[Asp.Net MVC]]></category>
		<category domain="category" nicename="code-dive"><![CDATA[Code Dive]]></category>
		<category domain="post_tag" nicename="scaffolding"><![CDATA[Scaffolding]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3797498798]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Back on the Bike</title>
		<link>http://jameschambers.com/2011/07/back-on-the-bike/</link>
		<pubDate>Thu, 14 Jul 2011 18:29:00 +0000</pubDate>
		<dc:creator><![CDATA[james.chambers]]></dc:creator>
		<guid isPermaLink="false">http://jameschambers.azurewebsites.net/?p=1041</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Work has been overly busy lately, almost draining, as I’m in high season for maintenance.&nbsp; With very little new work, it’s long been my challenge to keep motivated when switching from “hunter” to “farmer” mode.</p> <p>Personally, we’ve had a rough streak as a family, too, having to endure now 12 funerals in the last nine months. This is one of the realities you have to face when you and your spouse have a close family, counting a combined (whopping) total of over 100 blood relatives, nearly all of which are older than you.&nbsp; It’s been a sad couple of seasons at home.</p> <h2>Sweat to the Rescue</h2> <p>I have always found that getting my heart going helps to clear my mind.&nbsp; I grew up being fairly active playing varsity high school sports and spent six years as a competitive swimmer.&nbsp; I have cycled from Montreal to Banff on a national relay team benefitting Juvenile Diabetes and have put in over 7,000kms on the bike in the last three years.&nbsp; But none in this calendar year.</p> <p>I have always found that getting a bit of time to work the muscles and think through problems can help me make great strides.&nbsp; In fact, I would argue that some of my best coding – or at least, solving some of my hardest programming challenges – has been away from the keyboard. </p> <h2>100kms and Counting</h2> <p>I’m no longer an ideal candidate for the swim team, nor did I fully grow to a size that any self-respecting volleyball team would give me anything other than bench time, but I do still have my road bike.&nbsp; Technically, I still have my speedos too, but I’m not getting into those anytime soon! <img class="wlEmoticon wlEmoticon-winkingsmile" style="border-top-style: none; border-left-style: none; border-bottom-style: none; border-right-style: none" alt="Winking smile" src="http://oldblog.jameschambers.com/Media/Default/Windows-Live-Writer/Back-on-the-Bike_E4F5/wlEmoticon-winkingsmile_2.png"></p> <p>So my wife and I have reciprocally committed to exercise time and appropriate support for each other.&nbsp; After supper, she heads out for a good brisk walk while the kids and I clean up supper.&nbsp; When the kids head off to bed and she’s putting the baby down I’ve been jumping on my bike.&nbsp; </p> <p>In the last 4 days I’ve been increasing my kms and decreasing my time.&nbsp; Last night I posted just over 26kms in a cool 54 minutes riding through the city, an average speed of about 29km/hr (18mph).</p> <p>Today at work I started with more energy, cleaned off some outstanding maintenance issues and was rewarded by getting to spike out a new project out in WCF and WP7.</p> <p>It’s amazing what a little exercise can do for you.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1041</wp:post_id>
		<wp:post_date>2011-07-14 18:29:00</wp:post_date>
		<wp:post_date_gmt>2011-07-14 18:29:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>back-on-the-bike</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="beyond-code"><![CDATA[Beyond Code]]></category>
		<category domain="post_tag" nicename="not-coding-at-all"><![CDATA[Not Coding At All]]></category>
		<category domain="post_tag" nicename="real-life"><![CDATA[Real Life]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4176150616]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
